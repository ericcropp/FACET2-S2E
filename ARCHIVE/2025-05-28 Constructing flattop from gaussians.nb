(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    159593,       3028]
NotebookOptionsPosition[    158224,       2997]
NotebookOutlinePosition[    158623,       3013]
CellTagsIndexPosition[    158580,       3010]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"targetData", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", "x", "]"}], "<", "1"}], ",", "1", ",", "0"}], 
        "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "5"}], ",", "5", ",", "0.1"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", "targetData", "]"}]}], "Input",
 CellChangeTimes->{{3.95746610574933*^9, 3.9574661402009087`*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"5c74a527-81ae-429b-9dc4-336d6f80ea34"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[
      TagBox[
       {RGBColor[0.24, 0.6, 0.8], PointSize[0.009166666666666668], 
        AbsoluteThickness[2], PointBox[CompressedData["
1:eJxd1LlKA1EYxfHJvu95AV9AcMVCiM/gI4hxqXwLaxvBqGBjbWVjFVsximBl
pSAIgqCiqCEhar6TnI85F8LkR+7938nMMBMrW8vNaBAEzf/P8IhRPx9/228N
R42eseG+6gxHlV6z4cZwo1eRnhu9svTcGG6sL8n8Im3btQrSz0vPjV5Oelnp
ZaSXlp4bvZT0ktJL0JbrxKXnRi8mvaj0ItIL6F+Mdnj9oB2e36enbb8ejX63
He59S+9Lep/S+5DeOz2w3it9aetfRn5r7Nn8Z3rV9nuip6z/SPetd0/v2vo7
etLm39I79vsFvW0+o3E8XRz7BL83xj7GenoBffoI+9MxOz7Q8zh/ehP/jz7E
/6dvcH3oaOg8g+AA15eew/Wnr3F/6A3cPxq9H+l1pdeTXl96AzqCw1J4vhvv
hwi9juebnsXzT6MXl54b55uQXlJ6KemlpedGLyO9rPRy0stLz41egcb1Kkqv
JL2y7O8evT9lfYUevX+lV5Wee/R+l15Nem706vQfWYF46w==
         "]]},
       Annotation[#, "Charting`Private`Tag#1"]& ],
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
     StyleBox[
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction["DynamicHighlight", {{
           Annotation[{
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2]], 
             Point[CompressedData["
1:eJxd1LlKA1EYxfHJvu95AV9AcMVCiM/gI4hxqXwLaxvBqGBjbWVjFVsximBl
pSAIgqCiqCEhar6TnI85F8LkR+7938nMMBMrW8vNaBAEzf/P8IhRPx9/228N
R42eseG+6gxHlV6z4cZwo1eRnhu9svTcGG6sL8n8Im3btQrSz0vPjV5Oelnp
ZaSXlp4bvZT0ktJL0JbrxKXnRi8mvaj0ItIL6F+Mdnj9oB2e36enbb8ejX63
He59S+9Lep/S+5DeOz2w3it9aetfRn5r7Nn8Z3rV9nuip6z/SPetd0/v2vo7
etLm39I79vsFvW0+o3E8XRz7BL83xj7GenoBffoI+9MxOz7Q8zh/ehP/jz7E
/6dvcH3oaOg8g+AA15eew/Wnr3F/6A3cPxq9H+l1pdeTXl96AzqCw1J4vhvv
hwi9juebnsXzT6MXl54b55uQXlJ6KemlpedGLyO9rPRy0stLz41egcb1Kkqv
JL2y7O8evT9lfYUevX+lV5Wee/R+l15Nem706vQfWYF46w==
              "]]}, "Charting`Private`Tag#1"]}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{-5., 5.000000000000001}, {0, 1.}}, 
            "Frame" -> {{False, False}, {False, False}}, 
            "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
            "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
            GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               PointSize[0.009166666666666668], 
               RGBColor[0.24, 0.6, 0.8], 
               AbsoluteThickness[2]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{-5., 5.000000000000001}, {0, 1.}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>]],
      Selectable->False]},
    Annotation[{{
       Annotation[{
         Directive[
          PointSize[0.009166666666666668], 
          RGBColor[0.24, 0.6, 0.8], 
          AbsoluteThickness[2]], 
         Point[CompressedData["
1:eJxd1LlKA1EYxfHJvu95AV9AcMVCiM/gI4hxqXwLaxvBqGBjbWVjFVsximBl
pSAIgqCiqCEhar6TnI85F8LkR+7938nMMBMrW8vNaBAEzf/P8IhRPx9/228N
R42eseG+6gxHlV6z4cZwo1eRnhu9svTcGG6sL8n8Im3btQrSz0vPjV5Oelnp
ZaSXlp4bvZT0ktJL0JbrxKXnRi8mvaj0ItIL6F+Mdnj9oB2e36enbb8ejX63
He59S+9Lep/S+5DeOz2w3it9aetfRn5r7Nn8Z3rV9nuip6z/SPetd0/v2vo7
etLm39I79vsFvW0+o3E8XRz7BL83xj7GenoBffoI+9MxOz7Q8zh/ehP/jz7E
/6dvcH3oaOg8g+AA15eew/Wnr3F/6A3cPxq9H+l1pdeTXl96AzqCw1J4vhvv
hwi9juebnsXzT6MXl54b55uQXlJ6KemlpedGLyO9rPRy0stLz41egcb1Kkqv
JL2y7O8evT9lfYUevX+lV5Wee/R+l15Nem706vQfWYF46w==
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
      "LayoutOptions" -> <|
       "PanelPlotLayout" -> <||>, 
        "PlotRange" -> {{-5., 5.000000000000001}, {0, 1.}}, 
        "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
        "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
        "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.24, 0.6, 0.8], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.24, 0.6, 0.8], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.95, 0.627, 0.1425], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.455, 0.7, 0.21], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.578, 0.51, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.4, 0.64, 1.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1., 0.75, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.8, 0.4, 0.76], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.637, 0.65, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-5., 5.000000000000001}, {0, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.957466133410655*^9, 3.957466140489944*^9}, {
   3.957466256528344*^9, 3.957466260745639*^9}, 3.957466293021562*^9, 
   3.957466370390781*^9, 3.957466459592148*^9, 3.957466602373353*^9, {
   3.9574666558339777`*^9, 3.9574666616485*^9}, {3.957466703026396*^9, 
   3.95746671763724*^9}, 3.957466964357127*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"825bbe03-575b-45b0-b0a6-aae074164258"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", " ", "=", " ", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"expr", " ", "=", " ", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     SubscriptBox["a", "i"], "*", 
     RowBox[{"Exp", "[", 
      FractionBox[
       RowBox[{"-", 
        SuperscriptBox["x", "2"]}], 
       RowBox[{"2", " ", 
        SuperscriptBox[
         SubscriptBox["\[Sigma]", "i"], "2"]}]], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"coeffs", " ", "=", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["a", "i"], ",", 
        SubscriptBox["\[Sigma]", "i"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"nlm", "=", 
  RowBox[{"NonlinearModelFit", "[", "\[IndentingNewLine]", 
   RowBox[{
   "targetData", ",", "\[IndentingNewLine]", "expr", ",", 
    "\[IndentingNewLine]", "coeffs", ",", "\[IndentingNewLine]", "x", ",", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"Method", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<NMinimize\>\"", ",", 
        RowBox[{"\"\<Method\>\"", "->", "\"\<NelderMead\>\""}]}], "}"}]}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"Method", "->", "\"\<NMinimize\>\""}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.9574661586678877`*^9, 3.9574662249214497`*^9}, {
  3.957466255965168*^9, 3.95746629218071*^9}, {3.9574663697403183`*^9, 
  3.9574663698315907`*^9}, {3.957466458960684*^9, 3.9574664590314503`*^9}, {
  3.9574665893067083`*^9, 3.9574666013054037`*^9}, {3.957466652224395*^9, 
  3.957466660710905*^9}, {3.957466699260079*^9, 3.957466716851322*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"37b05baf-2992-46bb-8751-607ce48c9c72"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["x", "2"], 
      RowBox[{"2", " ", 
       SubsuperscriptBox["\[Sigma]", "1", "2"]}]]}]], " ", 
   SubscriptBox["a", "1"]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["x", "2"], 
      RowBox[{"2", " ", 
       SubsuperscriptBox["\[Sigma]", "2", "2"]}]]}]], " ", 
   SubscriptBox["a", "2"]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["x", "2"], 
      RowBox[{"2", " ", 
       SubsuperscriptBox["\[Sigma]", "3", "2"]}]]}]], " ", 
   SubscriptBox["a", "3"]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["x", "2"], 
      RowBox[{"2", " ", 
       SubsuperscriptBox["\[Sigma]", "4", "2"]}]]}]], " ", 
   SubscriptBox["a", "4"]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["x", "2"], 
      RowBox[{"2", " ", 
       SubsuperscriptBox["\[Sigma]", "5", "2"]}]]}]], " ", 
   SubscriptBox["a", "5"]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["x", "2"], 
      RowBox[{"2", " ", 
       SubsuperscriptBox["\[Sigma]", "6", "2"]}]]}]], " ", 
   SubscriptBox["a", "6"]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["x", "2"], 
      RowBox[{"2", " ", 
       SubsuperscriptBox["\[Sigma]", "7", "2"]}]]}]], " ", 
   SubscriptBox["a", "7"]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["x", "2"], 
      RowBox[{"2", " ", 
       SubsuperscriptBox["\[Sigma]", "8", "2"]}]]}]], " ", 
   SubscriptBox["a", "8"]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["x", "2"], 
      RowBox[{"2", " ", 
       SubsuperscriptBox["\[Sigma]", "9", "2"]}]]}]], " ", 
   SubscriptBox["a", "9"]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["x", "2"], 
      RowBox[{"2", " ", 
       SubsuperscriptBox["\[Sigma]", "10", "2"]}]]}]], " ", 
   SubscriptBox["a", "10"]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["x", "2"], 
      RowBox[{"2", " ", 
       SubsuperscriptBox["\[Sigma]", "11", "2"]}]]}]], " ", 
   SubscriptBox["a", "11"]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["x", "2"], 
      RowBox[{"2", " ", 
       SubsuperscriptBox["\[Sigma]", "12", "2"]}]]}]], " ", 
   SubscriptBox["a", "12"]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["x", "2"], 
      RowBox[{"2", " ", 
       SubsuperscriptBox["\[Sigma]", "13", "2"]}]]}]], " ", 
   SubscriptBox["a", "13"]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["x", "2"], 
      RowBox[{"2", " ", 
       SubsuperscriptBox["\[Sigma]", "14", "2"]}]]}]], " ", 
   SubscriptBox["a", "14"]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["x", "2"], 
      RowBox[{"2", " ", 
       SubsuperscriptBox["\[Sigma]", "15", "2"]}]]}]], " ", 
   SubscriptBox["a", "15"]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["x", "2"], 
      RowBox[{"2", " ", 
       SubsuperscriptBox["\[Sigma]", "16", "2"]}]]}]], " ", 
   SubscriptBox["a", "16"]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["x", "2"], 
      RowBox[{"2", " ", 
       SubsuperscriptBox["\[Sigma]", "17", "2"]}]]}]], " ", 
   SubscriptBox["a", "17"]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["x", "2"], 
      RowBox[{"2", " ", 
       SubsuperscriptBox["\[Sigma]", "18", "2"]}]]}]], " ", 
   SubscriptBox["a", "18"]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["x", "2"], 
      RowBox[{"2", " ", 
       SubsuperscriptBox["\[Sigma]", "19", "2"]}]]}]], " ", 
   SubscriptBox["a", "19"]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["x", "2"], 
      RowBox[{"2", " ", 
       SubsuperscriptBox["\[Sigma]", "20", "2"]}]]}]], " ", 
   SubscriptBox["a", "20"]}]}]], "Output",
 CellChangeTimes->{{3.957466187962565*^9, 3.9574662253720703`*^9}, {
   3.957466256605914*^9, 3.957466260834037*^9}, 3.957466293096674*^9, 
   3.9574663704722958`*^9, 3.957466459650177*^9, 3.9574666024373083`*^9, {
   3.95746665589016*^9, 3.957466661737759*^9}, {3.9574667030839376`*^9, 
   3.957466717710009*^9}, 3.957466964454876*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"b5b9cf98-1580-4401-aa1c-7eaeaee21678"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SubscriptBox["a", "1"], ",", 
   SubscriptBox["\[Sigma]", "1"], ",", 
   SubscriptBox["a", "2"], ",", 
   SubscriptBox["\[Sigma]", "2"], ",", 
   SubscriptBox["a", "3"], ",", 
   SubscriptBox["\[Sigma]", "3"], ",", 
   SubscriptBox["a", "4"], ",", 
   SubscriptBox["\[Sigma]", "4"], ",", 
   SubscriptBox["a", "5"], ",", 
   SubscriptBox["\[Sigma]", "5"], ",", 
   SubscriptBox["a", "6"], ",", 
   SubscriptBox["\[Sigma]", "6"], ",", 
   SubscriptBox["a", "7"], ",", 
   SubscriptBox["\[Sigma]", "7"], ",", 
   SubscriptBox["a", "8"], ",", 
   SubscriptBox["\[Sigma]", "8"], ",", 
   SubscriptBox["a", "9"], ",", 
   SubscriptBox["\[Sigma]", "9"], ",", 
   SubscriptBox["a", "10"], ",", 
   SubscriptBox["\[Sigma]", "10"], ",", 
   SubscriptBox["a", "11"], ",", 
   SubscriptBox["\[Sigma]", "11"], ",", 
   SubscriptBox["a", "12"], ",", 
   SubscriptBox["\[Sigma]", "12"], ",", 
   SubscriptBox["a", "13"], ",", 
   SubscriptBox["\[Sigma]", "13"], ",", 
   SubscriptBox["a", "14"], ",", 
   SubscriptBox["\[Sigma]", "14"], ",", 
   SubscriptBox["a", "15"], ",", 
   SubscriptBox["\[Sigma]", "15"], ",", 
   SubscriptBox["a", "16"], ",", 
   SubscriptBox["\[Sigma]", "16"], ",", 
   SubscriptBox["a", "17"], ",", 
   SubscriptBox["\[Sigma]", "17"], ",", 
   SubscriptBox["a", "18"], ",", 
   SubscriptBox["\[Sigma]", "18"], ",", 
   SubscriptBox["a", "19"], ",", 
   SubscriptBox["\[Sigma]", "19"], ",", 
   SubscriptBox["a", "20"], ",", 
   SubscriptBox["\[Sigma]", "20"]}], "}"}]], "Output",
 CellChangeTimes->{{3.957466187962565*^9, 3.9574662253720703`*^9}, {
   3.957466256605914*^9, 3.957466260834037*^9}, 3.957466293096674*^9, 
   3.9574663704722958`*^9, 3.957466459650177*^9, 3.9574666024373083`*^9, {
   3.95746665589016*^9, 3.957466661737759*^9}, {3.9574667030839376`*^9, 
   3.957466717710009*^9}, 3.957466964457633*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"2bdf5048-5112-4f06-931d-65269ffa982a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["FittedModel",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               TagBox[
                TagBox[
                 RowBox[{
                   RowBox[{"19.733387439198797`", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "4.231769584200494`"}], " ", 
                    SuperscriptBox["x", "2"]}]]}], "+", 
                   RowBox[{"17.350616125858764`", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}]]}], 
                   "+", 
                   RowBox[{"\[LeftSkeleton]", "25", "\[RightSkeleton]"}], "+", 
                   RowBox[{"16.764933520662684`", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"\[LeftSkeleton]", "19", "\[RightSkeleton]"}]}], 
                    " ", 
                    SuperscriptBox["x", "2"]}]]}]}], Short], "SummaryItem"]}},
              GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               TagBox[
                TagBox[
                 RowBox[{
                   RowBox[{"19.733387439198797`", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "4.231769584200494`"}], " ", 
                    SuperscriptBox["x", "2"]}]]}], "+", 
                   RowBox[{"17.350616125858764`", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}]]}], 
                   "+", 
                   RowBox[{"\[LeftSkeleton]", "25", "\[RightSkeleton]"}], "+", 
                   RowBox[{"16.764933520662684`", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"\[LeftSkeleton]", "19", "\[RightSkeleton]"}]}], 
                    " ", 
                    SuperscriptBox["x", "2"]}]]}]}], Short], "SummaryItem"]}},
              GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  FittedModel[<|
   "Type" -> "Nonlinear", 
    "Model" -> <|
     "FittedParameterRules" -> {
       Subscript[$CellContext`a, 1] -> -28.41047381952049, 
        Subscript[$CellContext`\[Sigma], 1] -> -0.38749341807087356`, 
        Subscript[$CellContext`a, 2] -> 17.79733491679075, 
        Subscript[$CellContext`\[Sigma], 2] -> -0.4557164724397528, 
        Subscript[$CellContext`a, 3] -> -22.168879859497842`, 
        Subscript[$CellContext`\[Sigma], 3] -> -0.5445598279515156, 
        Subscript[$CellContext`a, 4] -> 16.78222513828962, 
        Subscript[$CellContext`\[Sigma], 4] -> 0.4555351620398925, 
        Subscript[$CellContext`a, 5] -> 17.736468813241814`, 
        Subscript[$CellContext`\[Sigma], 5] -> 0.45543713796684476`, 
        Subscript[$CellContext`a, 6] -> 17.350616125858764`, 
        Subscript[$CellContext`\[Sigma], 6] -> 0.3437421643605436, 
        Subscript[$CellContext`a, 7] -> 19.733387439198797`, 
        Subscript[$CellContext`\[Sigma], 7] -> 0.34373519027075644`, 
        Subscript[$CellContext`a, 8] -> -21.936283810641125`, 
        Subscript[$CellContext`\[Sigma], 8] -> 0.5441618020224724, 
        Subscript[$CellContext`a, 9] -> 17.53749427436402, 
        Subscript[$CellContext`\[Sigma], 9] -> -0.45569662509973846`, 
        Subscript[$CellContext`a, 10] -> 15.519122717124938`, 
        Subscript[$CellContext`\[Sigma], 10] -> 0.45555931577820563`, 
        Subscript[$CellContext`a, 11] -> 17.064631322668568`, 
        Subscript[$CellContext`\[Sigma], 11] -> -0.4557161262734507, 
        Subscript[$CellContext`a, 12] -> -22.197528659451528`, 
        Subscript[$CellContext`\[Sigma], 12] -> -0.5445688868289924, 
        Subscript[$CellContext`a, 13] -> 20.21817660247714, 
        Subscript[$CellContext`\[Sigma], 13] -> 0.3437423832494641, 
        Subscript[$CellContext`a, 14] -> -28.023885163113118`, 
        Subscript[$CellContext`\[Sigma], 14] -> 0.38727728870451095`, 
        Subscript[$CellContext`a, 15] -> -29.51468556334217, 
        Subscript[$CellContext`\[Sigma], 15] -> 0.38730293234301616`, 
        Subscript[$CellContext`a, 16] -> -28.811276144910252`, 
        Subscript[$CellContext`\[Sigma], 16] -> -0.3875258194302419, 
        Subscript[$CellContext`a, 17] -> 16.66552424703736, 
        Subscript[$CellContext`\[Sigma], 17] -> 0.45537427593745694`, 
        Subscript[$CellContext`a, 18] -> 16.764933520662684`, 
        Subscript[$CellContext`\[Sigma], 18] -> 0.6229578376968665, 
        Subscript[$CellContext`a, 19] -> -28.65299425903376, 
        Subscript[$CellContext`\[Sigma], 19] -> -0.3875013764858923, 
        Subscript[$CellContext`a, 20] -> 17.61500068052682, 
        Subscript[$CellContext`\[Sigma], 20] -> 0.4554553482331964}, 
      "IndependentVariables" -> {$CellContext`x}, "FitExpression" -> 
      E^(Rational[-1, 2] $CellContext`x^2 
          Subscript[$CellContext`\[Sigma], 1]^(-2)) 
        Subscript[$CellContext`a, 1] + 
       E^(Rational[-1, 2] $CellContext`x^2 
          Subscript[$CellContext`\[Sigma], 2]^(-2)) 
        Subscript[$CellContext`a, 2] + 
       E^(Rational[-1, 2] $CellContext`x^2 
          Subscript[$CellContext`\[Sigma], 3]^(-2)) 
        Subscript[$CellContext`a, 3] + 
       E^(Rational[-1, 2] $CellContext`x^2 
          Subscript[$CellContext`\[Sigma], 4]^(-2)) 
        Subscript[$CellContext`a, 4] + 
       E^(Rational[-1, 2] $CellContext`x^2 
          Subscript[$CellContext`\[Sigma], 5]^(-2)) 
        Subscript[$CellContext`a, 5] + 
       E^(Rational[-1, 2] $CellContext`x^2 
          Subscript[$CellContext`\[Sigma], 6]^(-2)) 
        Subscript[$CellContext`a, 6] + 
       E^(Rational[-1, 2] $CellContext`x^2 
          Subscript[$CellContext`\[Sigma], 7]^(-2)) 
        Subscript[$CellContext`a, 7] + 
       E^(Rational[-1, 2] $CellContext`x^2 
          Subscript[$CellContext`\[Sigma], 8]^(-2)) 
        Subscript[$CellContext`a, 8] + 
       E^(Rational[-1, 2] $CellContext`x^2 
          Subscript[$CellContext`\[Sigma], 9]^(-2)) 
        Subscript[$CellContext`a, 9] + 
       E^(Rational[-1, 2] $CellContext`x^2 
          Subscript[$CellContext`\[Sigma], 10]^(-2)) 
        Subscript[$CellContext`a, 10] + 
       E^(Rational[-1, 2] $CellContext`x^2 
          Subscript[$CellContext`\[Sigma], 11]^(-2)) 
        Subscript[$CellContext`a, 11] + 
       E^(Rational[-1, 2] $CellContext`x^2 
          Subscript[$CellContext`\[Sigma], 12]^(-2)) 
        Subscript[$CellContext`a, 12] + 
       E^(Rational[-1, 2] $CellContext`x^2 
          Subscript[$CellContext`\[Sigma], 13]^(-2)) 
        Subscript[$CellContext`a, 13] + 
       E^(Rational[-1, 2] $CellContext`x^2 
          Subscript[$CellContext`\[Sigma], 14]^(-2)) 
        Subscript[$CellContext`a, 14] + 
       E^(Rational[-1, 2] $CellContext`x^2 
          Subscript[$CellContext`\[Sigma], 15]^(-2)) 
        Subscript[$CellContext`a, 15] + 
       E^(Rational[-1, 2] $CellContext`x^2 
          Subscript[$CellContext`\[Sigma], 16]^(-2)) 
        Subscript[$CellContext`a, 16] + 
       E^(Rational[-1, 2] $CellContext`x^2 
          Subscript[$CellContext`\[Sigma], 17]^(-2)) 
        Subscript[$CellContext`a, 17] + 
       E^(Rational[-1, 2] $CellContext`x^2 
          Subscript[$CellContext`\[Sigma], 18]^(-2)) 
        Subscript[$CellContext`a, 18] + 
       E^(Rational[-1, 2] $CellContext`x^2 
          Subscript[$CellContext`\[Sigma], 19]^(-2)) 
        Subscript[$CellContext`a, 19] + 
       E^(Rational[-1, 2] $CellContext`x^2 
          Subscript[$CellContext`\[Sigma], 20]^(-2)) 
        Subscript[$CellContext`a, 20], "ParameterConstraints" -> True|>, 
    "Weights" -> <|"ExampleWeights" -> 1|>, 
    "InputData" -> {{-5., 0}, {-4.9, 0}, {-4.8, 0}, {-4.7, 0}, {-4.6, 
       0}, {-4.5, 0}, {-4.4, 0}, {-4.3, 0}, {-4.2, 0}, {-4.1, 0}, {-4., 
       0}, {-3.9, 0}, {-3.8, 0}, {-3.6999999999999997`, 0}, {-3.6, 0}, {-3.5, 
       0}, {-3.4, 0}, {-3.3, 0}, {-3.1999999999999997`, 0}, {-3.1, 0}, {-3., 
       0}, {-2.9, 0}, {-2.8, 0}, {-2.6999999999999997`, 
       0}, {-2.5999999999999996`, 0}, {-2.5, 0}, {-2.4, 0}, {-2.3, 
       0}, {-2.1999999999999997`, 0}, {-2.0999999999999996`, 
       0}, {-1.9999999999999998`, 0}, {-1.9, 0}, {-1.7999999999999998`, 
       0}, {-1.6999999999999997`, 0}, {-1.5999999999999999`, 
       0}, {-1.4999999999999998`, 0}, {-1.4, 0}, {-1.2999999999999998`, 
       0}, {-1.1999999999999997`, 0}, {-1.0999999999999999`, 
       0}, {-0.9999999999999998, 0}, {-0.8999999999999998, 
       1}, {-0.7999999999999998, 1}, {-0.6999999999999997, 
       1}, {-0.5999999999999998, 1}, {-0.4999999999999998, 
       1}, {-0.39999999999999974`, 1}, {-0.2999999999999997, 
       1}, {-0.19999999999999973`, 1}, {-0.09999999999999973, 1}, {
      2.7755575615628914`*^-16, 1}, {0.10000000000000028`, 1}, {
      0.2000000000000003, 1}, {0.30000000000000027`, 1}, {
      0.4000000000000003, 1}, {0.5000000000000003, 1}, {
      0.6000000000000003, 1}, {0.7000000000000003, 1}, {
      0.8000000000000003, 1}, {0.9000000000000004, 1}, {
      1.0000000000000004`, 0}, {1.1000000000000003`, 0}, {
      1.2000000000000004`, 0}, {1.3000000000000003`, 0}, {
      1.4000000000000004`, 0}, {1.5000000000000004`, 0}, {
      1.6000000000000003`, 0}, {1.7000000000000004`, 0}, {
      1.8000000000000003`, 0}, {1.9000000000000004`, 0}, {
      2.0000000000000004`, 0}, {2.1000000000000005`, 0}, {2.2, 0}, {
      2.3000000000000003`, 0}, {2.4000000000000004`, 0}, {
      2.5000000000000004`, 0}, {2.6000000000000005`, 0}, {
      2.7000000000000006`, 0}, {2.8000000000000003`, 0}, {
      2.9000000000000004`, 0}, {3.0000000000000004`, 0}, {
      3.1000000000000005`, 0}, {3.2000000000000006`, 0}, {
      3.3000000000000003`, 0}, {3.4000000000000004`, 0}, {
      3.5000000000000004`, 0}, {3.6000000000000005`, 0}, {
      3.7000000000000006`, 0}, {3.8000000000000007`, 0}, {
      3.9000000000000004`, 0}, {4.000000000000001, 0}, {
      4.1000000000000005`, 0}, {4.2, 0}, {4.300000000000001, 0}, {4.4, 0}, {
      4.500000000000001, 0}, {4.6000000000000005`, 0}, {4.7, 0}, {
      4.800000000000001, 0}, {4.9, 0}, {5.000000000000001, 0}}, "Localizer" -> 
    Function[Null, 
      Internal`LocalizedBlock[{$CellContext`x, 
        Subscript[$CellContext`a, 1], 
        Subscript[$CellContext`a, 2], 
        Subscript[$CellContext`a, 3], 
        Subscript[$CellContext`a, 4], 
        Subscript[$CellContext`a, 5], 
        Subscript[$CellContext`a, 6], 
        Subscript[$CellContext`a, 7], 
        Subscript[$CellContext`a, 8], 
        Subscript[$CellContext`a, 9], 
        Subscript[$CellContext`a, 10], 
        Subscript[$CellContext`a, 11], 
        Subscript[$CellContext`a, 12], 
        Subscript[$CellContext`a, 13], 
        Subscript[$CellContext`a, 14], 
        Subscript[$CellContext`a, 15], 
        Subscript[$CellContext`a, 16], 
        Subscript[$CellContext`a, 17], 
        Subscript[$CellContext`a, 18], 
        Subscript[$CellContext`a, 19], 
        Subscript[$CellContext`a, 20], 
        Subscript[$CellContext`\[Sigma], 1], 
        Subscript[$CellContext`\[Sigma], 2], 
        Subscript[$CellContext`\[Sigma], 3], 
        Subscript[$CellContext`\[Sigma], 4], 
        Subscript[$CellContext`\[Sigma], 5], 
        Subscript[$CellContext`\[Sigma], 6], 
        Subscript[$CellContext`\[Sigma], 7], 
        Subscript[$CellContext`\[Sigma], 8], 
        Subscript[$CellContext`\[Sigma], 9], 
        Subscript[$CellContext`\[Sigma], 10], 
        Subscript[$CellContext`\[Sigma], 11], 
        Subscript[$CellContext`\[Sigma], 12], 
        Subscript[$CellContext`\[Sigma], 13], 
        Subscript[$CellContext`\[Sigma], 14], 
        Subscript[$CellContext`\[Sigma], 15], 
        Subscript[$CellContext`\[Sigma], 16], 
        Subscript[$CellContext`\[Sigma], 17], 
        Subscript[$CellContext`\[Sigma], 18], 
        Subscript[$CellContext`\[Sigma], 19], 
        Subscript[$CellContext`\[Sigma], 20]}, #], {HoldAll}], 
    "Options" -> {}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.957466187962565*^9, 3.9574662253720703`*^9}, {
   3.957466256605914*^9, 3.957466260834037*^9}, 3.957466293096674*^9, 
   3.9574663704722958`*^9, 3.957466459650177*^9, 3.9574666024373083`*^9, {
   3.95746665589016*^9, 3.957466661737759*^9}, {3.9574667030839376`*^9, 
   3.957466717710009*^9}, 3.957466986405778*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"183ca5f9-2b67-4237-9e51-ac1f6e89b893"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"targetData", ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.2"}], ",", "1.2"}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"nlm", "[", "\"\<BestFit\>\"", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
     RowBox[{"PlotStyle", "->", "Red"}]}], "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.957466228718745*^9, 3.957466278905051*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"a4886798-43e2-46d4-ac16-2a114722eef9"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    InterpretationBox[{
      TagBox[
       TagBox[
        {RGBColor[0.24, 0.6, 0.8], PointSize[0.009166666666666668], 
         AbsoluteThickness[2], PointBox[CompressedData["
1:eJxd1LlKA1EYxfHJvu95AV9AcMVCiM/gI4hxqXwLaxvBqGBjbWVjFVsximBl
pSAIgqCiqCEhar6TnI85F8LkR+7938nMMBMrW8vNaBAEzf/P8IhRPx9/228N
R42eseG+6gxHlV6z4cZwo1eRnhu9svTcGG6sL8n8Im3btQrSz0vPjV5Oelnp
ZaSXlp4bvZT0ktJL0JbrxKXnRi8mvaj0ItIL6F+Mdnj9oB2e36enbb8ejX63
He59S+9Lep/S+5DeOz2w3it9aetfRn5r7Nn8Z3rV9nuip6z/SPetd0/v2vo7
etLm39I79vsFvW0+o3E8XRz7BL83xj7GenoBffoI+9MxOz7Q8zh/ehP/jz7E
/6dvcH3oaOg8g+AA15eew/Wnr3F/6A3cPxq9H+l1pdeTXl96AzqCw1J4vhvv
hwi9juebnsXzT6MXl54b55uQXlJ6KemlpedGLyO9rPRy0stLz41egcb1Kkqv
JL2y7O8evT9lfYUevX+lV5Wee/R+l15Nem706vQfWYF46w==
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ],
       {"WolframDynamicHighlight", <|
        "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
      StyleBox[
       DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
         Slot["HighlightElements"], 
         Slot["LayoutOptions"], 
         Slot["Meta"], 
         Charting`HighlightActionFunction["DynamicHighlight", {{
            Annotation[{
              Directive[
               PointSize[0.009166666666666668], 
               RGBColor[0.24, 0.6, 0.8], 
               AbsoluteThickness[2]], 
              Point[CompressedData["
1:eJxd1LlKA1EYxfHJvu95AV9AcMVCiM/gI4hxqXwLaxvBqGBjbWVjFVsximBl
pSAIgqCiqCEhar6TnI85F8LkR+7938nMMBMrW8vNaBAEzf/P8IhRPx9/228N
R42eseG+6gxHlV6z4cZwo1eRnhu9svTcGG6sL8n8Im3btQrSz0vPjV5Oelnp
ZaSXlp4bvZT0ktJL0JbrxKXnRi8mvaj0ItIL6F+Mdnj9oB2e36enbb8ejX63
He59S+9Lep/S+5DeOz2w3it9aetfRn5r7Nn8Z3rV9nuip6z/SPetd0/v2vo7
etLm39I79vsFvW0+o3E8XRz7BL83xj7GenoBffoI+9MxOz7Q8zh/ehP/jz7E
/6dvcH3oaOg8g+AA15eew/Wnr3F/6A3cPxq9H+l1pdeTXl96AzqCw1J4vhvv
hwi9juebnsXzT6MXl54b55uQXlJ6KemlpedGLyO9rPRy0stLz41egcb1Kkqv
JL2y7O8evT9lfYUevX+lV5Wee/R+l15Nem706vQfWYF46w==
               "]]}, "Charting`Private`Tag#1"]}}, <|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, 
             "PlotRange" -> {{-5., 5.000000000000001}, {-0.2, 1.2}}, 
             "Frame" -> {{False, False}, {False, False}}, 
             "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
             "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
             GoldenRatio^(-1), "DefaultStyle" -> {
               Directive[
                PointSize[0.009166666666666668], 
                RGBColor[0.24, 0.6, 0.8], 
                AbsoluteThickness[2]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{-5., 5.000000000000001}, {-0.2, 1.2}}, 
            "Frame" -> {{False, False}, {False, False}}, 
            "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
            "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
            GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               PointSize[0.009166666666666668], 
               RGBColor[0.24, 0.6, 0.8], 
               AbsoluteThickness[2]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListPlot, "GroupHighlight" -> False|>|>]],
       Selectable->False]},
     Annotation[{{
        Annotation[{
          Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.24, 0.6, 0.8], 
           AbsoluteThickness[2]], 
          Point[CompressedData["
1:eJxd1LlKA1EYxfHJvu95AV9AcMVCiM/gI4hxqXwLaxvBqGBjbWVjFVsximBl
pSAIgqCiqCEhar6TnI85F8LkR+7938nMMBMrW8vNaBAEzf/P8IhRPx9/228N
R42eseG+6gxHlV6z4cZwo1eRnhu9svTcGG6sL8n8Im3btQrSz0vPjV5Oelnp
ZaSXlp4bvZT0ktJL0JbrxKXnRi8mvaj0ItIL6F+Mdnj9oB2e36enbb8ejX63
He59S+9Lep/S+5DeOz2w3it9aetfRn5r7Nn8Z3rV9nuip6z/SPetd0/v2vo7
etLm39I79vsFvW0+o3E8XRz7BL83xj7GenoBffoI+9MxOz7Q8zh/ehP/jz7E
/6dvcH3oaOg8g+AA15eew/Wnr3F/6A3cPxq9H+l1pdeTXl96AzqCw1J4vhvv
hwi9juebnsXzT6MXl54b55uQXlJ6KemlpedGLyO9rPRy0stLz41egcb1Kkqv
JL2y7O8evT9lfYUevX+lV5Wee/R+l15Nem706vQfWYF46w==
           "]]}, "Charting`Private`Tag#1"]}}, <|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
       "LayoutOptions" -> <|
        "PanelPlotLayout" -> <||>, 
         "PlotRange" -> {{-5., 5.000000000000001}, {-0.2, 1.2}}, 
         "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
         "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
         "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
         "DefaultStyle" -> {
           Directive[
            PointSize[0.009166666666666668], 
            RGBColor[0.24, 0.6, 0.8], 
            AbsoluteThickness[2]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         ListPlot, "GroupHighlight" -> False|>|>, 
      "DynamicHighlight"]], {{}, {}}}, 
   InterpretationBox[{
     TagBox[{{{}, {}, 
        TagBox[
         {RGBColor[1, 0, 0], AbsoluteThickness[2], Opacity[1.], 
          LineBox[CompressedData["
1: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
zeMao66V6Wum8QLmSu8d1gkPZ9gd9rrGabuAE64EXM7IDGNkSp4c6QlawB2j
gS6cLy8yBAb4CqIeLWA4XGuz19CVMW0VvatXYBF7HV17ErzVfX1OnOvWFVvE
TAqrnjw63liBcIqhy6yvU9Mnhb39sONmnfEoWMSpCrJ8lPvBuLOLtUjZZxGb
5xgsr0E49j/qa5MVsohpzbvQ2JMITHk1KMh1cxFPW8t9GxaKxMfSarx6cxdx
9XiN39+maFxldkU5+usijon0Ve1gisNn6icG/w0s4n3NDzeUEfF4Xt060Wpi
Ec+K1qZraiTgPRuJaWXOJZz1bK5+0ekWzmtbfN67bwnnyf3NFLubiEHL1fGI
9hK+3H3F3mJHEu4t7dxYariEu9OP6CYXJOGNieUB0a5LOG2LufTG/Dv4uqH/
fpXMJfy0ItM4+HIKvv1Jzv1x4RKOLL42j2dScKZuf/aOF0v45B4tSppLKi4m
jrAJtyxhYY+xbtEjafhV+bL6rf4lnFS20HOCnobfqpS48IwvYXHh0b/yIum4
Q1b0yzLnMv7s9byfqTcdD+Y1MvtvWMYM3cotbBoZ+PfWcNU/kst4kbSg8ikx
AzNt/J02QCzj4fp86fdEJt7JUmVf57uM++63W+m6Z2Hlyz4pOGwZ5z6JGNYt
zsIH56UbyuOW8U5x4fpjk1nYYCJe6VHhMpacsI+OdM3Gp1207KReLOMo6r59
n3Oysf3QfFLW22V8p56t70BHNg7osl2M71/GjvU6LGUad3GoyUYF7vFlLGA3
hNuc7uIbTQ02VxeXsWLf4ji+fRcn6V+5vcS5gvPW7B6wvLqLs+tU3vltWFm/
V63EpPvv4oJDo3PjkiuYzjnC3sVEw/TXmXJOu1fwgljFjm4SDb/ea2j1jVjB
bTQ564ytNFxHZ0+w0F/BbAsz+VsVaLhJ4VVti/kK/pDSuuK+n4a7Cjxm9B1X
cCvOc4jWouGh7dt3vvNdwTs2PRn2P0HDE9n/nUZhK/jozfZowoyG50ViYl/E
rWDX1T+WA9Y0zHIHqndnruCeffPeTg40zEea+VdYuIJZk10721xpeOPNwh3b
X6xg2nDCfUVPGpbgsDbPfLuC9y10jgb50LBcGOXmhpYVbNym+rzCj4ZVl+sq
4/pXsGKAl9jCBRpGARf/co6v4PZ9NLm9/jR85J/S9rDFFUwqiPgTvL5udH7I
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
Iki2JzRybI4Ek9OtX9WDhdGlom25nEvr9ekktfbyySa03fRcD2Ymg0Q96ZnU
zo3IX5Zt4QwbGQYdQ8/f99iAGpbzNgRykuF1zkW/jRVCyCt35EQxPxnubC+4
xedARVV/XWokRMnwqLmA32OehChvefoOipPBlFXy4k0XEnJIebRoLkGGju25
w9eqBBEfGle5JU0GZu3UiM4ifmRDjjN4IksGvtHMlN3P+RB9SPH8B3kyDBsH
naPV8iKLm175zCrr/LXvdeqmudFja/IbcXUyZJbbua0JcyMmZXr//v1kuCoY
rWWmxYXyO6aEfTAZLJysui4XcaDpHQE3B/XJoHh5iPqmmRUdWdhUsHqCDP8F
5Usxy7KijE/lb0WNyJD8jJ2FcY0FafourhiZk2GPtAQz10lmdEcnQ9TzDBlm
V15dIyqY0KjIwb03rclw3lE/SleeCcVXX/Z6Y0+GnfKF0oH7VonBxC2x/U5k
+HUs2qlMbYVQd2IULrmSoX54b5vngWWih5/5u4o3GfJfRH/GNouE3JkIk7zL
ZGB784N6kHmOsPAuo7CFkWG1q23mvtwsER01+uVcBBn2CZqsvDwzQwyXHju6
/SYZXhRI2je1ThFCDSGc4XFkOHyi4YqB6BSh+a347eAtMvTdM6H4O/0jaHwb
cE4qGWzbqSNvhSaJRkndZeZMMlSZjHZc8vtLrOwLeml7lwzHk2s5/pT+IU47
9Kpsy1+3D54xa3QdJzZU3d9JKyXDCZ42n37Dn4RW23/Da2Vk4Hr3Q/yb3Sjh
84s71+bVev4ubjO/dukH0bTRQ3xrDRmuy9gXR74fJlblaV0hb8ngnUrZfGJx
iFA43JLSV08Gqe/j4QkqQ8QNT3VKduN6vYmMeQZWDBIvrzl/WWle99cosjeT
e5AYzUiPsfpKhiy+xsn91gOE9vtVDvEeMpgkvu2fEvlGMG2rX8r4uV6/yl6b
+h52E0p7F8qXfpNhw6SIVG5OF2F9fJf/mb9kaOHTsxDK6yQqguL/is6RocF9
lSmj9j/iV3zNk+DF9Xpriefg6m8nhPOnXLtWyFBp3CHVxNpO+LeYDaexUSDP
ZOw8OLQReaPXcxY4KWBZN1Voeq+VaF2tsLHgpUCCgty/3KEWYvcuiS5hCgWc
px8c7r7STIyFjzambKXAoSaqFytbIyGaLhozJ0kBhoLfds7BT8SR4mN6ZtIU
MGiJUfvQ8JHI7yl+s1GBAs9L542WX30g2v4NhvrvpsD5pERScc17gpV7A2pX
ocBJdpVTD5rribNqQeV3NNb1WvvrufnqiHj9RxdmCArsO8un3az2jqiy7VU2
OUSBlA06D5Kc3hJicYeeCB2hwBE579GRgVqifYQ7J9GEAs2OsY93y1UTdcbX
M1+aU+CZcPU3NQUGUVbLldJ/Zp0/31TMllRFJGdzxuyyo0BhudKE0XQFEckX
FWnoQAFNh79l7tOvCP9gjrAAZwpcHmo4G77ykjAxZfd/40GBKI2+LnfZckLr
bYTXT28KqL9/z1mo/4JQVWZzE7xAARvrjJxnF8oIIQHWs2cuUuCn0jJl57dn
RNs7pqNTURTQ65bRDOWkE29VQrVEblKgTPx3l7RtCfHs3hrCcRR4L6/gU1Jd
TCRdXlW5mbTOnygbor2tiIgYu6xYkkIBaa3ebn3mp4SfxcrO/9IpIPLyVP/N
scfEKbVl8e33KOAWt5n1ZO9DQjP3orBeHgXi6rl/SQ0VEsrkJYrnAwqcrrT7
0jlVQFDGFzgrnlCAZcvZj/flHxAteXOTRq8osPNLtmnVUi5RSwn4HVhJAaUD
qjWeh3IJeujsSHb1ejxbjrp+is0hblvOdP+qW/fPiR6Wtv8ecbXBr53UQIFt
Y9yCqak0wmffdJP6ZwqIKoSNVSzeJQyFpt5dbaVAo8mfDYNPswi46lNd0E6B
Dx/5E8tSM4ndfydfNXZSgGKZ9y42JoMgffpbJPqNAjH7B7f0JqQRTeETafTf
FCBE93v+x5JMVE+eT+r4s54vUXfWqyp3iGKb8bjVfxR4sTlh8LFbEpFw4Hf4
0QUKFIkXDflN3iZCC91CvJYpcOPaq5QEdJvw2jQWmLxGgc5v32Jkb98iTk79
PD/IToUUT6GQUf0EAtm6OHNxU2GLnLjbwXPxhOKXUTtFPiqIVYewDeyPIwQe
/TALplBhoOxEJuKMIRrthg9RtlJh5rld5O9N0cQA24P5O5JUuNTzzPmGcBQx
ne9cJCJNBbv4B5Lx2yMJkbGxzdsUqBDSufxb2iyCkI990pq3mwqaqdJqkyHh
BFLyvLFTlQpvJ619E4quEva+/+aUDlChpc9RZ0Q2jAjY8OxpKaLCtubXQ5M+
ocSNFxcc9mpSYWhOP3Y+8gpRtDTfgvSo4MgoSC6bukQshq89OW5GBfXDs25k
50CCX7rGvvk0FdrzSqp97QIIifdXxUysqdCXovoiy8mf0ObjuG7pQIX9bwbe
xCb4EeZP6/E3Zyro/I5yDSv1JVwNrs+ec6cCB0vBpZR+HyIhic/ezZcKI9/m
k+mG3kSueqPoH38q/Et738iW4kWUdcQ3+wRTIaPRgl/mvSfRvZmKg8OoIHT9
6/3jO88T0vdFRK/HU2Ep8Nh/ctHOxH7d7ia+RCrcKn7dqRviRBz7mRmVkLye
D0vUEnTFkfBWkJhJyVrHD+8VNrhnT0R8GXgkdo8KrOV9+SI154hk71y7u3lU
kPAYMND8ZUe8fi7dlP+ICnN/JCzlzGyJL2ajkXJFVCj5w413p58lBhcKiad0
KmSteg8ebrAhOJHCo+cvqSAn3HZ8SdKKMKpTiXxbv45/brx8OcCccHCeOXjk
IxVubJkWdHAzIwJ5Xkx9bKSCVcf3PWmupkTWCQ3b1q9UULp1I5T/ujFR/Hdp
k1knFa7+MJVxf3CKqL1d2djVQwW16yoexl+MiNF2ODj4nQqiNo7lShqGxGIg
y5TDDyqEPrUbPHfJgOAXe1v48xcV/AQ79XVjTxLKNrqbJiepsF0/99b378cI
bWbuRr8ZKjDxpwRU5ukT5rkNEfPzVLi+P8Bgp+9RwlU75sClZSpUPfrx8fYJ
PeL//u+B//+/538iSYT4
           "]]},
         Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     StyleBox[
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
            Annotation[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[2], 
               RGBColor[1, 0, 0]], 
              Line[CompressedData["
1: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
zeMao66V6Wum8QLmSu8d1gkPZ9gd9rrGabuAE64EXM7IDGNkSp4c6QlawB2j
gS6cLy8yBAb4CqIeLWA4XGuz19CVMW0VvatXYBF7HV17ErzVfX1OnOvWFVvE
TAqrnjw63liBcIqhy6yvU9Mnhb39sONmnfEoWMSpCrJ8lPvBuLOLtUjZZxGb
5xgsr0E49j/qa5MVsohpzbvQ2JMITHk1KMh1cxFPW8t9GxaKxMfSarx6cxdx
9XiN39+maFxldkU5+usijon0Ve1gisNn6icG/w0s4n3NDzeUEfF4Xt060Wpi
Ec+K1qZraiTgPRuJaWXOJZz1bK5+0ekWzmtbfN67bwnnyf3NFLubiEHL1fGI
9hK+3H3F3mJHEu4t7dxYariEu9OP6CYXJOGNieUB0a5LOG2LufTG/Dv4uqH/
fpXMJfy0ItM4+HIKvv1Jzv1x4RKOLL42j2dScKZuf/aOF0v45B4tSppLKi4m
jrAJtyxhYY+xbtEjafhV+bL6rf4lnFS20HOCnobfqpS48IwvYXHh0b/yIum4
Q1b0yzLnMv7s9byfqTcdD+Y1MvtvWMYM3cotbBoZ+PfWcNU/kst4kbSg8ikx
AzNt/J02QCzj4fp86fdEJt7JUmVf57uM++63W+m6Z2Hlyz4pOGwZ5z6JGNYt
zsIH56UbyuOW8U5x4fpjk1nYYCJe6VHhMpacsI+OdM3Gp1207KReLOMo6r59
n3Oysf3QfFLW22V8p56t70BHNg7osl2M71/GjvU6LGUad3GoyUYF7vFlLGA3
hNuc7uIbTQ02VxeXsWLf4ji+fRcn6V+5vcS5gvPW7B6wvLqLs+tU3vltWFm/
V63EpPvv4oJDo3PjkiuYzjnC3sVEw/TXmXJOu1fwgljFjm4SDb/ea2j1jVjB
bTQ564ytNFxHZ0+w0F/BbAsz+VsVaLhJ4VVti/kK/pDSuuK+n4a7Cjxm9B1X
cCvOc4jWouGh7dt3vvNdwTs2PRn2P0HDE9n/nUZhK/jozfZowoyG50ViYl/E
rWDX1T+WA9Y0zHIHqndnruCeffPeTg40zEea+VdYuIJZk10721xpeOPNwh3b
X6xg2nDCfUVPGpbgsDbPfLuC9y10jgb50LBcGOXmhpYVbNym+rzCj4ZVl+sq
4/pXsGKAl9jCBRpGARf/co6v4PZ9NLm9/jR85J/S9rDFFUwqiPgTvL5udH7I
ZJFzFU+OzPt+8KVhy9HUaN8Nq1g9wL5KxpuGHc4dr/gtuYqXXfc0p5+nYY8+
5gmH3av4yh+dhzIuNBxoUSbRT6zi8e3Rmq3naPhqm+spc/1V/GyPWWyOFQ3H
nNwa2Wy+il+kbA5MN6Xh5IbW8qOOq9g9q+UnYz0+NO3osTe+qziyL6l2kw4N
PzswaVAWt4qPln5i81Gm4aqy++FKmau4ys6eK0SGht/vOV1WULiKz/pE5X8R
o+EemTdiGW9XcYzAlmhTFhoeyQk4IdSyil8aYST38y7+Ky4fFtu/ivPyD0+Y
fbqL2YTujFxZXMUTKp26P+PuYspEiACFcw1L6Zq7JXvdxdveO6vnUddwg4+B
JTK8i9Glg5Hv5dewTssppQzBuzho6PsOss0apvvkBx8Ly8bRVZ+P57qtYfYl
ibNJZ7JxcuqLC2qBaxi8txkKqGXjZ8duvrO4tY7fG3iLPpyFJ54pO+S8WcON
kY8HPFEWXonbHKvatIZFuU6sLVGyMJ8Lx/O6njWMolgzf49kYlnxLraxmTUc
7hTMS43NxPRaaBERYoJM/R/aG1vXz6fcqLedDhNUbYkOrjyajqc39V57dIwJ
lIqrfysIp+Mltpa0aSMmIKtyHzYfTsM8/RU1kTZM4LoQLjQekoZlEuPJjwKZ
YB+fIFdSUSq2W1IvmXrIBCVO7y8H8aTg/z5e+xshyAxRPWwkGiMRJ6EsbZON
zPD1sGKMU1QiNip5lr5DnBmGpaIp1icTcWPyd606OWb44S+R8b3/Nq6zPZTG
qcMMpoIZJzJYb+OyueVDNy4xwx96jNpnswTs5yqUcjqcGWr3DvU82Z6AlXt3
/Za7wQzB+sWLtf3x+Gnt6eSPKcywnP9gNZ4Sj/Njy3/xlTLDhtgGlQuhsTh5
u19i/E9mEGC5VnXjyg1snHxz1OYvM+waM5gblLyBKdy5xO45ZlCvfIPY66/j
uInmH01sLNBjrMv3hHwdR75UOkiRYIHkpVvFD4qjsP/JsaEkUxaws6TTxjdc
w6q1LBoOVizgeMlN8kRdBP6nKhqvZs8CD7/eu381IAJ7iOrtb/dmgYWKYG+n
nnDsOJwfuymWBWz5+9+JFl/FJhft1NPfsEA4uyb1U0goTs4S4pj7wALihEB3
PoTidkbd11NNLPA6cX+LCmsoNmXbdYG/lwXOlUm9qBW6gs1jp0pDZ1mg9M7K
lp+HLuPTdyP2OMmywvmsmzqOPUE4vUad+a0SK7id+k8h6UIQ7v4+2iShzgqZ
pJoRLlIQttx53KtLkxXCR1/NVB4JxFYlG4qOW7KC+QfRfxs/+OOzb/LlVeNZ
QSai5pgPq996nzFfTrjDCixvdX7OFPniAU7eT+MZrLDte49oupUvtjvm6fag
gBUCImVJGq998Lmvex+K1rJCm3HAlYRIb+z4470M8wwrbN+KRQrSPXA+98U5
qyVWUDxuPmi2wQP/2KVQ/4qZDV7GuW+cvXUeO3vdcvQTYAO9FLw6muCOXRYs
7v+QYYPSeDdm4fuu2J13TLLxNBto9GWf2CrphMeCXrHx2rLBsegcb7MKR+w6
en1E14kNXKra0zebOmKndzsf1viywcR3c58DCQ7Y7orjnucxbDAdcfvx0Y32
eGBcjfrvNhsIkaYNXCvO4bOW7DOKaWygM7Il4p/tOWy9P6+84D4bDNtOd8mV
2mGLqQGcWcUGqVLbaqsdbHGHbcm2zrds4PcyafvDDbbYtCmUdeNHNsjWO2Xd
WXcWGz/ZWh//Hxuc5HuQOi9/Fhs4WZ0I/7vuz+/ufzGC1linu8PSVZIdNp/7
lHlw1AK/0ytAD3ayQ7x2beCquwXWKg+QGFJkB8/4Yr/PU+b40J2NQ1YH2MFZ
zvjGBU5zfPCksZuhMTtsadp1ZIeOKa6o3H487vQ638302sguE6whP6X48Sw7
GCx1PHztZYL3ct/+p3WeHS7mb6i5kWOMld98CdoXyQ6le9I7ZkVP4ZI9d89c
iGEHi0DHTZqVRng3zYOg32aHTzWTcQq2RljhMj+z/F12oLcunP30xBDv3Ksf
vbWcHThupS1dsTDAWx/VJXP8Yoc/J9N8zMb0sfHd8pcNf9lh48WTsVlG+vhG
4sOeuDl20BXlcOp/fRRPX4yT3MTOAVdiUmQl0/VwwzHTpzISHLD2RioB/HUx
06EjzWPSHODcS7AxTetgNTWN6SIFDnguZulq5qeDaeJbNPYd4AA/n3aXu5e0
sf/E8LsjphxQMCpLMnt4GD8e/G+Uz4oDaM9cKlMOHMYD7R94m89xQFkZyXrT
F018jPHE0MKbA4yibnI+XD6EJRMu9LrEcIB7PoSzegP+vId95kYtB6R6y7P5
uB/ALNJzm05+4IAW7c8drz5r4H2iPzWoTRxwzGjokrmyBs5h+Rya0csBpzmU
qg3Z9+PA1iS+x/MccHuAkhjVpI6f1kcqea1xgFd4pW31UXX8vSLQSJWDE8Tm
RKtb69XwiTzL1NdUTpjZxVlt2KCKpS5ISX1W5ISC/y6vyf9RXp+PNureUuOE
VHLqh1chyjjeisvV5CAn1AobnCwnKeNF7d9FvXqccGZnhm3zgT24aeOzAxP2
nMB5r/Gy9WklzMGbb01344QL/SJTnVmK+MBaSpi/DydUvrizHDysgPN/XKxf
vcIJgiej/DpC5fHF8sOnBDM4waZS70n1sCxWtmz6a3OPE5gCl0xjjGTxrzXL
uOIHnNBa1BbqUrsTn9b1/2D4bN2fn8HE5kcyWKO9ACd95gSjiIzZT9k78L8g
td6hVk54tyhjFyO5Az8Urw1W61rXFzS6N1YghUUcup+3j3DClqn3ZiaV2/H8
FL+8CBMXONqOhvmxSuLilPQPLhxccPC3AuNL+jbsfEDG6RUfF4RoMW9wVt2G
O65CzhkRLpiQ1KuU9JDAL8i+wtnKXGCQI6y9eUYcezxfez6xjwuIuHuZhLY4
lraIOYUxF7AoHFJWTNuMk2n3477pcwHHE/lGxWNi2F+pg227AxesNkulZ/UI
Y8VW+xxfNy4wu6MtJq0njEf8J/Fbby6oCnto+Kt8Ezap4rnoEMIFWcHPzw/e
24hVjxOTD1K4wKe59VVDihD+/fdD3HwWF6w5BM04bRbCeUmm8np5XNBdaj5d
k0vFQj2eTr+KucCyLdfI5xUFT7nm9Mo3cMEjJH0GcZDxQwGli5ebuKDTkRy2
/y4J29ErhBvb1/d/Vj4iQoOEWxbaTnl+54JhLk2Bkj8CmB7N2VCyzAWb2kXE
TYT5sKt8khMLKzcU3nzWVejOiyWbJNhPcXOD9mg009BbHnxrkwZMb+CG5hzT
j6Wh3Ngr371MXYkbfujF20Zt58R9X8TuCKhzg0aQvfNaNAc+vtDgO3KQGxY9
Nuic+MeO5Y7J7kk+yg2zISNzQk1seGhy+NGMAzcsv7hS++05CzYSu3Pjszs3
VHDvdM/fy4JrtLRc7vtyw9H5n1qpr5lxdkqOtEkYNxykDzSVfmHCZoTNvWeZ
3LBp79XsW3tWUZ2jQGhMLjf8ubbrUfu5FaSaUGlt/5AbLrZPhppmLCPSd7HN
QuXcYM945RopsoQaojuSfVu54bLMb9ETJ+fRPnrUBf0ubjjL8oLEWzCHHnSr
G28f4AZLukGSEPscilC8Q26d4AZ1A8mUnI8zCLUZxijz8Kz3+6bTA1FT6PEK
kxsPmQcEGY9F1JimkJhMsd7gJh5oSOE/JHjpH5oPEuC8vYMH1FKm1FcvTyL6
1o9hk8ADz0pfC04Y/EESesFnP+jyQHqG+zaTCxMo3kcW3zvBA5o748+E3h1H
7u+ilg0seQDHfqUlsP1GO9y0AooDeMDoWpnFO/6fKClpyiQ6hAeuDoOOn+Uo
YqnKUT17jQf4hUfi/iv6gfpIzP8EE9f1rmlKaNqPoNSySnfPpzwgO5dx+QrT
EOL45q6v+5wHFofP78vz/o4ucG+W2/qaBy5G6e7MGhlERpbBPxo/8EB+yp/Z
B90DiI9lr53iMA/skHl8jtzfj14GsJ4aGeOBga+iJtdW+pDj+JfD2f94QIv7
l/r8tj5U3eG8Q4CJF+iTwdX4Ug/yLUofHRflBUtHljV9n04kscOp8/42XoCe
5sf5rzvQp3SVBqudvGA6/Md3gLcDSUd+evRZjRcOKV7pDShvR12Wqx5PDHhB
3EH7c7tOG4pqabBxMOOF833BuPtZK1I9kmIgbs0L19kGoE26FcWp7FaOdeOF
0xeM/Q5sbEGHeOxm3CN5YaKFViwt0YQmriiOSMXywh6S7eAO0y8ofWaxvSeR
F7pvFeY5+DSi6W+J5cfu8YLXqAiLV+UnVPDi3UX517wgz+vhi9I+IBOF2+5D
tet8WUUX/ut9j1hyra0yP/CCi4yeZ6bMe2QZN4f4/uOFA6EVX7c01CFBB1mW
35O8kJRgVueg+xa97pr5lzvPC3Jhny3LS94gZ4Pa72fWeKFYX2FMTeINqj1w
5t1HPj74MuHqCdy1yJ8SG/1Ihg827KkJpnFVo+3RFkHnFPlA4uHDl/clGahp
ZYermBofMOQHL1RpVK2/car0b2rywWHRbeGnQl6jPsZfATcrPvhvYHDX4RMv
0U21yjVJez4Y46FJ+ieUo32Prv/tcuUD6x/cK9wdL9DtZMmWo4F80LNqxcPw
L0Pa543vyCXywchay2jIRCnyu13B5JnGB9fNawUabUtR3gtJ99K7fPBttuFU
XwcdsbBMah58zAf7Ll2f6W8uQdXJsX+Pv+MD/bf3BOidRehPxfSZ2x/5YCGi
FQ7OPUVbBs7UtzfzweK9wMpe0afo8i65bJs+Pug1Xnn3zvcx0qiu0/ee44OO
4+kBS06FyGVY4cXzFT7Yu/8ECw+9AKXy3JFcZOUHeiavKCdzAZozPrdwlcQP
Dk+od/We5KNnP9fyk2T54d4jvl2RB/LQdwEnSqcSP6hc9lZLK8xFFNXGy+Lq
/DAQFfSoQCwXeYdkGudr8sPQy91thrw5SJG6n6X8DD90CShosW+kIat9tPPL
tut6PoeeWGneRTFWnJ3gzA8bXT7rbbXJRmMPvhZ98OOHzQKin/GjTFRw0Meq
O5Yfsn0vhXpdT0Mdtp3vtybxA+WO6tPCxlTEGQWq9un8oBWC60giqcixWYB3
PJ8fjn2yON39Ohltd3xUvsrghy+nv3wsO5iEjG5SpA7X8QPn+egjTx4koqvF
QfFRn/ghSuhyzueNiejboq4jqZMfLqeInBNhvo2y44eokv/4geVXl/EQSwL6
/Ez/iuM8P+jPf/htKhyPljvpvx6u8kP5u+a6xD1x6IxUWI0KrwAcSLSZswmI
QcIvxT21pQSgg2yr7ad/Ha2eeyBG3iUAp8RatKZDotGQwJ73PXsEAOSOh1SU
R6Fie61tflgAMgIWim1RJEoWbPyMdQQgPrtZePj6NXTplVkw73EBuFLbFjHf
FYF0SW6tOacFYL9o9Xnp2HAkXzF9xcNWAIhVA/8/41cRxTFEXsNZAMgGUtfv
n7qK+ipuXWu+IACyYxo3NBXCkL9T+V6mW+t2uOpHhlwIsqRoDn1MEYCLs75y
RiqXkWblx4SUbAEoOzJzMuPwJSRA7f+p+FgAxGyOFdkHB6PpSufkRboAWHRo
ZfrQglCX8z/NupcCwLxtMNPocyDKr2LPtKoXAAdVbY0yjQAU4xJ/RLZRAIxX
1e3agv2Rj5DIzHSbALya7shaqL6AkKv8iZhBAQhJ/3U+29oPfd1wiqliRQBs
p59/D+3yRq+qex5HsgkCJ+uR7mVtb0Rzc7Qw4hUEV3nDrfJlXsi9Joj+U1gQ
WNUtj28/4omM3Fltnm8VhOi43WdZDnugfZtiecOkBcHB+RSbgs55xHaeZi+s
Kgh1ZUcrztq7oV+b5MhDGoLgdmMl/HeIK2qqLa0sOiQIkw+lFT7QXFCmcP1G
3ZOCYG3m8zRuwQmpvh1/f8FVEMZ1B6UtF+yRqGfAhUPegvAyROqz7xF7xCTK
LMkfKAhpFd1cGlnn0CdPoYt51wRBQ7T5m7iZHaKLZst4xQhCrMvn0qEKW5T6
TqbtQKIg1Lqdu/B4hy06J3ZAoZUmCAKCWgZ3Oc+iI3VvO7MfCIJH5BfnpVVr
pOh9ItL1qSBQwh03RM1ZocU6237m14Kg/uOw6SSzJbrtE31r93+C0Dlzbr7F
zxwtfnpcHt0rCFfKyw3tS8yQnUxz/7fvgtDWZb7355QpUukRUbz1VxBsXr7Q
F71hgjLVkcnPWUGYEdVh9eo1Rmy37C4dWhGEG+N+OnzqxuhXjsnwPBsJTL6d
HQycNUJbmn7MS3GRwDRe6NSylREyWgniM+QlgfLFPx7yDYaowixbpZBMglSW
ig9sxQYohu9HmMUWEvjytdR2nTmOqvcH3bm2jQQ77JUr9D2OoWlH3sISKRLo
xtw/So7WR5Y1Sk3cu0gg239y56smPZQwUfNdTZEEdfe8IvesHUFvxYznbPeQ
YPbeUPgO1SNIwT9wy6u9JKjtc/F8XayD7HJ5lEc0SCBafjV6bU4bJTdlalMQ
CULbh8PWtLTRqlyNu6sWCV6+rLh27c9h1NjPXSFqSAL7D3LbxK8eQiz8mY06
xiQ43Z/9vfgfIHUNxUEfMxK0JSm5VjsByk4y4v5oRYLR3PoX8ZUItdQMbZ47
S4LrWiz1C9UE4vjjv3u7PQm6NffTT346iDz1MswuupIg1zO99/2CBsrzV3B7
cJ4EgjTeuAtiGqgjlxHS6kUCHpXN3yS09iNY/X5/VwAJSl7YEGmFexGpVH66
O5wEHl1fZnwYqkjrWxUnV9R6vB/1PHGlqqJAfkMx1RsksGbtb2hzV0HfnC5o
xiSQYIBgkzdRUkZCdzhNyxNJYBazWUIkdQ86UpvmMpRMAg7JuXcP2fegks1V
CQez1vX8ztzHvUpoRM8gz5lGAoHEyka/VkUkGjD4IimXBDUj3/9ua1FAV5s5
+n8XkuB2hqZPx49dyCjypEJWGQkYw5lvW8/vRPkWf/VeviTBCs+DvY15MmhB
/pbj19ckiOF+WiA6KI1orS13+d+QYLux4fEhjx1oKt/3tWwdCUo1fW6xVEkh
nWChTu0PJDDMfNf3jCKFxiVMKSFfSKDzvHBW+pMkgulZxfQWEgznWz6/vVsS
JdWn6Jd9JQHrmqDRr7RtSMOjM2KimwSaW+bTaoMlUHSF5Zz1KAnuJNo91xjc
jHriVqgXx0gwz1v0uGFSDCnZZe9OmSABSZQngJlbDLVzfXP5Mk2CZI2RMu/j
Iki2JzRybI4Ek9OtX9WDhdGlom25nEvr9ekktfbyySa03fRcD2Ymg0Q96ZnU
zo3IX5Zt4QwbGQYdQ8/f99iAGpbzNgRykuF1zkW/jRVCyCt35EQxPxnubC+4
xedARVV/XWokRMnwqLmA32OehChvefoOipPBlFXy4k0XEnJIebRoLkGGju25
w9eqBBEfGle5JU0GZu3UiM4ifmRDjjN4IksGvtHMlN3P+RB9SPH8B3kyDBsH
naPV8iKLm175zCrr/LXvdeqmudFja/IbcXUyZJbbua0JcyMmZXr//v1kuCoY
rWWmxYXyO6aEfTAZLJysui4XcaDpHQE3B/XJoHh5iPqmmRUdWdhUsHqCDP8F
5Usxy7KijE/lb0WNyJD8jJ2FcY0FafourhiZk2GPtAQz10lmdEcnQ9TzDBlm
V15dIyqY0KjIwb03rclw3lE/SleeCcVXX/Z6Y0+GnfKF0oH7VonBxC2x/U5k
+HUs2qlMbYVQd2IULrmSoX54b5vngWWih5/5u4o3GfJfRH/GNouE3JkIk7zL
ZGB784N6kHmOsPAuo7CFkWG1q23mvtwsER01+uVcBBn2CZqsvDwzQwyXHju6
/SYZXhRI2je1ThFCDSGc4XFkOHyi4YqB6BSh+a347eAtMvTdM6H4O/0jaHwb
cE4qGWzbqSNvhSaJRkndZeZMMlSZjHZc8vtLrOwLeml7lwzHk2s5/pT+IU47
9Kpsy1+3D54xa3QdJzZU3d9JKyXDCZ42n37Dn4RW23/Da2Vk4Hr3Q/yb3Sjh
84s71+bVev4ubjO/dukH0bTRQ3xrDRmuy9gXR74fJlblaV0hb8ngnUrZfGJx
iFA43JLSV08Gqe/j4QkqQ8QNT3VKduN6vYmMeQZWDBIvrzl/WWle99cosjeT
e5AYzUiPsfpKhiy+xsn91gOE9vtVDvEeMpgkvu2fEvlGMG2rX8r4uV6/yl6b
+h52E0p7F8qXfpNhw6SIVG5OF2F9fJf/mb9kaOHTsxDK6yQqguL/is6RocF9
lSmj9j/iV3zNk+DF9Xpriefg6m8nhPOnXLtWyFBp3CHVxNpO+LeYDaexUSDP
ZOw8OLQReaPXcxY4KWBZN1Voeq+VaF2tsLHgpUCCgty/3KEWYvcuiS5hCgWc
px8c7r7STIyFjzambKXAoSaqFytbIyGaLhozJ0kBhoLfds7BT8SR4mN6ZtIU
MGiJUfvQ8JHI7yl+s1GBAs9L542WX30g2v4NhvrvpsD5pERScc17gpV7A2pX
ocBJdpVTD5rribNqQeV3NNb1WvvrufnqiHj9RxdmCArsO8un3az2jqiy7VU2
OUSBlA06D5Kc3hJicYeeCB2hwBE579GRgVqifYQ7J9GEAs2OsY93y1UTdcbX
M1+aU+CZcPU3NQUGUVbLldJ/Zp0/31TMllRFJGdzxuyyo0BhudKE0XQFEckX
FWnoQAFNh79l7tOvCP9gjrAAZwpcHmo4G77ykjAxZfd/40GBKI2+LnfZckLr
bYTXT28KqL9/z1mo/4JQVWZzE7xAARvrjJxnF8oIIQHWs2cuUuCn0jJl57dn
RNs7pqNTURTQ65bRDOWkE29VQrVEblKgTPx3l7RtCfHs3hrCcRR4L6/gU1Jd
TCRdXlW5mbTOnygbor2tiIgYu6xYkkIBaa3ebn3mp4SfxcrO/9IpIPLyVP/N
scfEKbVl8e33KOAWt5n1ZO9DQjP3orBeHgXi6rl/SQ0VEsrkJYrnAwqcrrT7
0jlVQFDGFzgrnlCAZcvZj/flHxAteXOTRq8osPNLtmnVUi5RSwn4HVhJAaUD
qjWeh3IJeujsSHb1ejxbjrp+is0hblvOdP+qW/fPiR6Wtv8ecbXBr53UQIFt
Y9yCqak0wmffdJP6ZwqIKoSNVSzeJQyFpt5dbaVAo8mfDYNPswi46lNd0E6B
Dx/5E8tSM4ndfydfNXZSgGKZ9y42JoMgffpbJPqNAjH7B7f0JqQRTeETafTf
FCBE93v+x5JMVE+eT+r4s54vUXfWqyp3iGKb8bjVfxR4sTlh8LFbEpFw4Hf4
0QUKFIkXDflN3iZCC91CvJYpcOPaq5QEdJvw2jQWmLxGgc5v32Jkb98iTk79
PD/IToUUT6GQUf0EAtm6OHNxU2GLnLjbwXPxhOKXUTtFPiqIVYewDeyPIwQe
/TALplBhoOxEJuKMIRrthg9RtlJh5rld5O9N0cQA24P5O5JUuNTzzPmGcBQx
ne9cJCJNBbv4B5Lx2yMJkbGxzdsUqBDSufxb2iyCkI990pq3mwqaqdJqkyHh
BFLyvLFTlQpvJ619E4quEva+/+aUDlChpc9RZ0Q2jAjY8OxpKaLCtubXQ5M+
ocSNFxcc9mpSYWhOP3Y+8gpRtDTfgvSo4MgoSC6bukQshq89OW5GBfXDs25k
50CCX7rGvvk0FdrzSqp97QIIifdXxUysqdCXovoiy8mf0ObjuG7pQIX9bwbe
xCb4EeZP6/E3Zyro/I5yDSv1JVwNrs+ec6cCB0vBpZR+HyIhic/ezZcKI9/m
k+mG3kSueqPoH38q/Et738iW4kWUdcQ3+wRTIaPRgl/mvSfRvZmKg8OoIHT9
6/3jO88T0vdFRK/HU2Ep8Nh/ctHOxH7d7ia+RCrcKn7dqRviRBz7mRmVkLye
D0vUEnTFkfBWkJhJyVrHD+8VNrhnT0R8GXgkdo8KrOV9+SI154hk71y7u3lU
kPAYMND8ZUe8fi7dlP+ICnN/JCzlzGyJL2ajkXJFVCj5w413p58lBhcKiad0
KmSteg8ebrAhOJHCo+cvqSAn3HZ8SdKKMKpTiXxbv45/brx8OcCccHCeOXjk
IxVubJkWdHAzIwJ5Xkx9bKSCVcf3PWmupkTWCQ3b1q9UULp1I5T/ujFR/Hdp
k1knFa7+MJVxf3CKqL1d2djVQwW16yoexl+MiNF2ODj4nQqiNo7lShqGxGIg
y5TDDyqEPrUbPHfJgOAXe1v48xcV/AQ79XVjTxLKNrqbJiepsF0/99b378cI
bWbuRr8ZKjDxpwRU5ukT5rkNEfPzVLi+P8Bgp+9RwlU75sClZSpUPfrx8fYJ
PeL//u+B//+/538iSYT4
               "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{-5, 5}, {-0.07431791759497397, 
              1.1147170388288536`}}, 
            "Frame" -> {{False, False}, {False, False}}, 
            "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
            "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
            GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               Opacity[1.], 
               AbsoluteThickness[2], 
               RGBColor[1, 0, 0]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            Plot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{-5, 5}, {-0.07431791759497397, 
             1.1147170388288536`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              AbsoluteThickness[2], 
              RGBColor[1, 0, 0]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]],
      Selectable->False]},
    Annotation[{{{{}, {}, 
        Annotation[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[2], 
           RGBColor[1, 0, 0]], 
          Line[CompressedData["
1:eJwcl3k4VV8Xx6955rokQyFKhgxJg3TPFmUoJERUSEiSH4qEkClJJTJPVyRj
mUWyNyFKpiQyZibDvabM3vO8f53n86y19t5rD+e71j6b/4zs6AkEwkNmAuH/
3wn9hZ0dPnR43OWV6zEd8ri3wHLvJh86Gl1arqikSzYgDv4rX+NDkkH35DqP
nCOLq7ps/bfIhxK1HrdbWuiRQ7+fIOhR+RD71Ec6AV99Mu06HYP0LB9qqVVo
vJRvQK4Ni2QdGudDQyGNJ8XiDMlyYlc4qkb40KK0KP8djYvkV8WS3HFDfMhN
gkfRbfEi2a6vhM/wNx/6qlSNvXc0JrMq/BJF3/nQSemF+pFSU7Jrbeq+pK98
aCO88vLXZDPyb1OH/Z5f+NAhvtCfTc8vk3P91mSUavhQj50hyfeZBZmfv/YQ
ZzUfOr9rqJiaeIXskxWmOFnJhzznrc6sllwlG7SLHKWU8KHdz0fLHVmtyOV2
o8d9CvmQITL9273Pmiy+nnfy8js+5JcxbJxeb02mSWDqxCx8fv7RhxRxG/Kr
e9bn/RP50M+duQFHOTvyFquMwdU4PqQa5qBmR2dPtk+mGZ6I5kPpVE7Od4P2
5OMNAabU5/j+KcjfcStzIFMszps3P+VD37YWr8e/v0Vmnee7mhXKh85ZP/pu
V+RI/r37zXXrAHy+F9kKjl1OZM28O7an/PgQfc2XBIfVO+Q89WM3BX340JbG
o/z4A/+RH9764tTmzoe+a3eYvWl3IYt/nLqvfosP2fFsfryVdJf85EKR1x57
PsTUpyKdZH2PvDDi9XDVhg8JpTyuMDvkTv7MyRlYcBXf/+OlTBG9HuRDaZ3B
4eZ8aDrTwzUT3ie/Opoc6mDKh+7GrMY8yPMk21sqPBc35ENV829ystO8yC0L
KxGbenzI5LD72Q853uTjj2FUty4fmnOrlp/45ENmLTCMj9DkQ8xVCbYKjH7k
XLq7GYTjfGj44ofqFa4A8gnjHOb4I3zIXfjkPLEtgNyQ8cfhsBIfmm/8elw+
IZA8pG0obyPDh6hpHM4ftYPJzvGPX6wf4EM/Zlwc+uVCyBvT1bRICTxfRrlf
14UekwWey5d9FuFDGn2a/UKkJ+SMQVvBq4J8KO2aspCIaBj58OEkryV+PpS7
pmAtfPQpWa+THRzg5kP2USsv+oKfkQOEJ7+EEPD7ssHMvGH1kkx0EpMV2yKh
U02JdVmCkeTkT6bh5WskdMDsidJAdyT5g3W94eQCCc3wDAbvdn1FPlu0WeQ/
T0KmHtJd1brR5A4GlV1CMyTkSGYbUJGLIc9mvu7RHSOhNJ9sbJUtjuy12qM2
/IeEmlV1dzOyxpNZz/GmeA2QkIW74ewVYgJZYtbPJvcXCW2+PtIeczqJfPnI
tb+cX0nIZbi4/Wo8hTwe9Er/TQMJMX85l1evnUa+2/XtPfkzCc1mStke3Uoj
P39w8p5zFQn5pL1x1fFNJ4t8c+1iriAh16KJMwHnMshZe7JPpJaS0L3FBSmq
6BvyZ7h7q/UdCb0rNtxb9ieTbMh7wcohl4TiLq3qfWp7Sx6wCakhZOF2/zaC
WVMWeZVpOfhwGgll1zb6NHTnkBX0OrijokhoD8NOCKfPe3JVMpurXAQJbReW
2wdeLyDrzqv/+BxOQkZJTd4BHIVk28j3sUvBJCTx9CyV814Rfj/H18IDSOjo
H5OufUeKyX5HRa8e8CMhqWtdf7+tFZMTusPFTT1J6JLyhjcxtZQsLVsXMHcP
Z/L1vHO+ZeRS743REFcSCnx7/725fTm5TdQxu9yRhPZGO5MuG1WQmey0lYWu
kdCtPel1ZzI+kTssD5v9NSeh8F5ellVYTU65LOLzyZSETG6V3SGNQ/Ixvfn6
64YktIFdvOwnU0Om1+qZPqJPQspbdzn0v9eQW8BnHuZz+PmJVq3uvl9Ltj8S
a56jSUJdQiq7Avs/k5XlH/n6qJPQMzb9uZiEOvK21O10AzIJfTmSfv+FZT05
VhjMLhwjIZrnrd5Dmw3kRroJfzVZEvLTtVMIj/5KfrXR9obrIB4/u/1Y9uU3
svVy5ddBSRKSDpvIm4huJq9NPucP2ktCPFjje86qFnLDsKeqqTAJKYa30EsO
tJIj+2wspXeT0AXiRopFcBtZtu1YVjORhAZuM5yzr20nrzSJf0/hIqEnrK1f
w291kGs/sy+4sJNQwcHjmhUCP8hXygfUdjGSUL1s9/OdwE5yeEpI67V/vOg/
GU2rdwW/yJfjXJYUl3jRiuPmSbvn3eT9kRZC9DRepDi8dIvrXg/5U7DCjcxp
XgRDf5tfvNxLDvMTDPWc4EXm7isCgWZ9ZNMH9PnnRnlRWKPMuQ6rfvKcU9fK
XD8veqVZvJv0bJBcaY9Ean7zoonYm/vMzIfIIdY56lG/eFEL23SCFW2ILGbi
G3a8nRfViyT19B4eJhuqSYn61+H+h7106ddHyXuOEjWNanjRmrTYvFDVGHlS
Yf3m/mpexGqyGUEMHic/kmgpbCznRck06BVxaJJssOdDV0IJL6odWeuI55gi
Cwu83nAq5EXjiva3AxamyEVsHmd5c3mRVbvCClvPX7Ivg7XjyFvc7hZxQK1n
hnxuS/dFaQYvCmlTP+4yPEsepu7tMU/hRa6jYbJRrFQyX3e90+uXvEgg0+Xl
i3sLZCSXFhr0nBedN+nU3RFaJDv5+WTYP+VFFltsP4TrF8kNUkf6ZIN50aVz
J8OF5JfJd724VzkDeBGj4bd+m+llsnjLFN+8Ly/y8i+/tv/dCtnLnXK+2JMX
5d1xYJnXXSUfbPK+Ge3Oi57zUi46SayRO/eYBd5340VV/QPS5+jXyQp1XB/V
nHhR037a3gM9G+RhkrdsnRUvGo1uTf40vUN+YW+qlXmVF11nH6z4FkDATlUe
tgk150VXD3/dot9Fh8Vcn4zXM+ZF88U9x+7p0GOapZ9LFQx5Ua+NiCHDND1G
ZU1tJ+rzokNnqWIsLxmwcwWX2H5q4ec/H5UvRWXE/jEcPlCuyYtqGnh407OY
sAwzztPx6rzIOi72+aWbzNj2dq3ntZO8qP+60jvFVRasSF9pckyeF2V+tTzR
f4cDs0rjYGyU5UUnnnxU3G/JiXEuj4vlHORFlsn1L9xNuTD7pGQz5334eb3S
K9ey5sH4qJ53DUV5kW9SFpJRJWJI0+SFsgh+fswNd2obiJjwX/YvK/y8aOam
hP4ZKi/2BRsf7ubF9+9rpN3DcBJ2L7Jmu5Ibv89HJt5MyvNhLaqex/xYedHh
K9wfGB7xYwGhY29YNomIa7dv+bU7uzHFPlQztUpEb0WOlyidEMT6FJP6vy0T
0dypr4QPbELYsV9GuyLmiejSjYyy2hphbERW4bDbDBGxXmDeW5klgkX4sumb
TBHRf74cU/qxe7DpAyhIcISI6MhXjmuHi2KxDxIp64NEtPTl6YJilBh25rtH
VV8fES3+IXVcuyiOpdyTX6J0EZGxYXCtk/M+zOhzwg2Zr0SUm3KHEQ5LYvs7
Rwe+NBCR6eTlwKeJ+7GVUQUL+89EtP9D3f0xiwNYPPNnw/QqIhLqkCiQm5PC
HHdzNZ+uIKJHG+F9L2sPYqekzbSHSolI/2Ooy4MUaWxI9y9573siyijKbvp1
RxYrsjha8TGXiCpe7MnpuS6HBd72U7HIIiK9J5jBXctDmNQzPrnYNCIqMnC5
neKmgN1pUxPkfUVEKsH1dX2PD2PYn+Co9xFE5OywZPJWWhkjLrRyGzwjotbz
ee68rcpYCZ8t09MQIhovPE4Ok1fBQva/85cJJKKfeg//7oypYGZHVze++BER
ijA0Gck4iq2bhi8wPiAiG0wnq/PYcaz5ZteddHciuigdPWHGfgJL8RSfOu1G
RH0VdllHxk5gpxNKBn1vE1GYyx2l5cKTWGh/X/PqNSJ6Su7/tOc9hlnMSenE
WhBRQnFHY0cdwA7tuHw+akZE8m6FOtxu6lirOFOlmyERjdxXSL9COY1RDl84
yqtPRHxixQ8sgAbmphFf8F6XiAzwy982ooEJ2Mq/ndEgIis+oeFe8hls8t59
iaeAiHy1BK51Lp7BKoJrkmVOERE52XyDpeAsdvXtpVf2R4mIv+3KwoqaNpY+
/fDR0EEiuuv04MKRrHPYvY0vm777iajXXkNBNeY8psVJ8ty7j4gOKOilm4br
YdPymc4WwkSkaUALmHlpgFVh1KlVASKyqHwfs5R2AXt24aRdLB8ReXcr9sZf
M8SUXFuudHIS0SD5mopO8EWMPkDwlxsbEXXsz3bPEjfCOiNtjHiZiej8ap26
do0RNucw+zJpmwex75HgXSCZYN7zZKeIER5UqZ3aLr1liiVdPz6p3s+DFvV8
/k1UmGFVP5RsaV086JFU2qNwn8vYdrnkVaOvPGiuvNQG47fAxGT3dtPX8aAr
8qxuuVMWmHqSgEnxJx4k6avl+Kn+Chbgz6bHX8iD3ng/tUyNvIalL9A31uXw
ICaNopbfgZZYne2mpnsGD3o/sF8q0scKY9adV+uK5UEdF0Wi39VaY2G8P+Xi
fHmQTfX9fxFbNlhuYMtbHU8eJHIg79792BtY8/IXyTVXHqTJK9sscswW4/5d
KWJhx4PIOr+NlALsMEW9klh2Kx4UilUbzCjaY4bV+XwfL/Mgz4LQ71vD9ljk
awrHHj0edGpd/Gy9uQNWzJ/wuPksDzLsH5Zv23sL6wyJYngIeJCrrWXY74lb
mMDtkI1+ZR6EFUadefP8NpZwxOlvqhAPWhNpe3Pj0H/Yxzd2Nw35eJCl0UvV
HpIL1rfbaoTAxYMeFp/kPRflgoluXuy9TuBBe9ToD2ykumLA+bwZaZ0bXVYH
qx6H3DDroTM/ahe50b4Teh5HPrlhr+uOf5Oc4EaDjH/k5v/exT4fO6zdOcSN
mEim7IfD7mGjWbKfg35zo93S5+ZOyLvj73fvx7Hv3Oi+jnypbIAHln2JIfdt
CTeSTZD4BW8/wL5+2ZS6/I4btYaWtpmoeGHTqiuvWbO4UZaCo/9fem/skOhU
wq1EblTx6HRZe5EPph8xLCAczY0c91divq8eYs70fZFfn3MjbMElatzHFysY
bwmTC+BGGq8HMswP+2PtlxuZ+7y5kYg0Zw0o8McWvtYEhLtzI+q1uvS/yo8w
lfclXrMO3Cis0LSM8UwA9uF+guP7C9zoqWa5jmdcECZh6/qmW4cb3cCYau20
grFnhjpDdBrcqE3Q//foWjBmI7NyyUSFG/mGe4zruj3Gmnd9j3goz43877gr
hB8PxY7RZ3zLlOJGfDdOdwgyPME4ei+eXhPkRoSvkeY9+WGYxxdpHwkSN1qM
7+R2f/YUGyreKTvPwY0eCij0yN4Lx0rC8w+lbHEhuWeSefVmzzFLjE1Qc5gL
1a3IHBEDL7FG2SEjp14udIshnBDV8hJT3l3+LLqTCwm0Kuc8tYnEWKi2DJMN
XEjKIMojPi4Kc+tTw3gRF0KcM1KrJ19hfY2kBycruNDLmvp+5+FXWEEamgvP
5UKU0EuxmqdjMOHnsTJlGVxoattfbGk1Bgv2crYdTOZClkWfmq6XxWIWxnt+
H47gQmaFXfwHNeMxBibP+q57XOjTqKZHcHYS5kwzIBCcuZBwL+mxxqtkrLv/
gJrMTS70QDLR5GxICpZX9qPA25wL7ahay/uqUzCB9Jy/GUZcSMat4gqpnoI9
evFIquU8F8q274/9pJ+GmTooJoljXKhUvvFj1+3XGDJh/qV7nAvl3DTKCKZL
x2RP9/PeVeJCdz2qs74npmM7Qk8f10twoW8cXO6lAxlY1rdxN0cWLnQTeUkt
pb3FSB8+5UcRuFACAfznbp2FPcx4NVm1xolUDyFC3f5szOihhiXPDCc6qJoT
5AlzsKpbQvEnxjiRtkiHkWpMLiZlSv1xfYATdbIcVn54Nw/bUEjRLWnjRMLL
nipGGu8wexH3oP4mTtR/v6BVR+U91saiB5k/c6LQgGrYIFCAZQytqZiXcqJv
YsLbd0QKMYPIS+Lb8ZxIQyv+qMulYsxLmUdXO4oTneg7S1j4W4xldjS6RoRz
It71YffBkBJsm3Tqs4QfJ+I0oxfy/VqK5UdJ2GvbcqLvGmd++od/wLqP9D2P
uMaJrE7adBHPVWCMndHlPab4/KM6bw9wVWJX+dnYnHQ5UUuZ4S+fjI8YZ/R8
boQCJypiSxu5vwdiJ45md/Yc5EQZkp/+WjIhzPanzZbEPk6UHH5miuaHsKpd
XQalfJyoW/8hz1e/Gux2TBWtZ5UD1R+T7RfI/4zFHPMQllzgQJ/ORgQ+0ajD
arsUNZ3+cqDDvaYCGn11mPDu9Ffb/RxoXbWmemtPA/Y19slxyc8cyOKQ4wmh
X43YynFNa6cqDhRul3tIKbIJk+jeDC0txf3tiTtRRl8xL0GX39pZHEjPyNC9
a+QbJhNv+tDpGQeitl5/E6bXipmoEjNLQzhQw2ffPZIibZh/T1PLth++nsGq
5zpRbVi3EFn8pRsHev/996H6Z+1YaILk51IzDjRUxhK8790PrORk/99tQw5k
vi97uRN0YkO/Y/h1znGgBNc83eifndgJEXb736c4UHmbm2cuVxc2mUhl3dnH
gU4oypdfK+7G+E/lHNYR4UDN4nO30x16MPW+GxYv+TmQR69P8bjEbyxuz69c
SRYOtOw1QprN7MW0kz8Z6Mywo9JjNiG/qQMY9VnfJuM4OxLlZ6yNrR3EEnw3
cmoG2dHHc+ejO/WGsBkrVRa1H+xo9X5gsdShP1ikRCmUr2RHu4Pi/Uq4RrBT
fJ13povZEeX1Q4bGZyPYGMOiyNt8dpRWFtDEzzuKnRhT8hRPY0fztfoZ2fvG
sIG3eUp8oezo1SL7T+Y7E1ho3LeB1kfsqFuYlH+QbRI7/GQ6PNybHa1k120c
yp7Eghylp5j+Y0dRndarmstTmKx8RtrqJXYEHF9bW6AZrHPv5wulF9jRlYUE
cyPfWewh9/CWqy47eq9WwrmhPoe1zYtZ/D3FjsRq65pbO+cxj6JE0oAkO/JA
YmJ/kmiYeHolStjLjl4qcpapERewpqgeZ7Pd7IhYznnKIWQB2+O++1sbO57P
+6TLXt6LWO3xqMDPNDbk4+5g4xy2jDlJFx32/8uGzjDovTwtsILtEmofPDXG
hmrHzLnuv1nBHNa5T5V1s6Ea+umCyy3/MO5PYUtZkA0VxlscJ+utYx/ys1/b
VbChUcHVx/bL69j1lEZDiWI2pB3361Dy6w2sxI85PzGTDfGH0bVFsG1hFhoB
ds+fsSHFpDN79zETAOORNL7zj9nQCvVZ82knAsiXRDUsj9iQYTBFpaWTAAhM
23sf3WNDe3ZO9l3PpwOZXx503b3Chr55rL5l92UA8coemtkmbChQQ+cThYER
hCe7FQzo4/msZx1ODmcEbndvh+mqsyHkUMG8N5sJkMWuYWIH2NDw8fabydys
QCnMPNdElA21THnZNBayAonlS4Jhu9kQJ016iMucDbB+M1hYYmNDiX7dInol
7KDTQz3z6xwr0ioMv+5M4QJf/pziI0yyoszhwjSNm9ygUk/V/+gfVvTE6JMr
yxEeQJFQtqD8YEXBsdcCZ5yI4HaLJLfHB1a0e9mnf+sICViqinvnFrKieu/Z
jV95JGCYsWdyKIcVWbZIHcyW5gPHvHbVnk9mRdfFk595yPADeikWj30BrGgT
eVV/vCgAliMYRky9WRGRt2BRd1QATG7sXAi/x4oeBXEN2XrtBi3tqzL/7FnR
34g3IKpQEMQ/nO5vPs+KGDZpxbIGIiB8cvwc/VlW9LWMcPPejgjwNR4pP46x
oqK5P3/XS/YAW5m+l6+VWNEhLVtpMXlRoPTz+1nPXaxIPG8kTCNHHEiqfy3K
52bF9cHASnXXPiCQ2yA2wsKK5CrmeksD9oFNf7imv86C2CVMbnraSYAvhwrz
JQdZUJukSz48vx9UxuYLm3ezoJdnKpofNu8HefQ5j5+3syDO1BdHTxoeAJHd
r6+vfWZB/jmxQ/PWUsAy6NWu1iwWZHbR2EohWxq0gBUWz9csqP0DU9AVVRkA
NszWxZNYEK/dpYbkZhkg7iYy6PaCBc1Ey/WlbsqCYavXWQIeLEhmy1z8WpA8
MBJhTIT/saDTv1QOLykogM9dds8cbrGgQ8WjzPv7FUCGvoxb5VUWdHm3Y+Y5
CSVgr1agZqnJgjRtA5X/UA6DrhVeBRYyC1L/fq8ngkkZaBfdFS84xoLyRHep
XHZSBtIyx5noZVmQ5VeFD6bqR8C0QHXLGyILKr+me1WV4ShwXvh2fbafGXkf
t/l+ZfsEGMiXN4n5xYxEfy7wZz1RBRduvdAC7cwov7TJ+fPuk0BpyEjuZR0z
qhg92ZJ4Sg0sfO9ZUsllRksKxwb0c8jA5onaRH8GM/r9VnH1qT4GfpxJ7glJ
YUZyYU3OLEsYKPloXd39khnZ9ym2ex5QBx7ZE499PJmR8iXikujL02DcVtfr
gBsz2q7a5g+lngZm4rlOLbeZ0XpwG6HlogY4Eet8UdyKGbHHJ3nyCmuC9aBl
4bqzzKju7cRV+9ozwNea4R0HHzNyM844KeelAwpatZ93cjKjy/Jf/i2v6oBh
LNw5mZkZQSPza4JeukBr7y5FxXUmdMH6luDTwHOA+7dUgdEfJlTeMsivXqIH
1HVvR4j0MqGMAIudAS194PbhvctoJxO60mDbJNWnD7piThz2aGRCZa5DrH3c
F0CK8bmi+PdM6G1KwDLrN0PQVvs80iabCeX9zG+NFrsI6JV/uMmlM6FcJ+WB
dPeLwJ549cinGCbUKvQdXJEyAgrf75QMPWRCBZbJ94cSjAHUell2UI8JjZ68
bNr00xQslP6MoZ5lQiXf2i4YnzUD+w8I368ATEhmNpK7vswMhDKkHz9/hAnd
qK6Y9k69DAxRyQdnYTxeWd5mJ9QCBCiuxR3nZ0IJEgoGL1ivgJIU8gMCNxOK
95CbUA+7AgQfNqhG0jEh1XtW1gdfXQVDqt2VpZOM6AF92nJ3rSUgZe9J9B1m
RNXTayb6JlbgjOB1b+0+RrTEEJSyb9IKZK1MqfW0MiLm68SDwU+tgUvxRtVm
GSPaHAoRu950HRDkxaBmMCP6FTByMy7IFvgInLYM9mVEIsn3Yi5M24J/OzZb
DfcZUXCmke2ni3ZgriNT7ZwjI8pofTfz44A96PVU+GB4gRGNNsVTX4zcBKY2
hmaROozo+M3zQqlmDqDjvNvKj9OMyNpHvSPquwNoFC1TMVNhRMZzk6tn4S1Q
VkcuvCbEiGpa+AI9Km8D5XdWhqkkRtSwLGR/BXMC+bGP5oc4GNHkeXZX0zon
kOFYL2+7zYAkc8VS33bdAZFE/RzHEQZ0tEAlu5DdBdy5ejX9fj4Don8REHTJ
3w1MnvXVqMhkQMyXrzA5dboBW0XKn/VUBrR/Rn2rWuYusKAfFfONZEB/uYx9
pbrvAp2s20lB9xkQC9dDZcMz7mD/klf0y9MMqP1p21DaVU9A6U9S+XGSAaVv
Pn8xUu8JRL5U/+BXYUAGD4yIEUoPACmBnhQnhftvVgiosHuBHRD2PIWDAZnn
1FbMt3iD30/jH+f+pEcWKgve2hQ/8KNePM+6lR65ntnaNuH0B807b9t2NdGj
TB+LmSO6/qD6bpmQfxU94qfri9yq8wevr/zINUmnR7zd+6vb6x4BRzmuti0X
eiSypkadHQsEN+xeLRU50qOpM6YX1eSDwNVUESEHW3r0lqxtRXYPAgZ8sjYd
ZvQosuFTixVLMFDe0FrKxOhR8lTZhb0qIWDjq7+gISc9urjpCXTeh4IlRlYy
EzO+nlz7u9/pnoA57MX1yh06pCZyVpH+0hMwVJScs3+RDs1Uuzd5bD0BdQmV
p9Z66JCtxI3zLqZPQbjjkvXrt3RIsv+tTMDB52APu0P2kgYdytZXE9DYEwks
q5vDJU7RIeRF0ZQ0jgRpboddDI/SocKEBHuNsEgg1bt+LO8gHRolRz9VWosE
innP6m5w4uNXiPo/6okCGgbFgx0/CahrhtpukhYNbkVu7yp0ICCqO114wZF4
kKd1Y23gOgF5LwaOfbgdD+bWv/RxXiEg0bMPKvzT44HbjZfpDvoERHh/6N9x
UgLwUdl/WFyZgFLyFfxS/iaA6slQfgM5AlqWE5PbEk8EdMmz/7z3E9CuLK+c
6UuJIISpvPqXAAHJjPzNMKtOBKL5UXGi/3Zg2e4PeRWhSSB91zUrr6kdWPW+
bKy1IglI+0pJdfXuwEsvF7ZOTSeBwxcqip+hHci7KpC7pZMMztAGWjaf7ED2
GoEusJUMmsyzoi/77EB09laRinQKMKh1vVrivAPNuJ/rnzZKAZejGKdvG+9A
+FJD0j89Bdw+KsvUu2cH/p6wP5mumgrcmCreevDswEnz0OL6K6nA66f2ORL9
DmRusZKt90kFYe52L3QntqGL73edEx9TQeTZpcNjPdvwqbS7aUJ3KkjYFdjp
37wN3cgbCmVLqSCnlCL0oXAbPm7riPbmp4CiYMUq44xtiHID2YPFKaDyUrXl
fMw29J3yle2Ro4DaA/p0T59sQ6NtC8O7xyjg63JvupTPNrRiVG4xUKeAjnpH
rVrnbbhHZmvWXpcCfkevTV67vg3N2xdpZRcpYNgu9Oma8Ta87z/Hf9KcAqaO
7laI1tqGxhHfw/5aUQCVKbNNSXUbEppG/BvsKGD1p8rdZrltqDRsK9rgSAGE
zM+7HES3IXX7V9CYMwWwehh9YODdhsoKz9vE3CiAqPXHIpVhG9Zv7BFyuUcB
ggIuWydXtqDWvn7XdncKEB/fTu2a3IJvLe9MYx4UIF32TMOtdwtefaL6ohi3
K4XsGeNq2YKpv5kcZfH4E6a5j7PRFmx84huQ4koB6lInZc8Wb8G4j98G2PH5
dVYam4febMEz7TJBjrcowLDB7D+fuC1ovC/k/ocbFHA5ZpxX8OkW9NgnXj1/
lQKs7d1Lih9uwUIuRUuOSxRw8xij2QWXLcjPG27FrEcBzsxRa9M2W9Bkw7q5
9zQFeHTtSwq5tAUJob2FIfh++2YWYBI6W1AcjInTy1JAiAf48+nkFjz5b1BB
dw8FPNdqCTSX34L+a/YrplwUECNwTWpZbAuqv5VR0l9PBZllXrcPMW1By3BR
UWphKngXwsbd+G8TqoaHRA89SQVlpnEFN6Y34clJZUsFq1TQsFK6nNC6CSWO
rlyooksFLQ1n4o7VbsLGfRqTUy0puD7/ONlRsgmd9vwpvhCfAsaO0fzYEjah
wxxlLPVACphh9pd4E74Ja7GsWM+JZLDUxV2v7rcJRyuhoH1mMmC8f4jd03YT
vnueGXtNJBlwan/M4zPbhOPGPFum7UmAf/e5C+91NyFj8TLjmaAksL/85qtx
hU3YMnsotWcoERx6vHIsYN8mPLXosuoWlghUzIJ79vJvQumpxJA/SongzL/X
opfWNuCJ+QgmiXsJ4MbxgazPnzfgsmNO8P0fccA+67ipVvkG7Iqwd3jvGAcc
hV4yNOVswB/14Wnr27HAZUPTsuXlBqw6+V9ipWgs8IHZfD1WGzCg5hm/18lo
4KfEUHPFeAPSt46kjla8AgFpV50HtDbg+qhCkfaxVyA0kKdpRH4Dzs7UjM4d
iAKvtN195zbWIe3tmdXooQgQ+6FFznV+HWoU/TSN1Y4ACTLSPYvD6zAjrqyT
x+wFoHD0HllrWofCMf/JunSGg/xW9SmGuHV4NXVzdCT4MWgw4zQRUlmH6jVO
1ztf3AdNjXZ0SQfXISFvMMPm9j3QrArfiYqsw8Y2o9/uaq6gQ8SNbT/9OqRS
ujsO37UDg4O/qhXa1qC6/ogMl4cWXL2ZLnPGaQ0a+gkTJlv9oKznyR3njFXI
OCHlX8YQB1G/gexIzCoMClxSk5eOh6aaNy6ZPVmFndwb9bX6CTCAOzwXOK9C
F8XLfg2JSbAno9+MeGIVrse2mBSkUmBou39B4bd/+PldOh9/+g0UPR7de6D6
H9xzh6Gc1PkGliRlMycU/IMlDf8+9tplwqGbHVcDov9BatCS40bIW3h8W5LN
2OofPAUOfM+vyobjsl+uLy2swE4er2XZgXzoE9Eb7jC2Aisjt6ZVzd9B0sp8
ed+vFcgvkLve2/4OYjWC3PVVK9CzJGOXxcf3sFNKXlX1/Qpkr/xSuL6rADqG
n7bNT1uBB8eOy7brFcBoM8fK6JAVaBHdHfKztADKfvIdY3uwAke8jez/TBRA
JBFF9L29AtdOsROVBQvhzOxHe3vDFchReSjpyt1CGGDc9vK3xgqs1h5dIaYU
QsGK0SqDoysw3YXIU9dQCM8EcfEdF16Bvg5Ngb95i+DvqX1YLucK5Ev03hFU
KYIuF47dEttZhsFf1x5wmBRB5tJzr6Joy/DFm3mJVNcimChsBVlGl+HilSTm
mvAiqOR/d9q7axnqXAvjsXxTBBvGHu+iNi7DYzqXWG98LIJXzyep235chu0s
vslVLUVwoaDgdnf+Mry6T9/KbLAIhgrUx+hRluGw3OfPYrNFUNSnpwZFLsM+
p1hp+tUiWPJndkYleBkuvzjzc3qnCJ7TphfMvr8MV25LbtUzFsOhPAHNvY7L
ENVH1fgxF0MPkpzzy6vLkJ9wRIWRqRhyeoJ4pgvLsCVN3BwQimFav3Hdg9PL
8GScocxefHzlUeX1TpVlqK61+NMRn79umldJSXoZOhiwXszC13eJRrV7KrIM
q8qPadTj6x//15o4zr0MB1x6LxRWFsH72+/aT9MvQ2uBPvGr6UWQlek5S/Ly
EuzSCLAsDS2C8Rx3yKuTS5DVwKosz7EIypL07hr3LeF6eqLvsG4R/Cgol/2u
dQkyR64/VdlfBPXE2AfZPi9BzLn8acZGIew/MMVvV4bzYFa+a2shdD7UeA5l
L0ElVXLH09RCuKP81l8keQk25MlOD98uhBGqIWUeEUuwRC5s1V6lEBZpnZGQ
v78Eh+Lq7pRVFEBNfcnLoY5LUPbkrnM2HgWw05j++ci1JTg6K8O5qVAAV6zR
WvyZJfgqe7ra4+B7+PhmquLy8SUYyp2dFuT3Dgo6+9oZyi3B5oWansWWfKjm
faqdmbQEnXZ013yN82DzIxEWG6Yl6LJ1nc06NBdahq6f+rS6CD+w5DQdKsmB
/tEfsu4OLkL19OWc3dQsWPdexX8obxEaHog/o7CSAS+V8ZWpURbhajNfvt1g
OhyvWvgbE7UICzZTyguqX0PWrwVm+l74eKKMc6JWFKg/ekixUnsRRshEZ0To
xsCBaQ67XWqLkCLJbs7hGQVdaNMJLgp4/AeOdfWXETByO4v54K5FOPTRNd6X
ORh2CR4YiBpegIRd83oli7bgphgj//zPBYjaT+wu8vQEqwdGdM81LUDxY15a
ng6BQPhIWimhAOed4wqdki+Bpf7eZ3ceLkBBJ/0bVU8oYOLRrlPaggswq+qf
FDQsBOwP389HsS9A6wNtDdOZRUDBUzd9aJMGG4Vaj40ylAAP54fsXn9o0PB3
H93JjjLAfGWsOy+HBglsSXG7URXYr1LqTiLTIOdPV5mI2Tqgo3hBxkoRj7cy
DO37Xg+cZKf6cvfRYNKRPMy4sAGUiO89c5aZBu8l/hea9qgRaHIFkzxbqVBc
5sqdn1rNwGbc5H3/dSokZgyJWMt3gJA/czayJlTYZ8o0kFzSAXL6QgXua1Hh
Ga3LPsLkH2Cho+ohUY4K/eM0qEUXOwG9n25cyOQ8XH05IPg4tAuAw1PtF7nm
YRYh8Jb6gV5QGS19dtJ0FibF7bsY6TgMWK9M3KA7NQurCop6ysqHgal4ZoDw
vlnYWPNm8hfjCFjIkUR6f2eg+J+jP/6ljAAZJKpW6DcD89b0njN3jIK4af7D
Xll/Yd50DQu7wgQYf//jQtSzv/Cyzzddcc8JoOIe6Zzn9hfu36Uc214zAVp3
ePIGTv2F1kXPxmeMJwHzLo6Dmu3TUOfdWt5VtyngDuj2cq5PQZcbfdO0yL+g
lhGpHRicgpe35bJmf/wFxK++FljdFIyovnL8IP8MyDPZjHV5PgX9L+lEYZEz
YPTWP9JPiSnIavQ73DloFigrlh2eY5mCxO1nKY3Vs8B/6Z4hy+wkNDTpczqx
OgtE/BaeqZZPQn9W2l5thzlg9GqWNeX8JFQilV7POjUPKOZ5B8uVcNbWlDv+
3zyYE72t1bZrEoobaYZVUuZBWPZkIP3QBPTPGnTTIVBBTfXItv29CTh5dFdw
hDkVcAe93utvPgHV3S6f8XGmgqu610/FYxPQU22ZsyuAClZ/DDz4xjoBkRoj
R2s2FShN9SwpJo/j+3/pQSWVCu5R5WV2B41DF8tU54kdKvjw79G1bcdx2H3q
quALbho4zSzb0HxiHBquRg7qydJACJfverHYOJT+mG5kc5wGvvJ3KCQyj8OC
VxEHaJo0YCTpFXurcwy2vdll7HWFBmJkW74ZfhyDESpiz+7Z00DvYQnCiddj
cEiJc3zChQbEVT1UxJ6MwQIvnQedXjRgq/7VgdllDKLX7XdPBtFAlrZo8qwp
Pt4qxi/8jAZmDNzaO8lj0CWpIeduNA24XxM+mc4xBj/cEzeOyaCBSltn57CF
URg67X3NOpcGtm/XvnbtGYXWf1YNMgtpQOOuwK/LaBTqBDe2OpTj+Xg5cqi/
HYUFMC4+qwrP51E1OPgcj08JvG9fQwM8T0j3uN3x+JiNs+n1NGASYZ+1fGUU
UmJLFqyaaCAutrKvT2MUumw+8UlupoG+FG7eOhl8fO3ri1db8fwybc7mEkeh
/wc2z9R2PL/8sgeR/0YgoUzwlP0PGsguYX/3YGAEDnF8flTUSQNzHy2Hretx
O11xYvBPGlD+XCSgkzcCP+j2zgzh7PGV+bxiFG7v0pqsx7my3cJPwGsEdvuP
EY/hvN39rnjLGrdnX1pTxsfTGKKfHNUegZSCHM3qDjzfCdM9zQoj0P+uUlpP
Gw18m8sxLN41AlGhXEdICw0QV7aDEjaHobVP7Jsv3/B8t4wqHo0MQ6WcwdXk
RjxfxrezDl+HofqVuHIOfD/6ODb2GRYOQxSn3EvC90uc74Lp8Tg8XuidYym+
n3bC6WGifsOQcETHaxnf75x9/6qZ7HHmkJb7WYTnK31+cUYPH4+VNdc0H89X
KfVg55FhOETpO+LzFs/3+OKVj8LDMCLAk0MnjQZ2zibWPZn8A8UF//vXG0UD
Z/TnV11a/8C2sw6tWeE0EGqiKX+5DLenJfkcCMbzufE3WioI57tb+ifcaUDC
X+3mZ7E/kHL/ejiHEQ3YP36RmMOMx9sfDU7Rwdf3fKT15ewQdNk1Lr6C0cCR
5KcnrD8OwTbZxiPb+P0/U9nLtmU6BA3//UuEBBp4l/NG9YvaEPQf8pjvWqIC
wcT/br0UH4JDijd3fZ6kgq5/zJHnOwchpV3rnnQbFRzwNiUmrw/g73FW4nky
FdQ+WuZU1+6HBaHtbKtHqSDG5olTJ7EfEtiZfUkyVHBLc2+zw+8+aJjb90Zt
DxUQmc4+fXmnD/r7MDZ/oacCq9BXbCNRvVBd9rHfudfzQPmW9K3713ohxVKw
WCpsHjCfq2rkOIjbNS5NmLjNg3cco49VKn9DCmGSAjXnwebzI8whQz2QMPjr
huvfOdD23xc74ZweaN224vKoaw6kG16pf3e3B/ofLM8i1s6Bc6TAoF/MPVD9
NLcDSpgDoosCo7fbuqH/LKfL9OM5sPAjR5OQgDP9jbRM9zkQH91BLyPfDQms
C6/HjeaAk4e9zaeVX1B9kC/KTWMOqJut11xEv6B/ROw0RXkOTApKPPIy/gUJ
M9fYFvnnQNVa6RD3XpzVU+/uZZkDL37rqqePd0F1gx9P/q3NgmNJrjvfHnRB
fzmtnvo/s7jeMllZa3ZBwu7efbBrFvRfi69e4sT9AxhV3JpnQQEmL/qk6ydE
HFP8f2pnQZBYzcO9FJyvlr/iqpwFlwmX+gtv/YQELgODtcJZcOjP5CmtIz+h
fyc1803OLCDU+iT93uyEBCaOFr6MWfDjNXHTuaETqnvtVJ1JmQWZgRlXGCI6
oT+J+bhq/Czwsj3xMda8E6IqgSbaq1lgcLZZ+JAkbj883OT8chZISFl7oZkf
EF3vNi94PgtWmJd6TMpwTj11oyx8FjRNPFad8vsB/UO1E/yfzoKkRpH4h7o/
IKHI9CE3zi7Z71d5+XAmyV6ywlmJ2zlQY6gDoqmATXM8nuZ2iPtufgck1NQP
bD6bBUW/puPSvXD7u8oprYhZ4HYqW7JTuwP6P340cixqFhxJu/mOcRfOu2cc
v8XMgiUmKdWjw+3Qn/znH33iLChxHP1s974dqn9p7O1NnQXura8NYnza8ftK
0DB5g5+HyvWeBl2c95opOebi+cSJ2f4TwPllzGORollQttU/d3C0DfqncTHa
V8yC+zZJDy4X4pwnjWnXzIITXywYn/i2QTTEk1vVNAtW5YReVJxvg+ob+smf
O2bB4rSc7tHmVlzvmIu9xmfBvZIsyxh7nMe+d+6n4fM9PHDvH6EVr+fYvUw2
8XiiWGrF0RboP0NYOIbfp81jpGVyajP0fyOUk6E7Bx4SXrCnqjZD9QfL3bsv
z4HtJg5xQuc3qG6kurxgPwforjGdr2X9BhGWo9kWPAeYA1cpWm5NkFD3OyP/
yxx4rOde9pazCaLRp5cnuucAq8DCN9a3jZDA0BxiNz0H2LP/rnzt/QIJhYYX
93DPA57WAb0LZxsgMuPt+ms2DwRF6lfNBD9DwjP30XLqPIgfPc1dUVQL1Zuy
E5fpqED4XbWksH4tRE98S59wUMHe0x8M+h7VQMqLSMVYUSrQbDHVremCUFzP
t5zuDBWY2kumdfhUwKEB/4b1J1QQ5no3NLL0A0SBE3upL6ngk8/n/4zmyqF4
7RBvVTwV7I+6gXVYlUHr+zlCbVlUcDml+EBkXCkUz0905i+ggqfZDFxG7SWQ
clFj5GA5FSzA9N52jWKo7tyhXFpHBVLfFmtfehfBoXfJhXLfqMC8SzPnYkkh
tJbOi3NspwI0M+LZfqAADklNP1Trp4LJ+ZtI4tM7qG589cXXYSq4wMz64rVC
PrTep620B/9fih7ROfSaF+8TxERn6RaoIFh3cn1fYBZ+n/JiolaoYMYqtClt
KRP6lz75O7xOBcYe0nH77N9A6w6J3rltKqgMb7RP+5UOh97H2ZXR08C+dIej
+3RfQ3/O7cQTzLg+VLAyplVSoLj9C8o9NhoYSL345vTlFOgvO5F5i5MG8ptf
apxWS4TqHfJLAjw04L3WPqguGgetu88OevPSgK4U6aE6XTQcCltsi+Wjgd3G
RsLqoy8h5TXhjOMuXE939v/n9/wZVE+9Ur8gQAMO5m+yfU0eQ+te5SUlQRpg
LD4w+lD4ERS34AjYL0QD6kJ65HXkDtWxH8rfcabGxdvS4m2g/9x8n6wwDfjQ
v6rXOqEL0Ij2LTLOCgk3vvAf+w8M8en8YMR5QKhwjoPHB/izj0k/wuONj3RX
hZwOAkNJsWFF+HxlPWYBj73DgLrWJbn43TTAhf5K1llEAGuZIMOj+PpAVG5I
3f0ogMqmLz7mpwFX+9tTda9iwBBrYvwLEg28VpXTqy+MB0PjPekGRBro5Pz7
rr4lCaiH0O3UcdEA81AOb8PfVEBhsz6/yE4DSeZHT94ISgPqdbxqv1lo4Khm
9O0RUjpQN/j10ouRBloOLSfdSMsAyG1i/09cPwmE0p0b1W+BeuRQTtUqFcRP
8R8e1csGlDPvks/jeqr8456NbW8OEA/b3Rw3TwW2mSr1tqv5gFLbF+E2RgVb
L16tjIa8B/5ylGy6ISr4dmo9qiisAFCWjtGb/Mb9pSzqlYWKgD9wE9dpwetf
EfYBt6EiYP3p5Z+ZL3g8T+VK0dtigOi/dFvU4Pq7JiR95Fgp8DeQWI8rpoIv
zT1hR4w/AP9hkR8t0VTg4Pn7yxW5CoD8pSnqz6iAdX8vYxBDJUD7KwQCg6jg
nHefb2fxR2Ddfe18kBsVNMsMurnzQyBua/W+Vg+P13TL752uBepbQpwX1+bB
ifiFb/OmnwFh5OfK0Og8YJ13m2b4/Bkgo6THd9rmQXbC3YOHEusAIYJh49Xb
eTBNu5fmc74BEGKEG76YzgMnyv3ovXlNANU9liRUz4FTK/+KDwt+Bery9HLy
eXOAU8+z42zQV0DIVHUpxfU6/58nj/PVb8A/plF71nMO+OqvyQc0fgOE8Xq7
t3h/YpD+QC9GpRn4W/T/bMf/h3MGXk+qOb8DQtf+yKcn50B1xvrbDs/vwH/h
bdD+Q3Pg+bpXw/jod4BMVPlOi84BxUxvBp5PLUD9v8cjAoxzgLC5sU9SphX4
vz78sfvfLGi76KN+PBrnFIvLijOz4INvdfX7Y22AwKR2OwfXa0r29vcKJ5zN
B0EXrtehnVj/59c4i32OfvMZ17sd35nv3W3AnyOxSOQjrteycOMXdzsgqPIW
qBXPAvVLO+zDZ9qBut+gF2veLJD2B8IzXrjdabk9CNcnYq6fzEoBzpw5Z4tx
/Vr7CU8QJnD/yrVjMQmzYJhA0GHf2wEI+9u6FHH9+yqnbsZv3IGv1/JAQCSu
n6b+9qJPcPs/X9rzF7Mg4RFyl4YdQH1VotsM19eAPEKw8jJuj2rTHMD12PGX
+qtTcj+AP03WSRJnI/pH6VrXfwCCS+glaZxPytcUGcbi9uzotlmcj3Z2xVQ3
4fZNYXMTfDwl7xmvQ5s/gPpH1ns38PnkJOitEhQ68fc0c0EEX49U025N1uud
gBDmuugdPQv2ucgf9IjC+bs+ORivP/bs1uQYre8E/gNHRo/h9Ylg9eX5i6ud
AHm0eUSkzwI+O+cfUPYn8H/YeuVl9izg5gwql7+G88hU+4kCvJ4qjk9MfIGz
xOZ8cPksYLJ478dWi/OFA2/uQ7weoqu/cX/pJ0BZcx84G2fBxtvf2mNSXYCQ
4/1Nsx3XYwOqnLF5F34etZdEemfBTJLIkkJ1F/DPICxmUGfBhObh7iRqF0Bj
rseMcb0entaqYpf8BQiGasYJrHOg54Rb0PjjX0C9orhnSmIOdA4+djCpxO1G
+tqzSni9GpKsVzvzC6DYrRg/MAcaOhv5Uy52A4JcpNlZyzlQ4z2wyhHUDfx/
XH/n5ozXkxJLfQ/KugHi0yyR8JsDRS5iby6J9AAU4L1/K20OpHJ6HOUa6wHW
tNp5ldk5kFD8VMh792/gH0BkJdHNgxiLtK1J3d+A8OuDgfGueRCe1Vxf9+43
oJROrVKxeeB5RtLUx7MXUFQCOYVi5oGRT5vHX45+MCTooDt1kAr0JcctzLF+
QHVdl+09QgU6XzewLy79QEncWv4XoAJM8CBL+k/cv3vdftiMCuRKHsZapA6A
iIFvuiuPqYDeY1efrdAQQKx08s/w/5+FdU7HB5Uh4BLbs7+CRgVF50ATpyHO
nmaBlVtUYCN2q6wkZAgYCnF8UMD1qbaxKoJxaQhEyIMRj9M0IFx88fFlnj9g
qEF2eOI8Dbgljz/Mk/0DKOZj1rymeL/kRrxtcv0PUE9m3PC7RQNeV99cz/L5
A1yehGLVbjTQoXXy8mbsH0DY42v81psGAkVsz2a0/AEFdgI1Tng/1se0prY6
9Qf49+enabyiARXqM2U9pmEQQZi2LUukgfDfEjIUcZy/z9DqXtPAaF252JLa
MEBRDOB2Ng2ceq8noGOG2y9iRpnvaeBV/B/OJLdh4L9Or3G3lAZmAj0YqM+G
wVBI0tHWSrw/c+ZY18zG48vq7cohrkeXKdTYOtz/luJemToaWNI4OvF3ELff
p6/Yh/ezevJf+8HGMCAuXs1OwfvdjN1WnVECI4Ba8dU1Ge+HN+mWvk4cHgFD
ehXZInj/bjITWqOmPwLUm8c3BfD+Pa9r74cXDrg/f7PcM7zfZqwpejcSOAIM
x+k4ffB+/Gqu9pvjqSOggCkt9A/OJdF9iU8rR0DcxeTXH3Hm9HeNHPw5ApQ+
iLiy4mzryPzkCG0EiLN+3teAj19lkuj3mHMUUCNY1hbw+fmBkkfvwVFgGO5q
9KyVBpxk6p0UNUcB4dwAJaqZBur5LG4EWo6Cy0JVzoxNNCC6PWf+68EocPmr
bjmA5+8xGWgoFz0KBN8nyogjXI87BLX9CkZBhLV4eiO+f1Kf8sk/vo2CoQ7n
0q4SGvB9q6FycAKfX/HVDd13NND18pesN/0YcDh6sEkM789D7OkEJVXHALX6
QMZSDF6PGMZw3zcZA4KWks20ZzRwTE2O6dt/Y0D8awPRMIgGxnkuLbhljgEU
nWan8B8NYOtTkw01Y6DtdsRc/g0aiBn1HRTuHwOscn7Bz8xoQKsiq7mWbxw0
inMPOJFpICWd/FlAcRywSqn3OynSwMqzjgrHc+N4PWBu912cBjJtNjNJj8ZB
ljJnTCEdDbBwGj6ymRsHESVfTAWq8Pr2oAU6xjYBiD0prwOzqSBHw3aHff8E
oO6Td78aQwUGDzwfFptPACUrt98mzng9ME55wFg/AVZFo7QCduP1K13uh+7B
CSCoJPXTiUAFJ/eW/stbnwCXP3g/T2ifBwPGTe6XlCbBh3+7emf+mwdSNTTX
zMRJIH6d4H2cMgc8+zYKvMomAaXXBH2/NQe+/mOiGrRPAhfLvel38P7XWUHY
+R/zFKDebX/ai/B+KVHDUcdtCoiLmh6a75gBZz2ibKZ1pgHB776xZts0iHmZ
nFZ9Yxqc4LpvWRA+DSbz3g5F+k6DocSwe/dxv/CRj5ZqJdPA8P3CC9nqKdBp
OGoRLvYXKB2Y2G54PQls5Y4aK6z8BYxOWqOcpuMgcKhL0w3XBfHHwVonXvwB
AxXn73hW4TorN/ElUfsPOBmFYnx/zoLRm5d0+Al/APVszlQY3peLHy5/YOo6
BCxzH75Iv43/Zw8Q96nmDoCTHvt7O4/gfc7HSInei79BzIV4xl69eXD1NVXY
uKkH0KS5Ff7YzYMlZQWC9+kekNX7z382dh74lKSv/DvSDQROf5Ni3pwHo6cP
/HSS6AJrTKoVIjZUEOq9mrwt2wEy3Ra/p+DnVBV5tCkZ13WTwfzhfd5U0Lbn
g6jR8XZQ8EGCU/oVXgeyXLHj1mkD9rc5rVQacP/Z76tFc82gs22QUV8W7wuy
t6Xf72sAAeQEobZjNID4XR5mGNcDpRwTBWNN/J1PL4yph9aBp4FNZuZX8Xfo
cO904Fot0DhWnGP3nIb33T/+M12DoCAxxNB3gYb3ObInZ4il4BtfyAQPYQGo
X7gYKltUDMafBvumcS0A8aH/LvJbFIE9PkF5ddILgOCwudXn/R6EXg1g5bBa
AIZ2j9tv5L4B6Z2PUpOcFkBjqP7K08vpoFrv0TEFrwWAuEhohZQGlk75216M
xuPNat2HLOOB9V5fFPttAVDQdDgUCADe0Q/NZHoWgP/uDNHk/nsghuvhXOU4
7t91T5LcYQaat7z3DNAt4vXMD6vruR5wwt27+D8enAkRB2sOB0D6Oa9zdHsX
gfVvA9c3vaHwxMADz/0nFkHbrd3Sst8jobHpA56ys4sAsWHLc7+ioXOLZ6a2
8SKIsDr16urXOJhRfb/T0XkRUCxnTjLdTIHEVHelwoxFkJWpxPRLIwPK7Xb/
olG0CFiNl09M3HoDtV7cs+yEi0BczDSmODgT+vjdDf/3exG41Cq60ydlwdh/
bpJPJheBg4b4lS8x2bDoP7dK4ZVFMEQOPfA9JAdOWrlOknmXAGIp85HSzoMM
3S5+raJLQNB6fgDtzoeihi4C1w8tAaWOhlqZgXxoov7fmSDtJcC/8LhrTe89
/O+Dc++uS0uAtYTgmrv8HoYpObu9tVkC1JG7stbnCiASv0P5+hD3VyTZmPb+
r6brjsf6e9/2Hs9QGSlJREZZlXqfcycjaSCzjMgmO6sSESqryKYnJFp4lJR4
UFEqWfnYIqREyd5ff/x+f96vc72u69zj3Oc+f51iRneq+17Lm9OYXqNSObq5
hDFLcm8cT53GDSzpAwsWJQzydTeHK/nTOGm/k0fW7RKGPLPbMunZNA4MHtny
o66EoRvkmphTM42HzK/U/5otYdhNusipfpnGwXeeGb2WpDMuu7jUvOuZxp94
Fas8j9IZqQPO5ma/pjFlV+MmEQ86o9TC+c/o3DSmHW4N/hRLZzQ2O0UGs8/g
+T42/uxCOuOnnpM4H3UG/3MeX7pXQ2ew1To+y5KYwfa2EsG/v9IZWzUc9ZUU
Z3CmXuzrWyN0hgbdYbD6wAwuvto/d3+KzjCWcwgy0pvBn/TGrIgVOsMzx540
ZLqOX5MRc2ctZcQFpWXGnZvBo7tzW5Q4ShlPDRp37veawbPLBazi63ajDOvz
75dmcMDfM2uH1/ETq3sPxV2fwd+73/I+X+cTaHf/vC95Bnvx7bMLnaEzFJ7c
s/ieM4Ot6t4olP2iM45FtA/HFs3gJkrBdcdeOsP9DK/PvtczuOfXf1fufaYz
YpRhdfD9DLZ+H84ZUEFnPOa+cCP26wzWyXvCOpdPZ3z6Vrhx3+AM9nCtO7Qn
gc4Ye9GXMzgxgx2GjAPVAugMnniqUuzSOt/mfG2qJZ0h53ikYi/XLP6uGaXY
hegMVyF6a8y2WZxmc6z/7GoJ48bYiM1exVn8c8pcGneXMB7Wiv0e0JjFpvTl
iMNlJYyfXtfY9hrP4t5T99QXHUsYzp/N1QYiZzHrimDfy2fFjOi82JqbibN4
89lBWfuIYkbBxdrj6rRZXGsZ71xgVMz4ISvvePPlLF7cPd7n1l7EcIxcS1b7
PYuNDTusKsWeMiKtVLd/m5/FB/+YGuQ/eMLIV3UpusE+h6NJbWkpe54whgdb
6vu3zOG8P0Mb5vBjhj3On79uOIdpYRMnDfUeMuzmj53uK5vDXK8cT4VJ5jOs
XdPFo8LmsXEt0+u4uXTGUid342TsPO6ZPdDX/zONkaoXFGKZPo/ZquYmBHtT
Gc07zfv3lM5jAVoh1asumaH1Y8O9nqF5/K2Md6bmwW2GrP0tKeUjCzjVrUFW
zeMao66V6Wum8QLmSu8d1gkPZ9gd9rrGabuAE64EXM7IDGNkSp4c6QlawB2j
gS6cLy8yBAb4CqIeLWA4XGuz19CVMW0VvatXYBF7HV17ErzVfX1OnOvWFVvE
TAqrnjw63liBcIqhy6yvU9Mnhb39sONmnfEoWMSpCrJ8lPvBuLOLtUjZZxGb
5xgsr0E49j/qa5MVsohpzbvQ2JMITHk1KMh1cxFPW8t9GxaKxMfSarx6cxdx
9XiN39+maFxldkU5+usijon0Ve1gisNn6icG/w0s4n3NDzeUEfF4Xt060Wpi
Ec+K1qZraiTgPRuJaWXOJZz1bK5+0ekWzmtbfN67bwnnyf3NFLubiEHL1fGI
9hK+3H3F3mJHEu4t7dxYariEu9OP6CYXJOGNieUB0a5LOG2LufTG/Dv4uqH/
fpXMJfy0ItM4+HIKvv1Jzv1x4RKOLL42j2dScKZuf/aOF0v45B4tSppLKi4m
jrAJtyxhYY+xbtEjafhV+bL6rf4lnFS20HOCnobfqpS48IwvYXHh0b/yIum4
Q1b0yzLnMv7s9byfqTcdD+Y1MvtvWMYM3cotbBoZ+PfWcNU/kst4kbSg8ikx
AzNt/J02QCzj4fp86fdEJt7JUmVf57uM++63W+m6Z2Hlyz4pOGwZ5z6JGNYt
zsIH56UbyuOW8U5x4fpjk1nYYCJe6VHhMpacsI+OdM3Gp1207KReLOMo6r59
n3Oysf3QfFLW22V8p56t70BHNg7osl2M71/GjvU6LGUad3GoyUYF7vFlLGA3
hNuc7uIbTQ02VxeXsWLf4ji+fRcn6V+5vcS5gvPW7B6wvLqLs+tU3vltWFm/
V63EpPvv4oJDo3PjkiuYzjnC3sVEw/TXmXJOu1fwgljFjm4SDb/ea2j1jVjB
bTQ564ytNFxHZ0+w0F/BbAsz+VsVaLhJ4VVti/kK/pDSuuK+n4a7Cjxm9B1X
cCvOc4jWouGh7dt3vvNdwTs2PRn2P0HDE9n/nUZhK/jozfZowoyG50ViYl/E
rWDX1T+WA9Y0zHIHqndnruCeffPeTg40zEea+VdYuIJZk10721xpeOPNwh3b
X6xg2nDCfUVPGpbgsDbPfLuC9y10jgb50LBcGOXmhpYVbNym+rzCj4ZVl+sq
4/pXsGKAl9jCBRpGARf/co6v4PZ9NLm9/jR85J/S9rDFFUwqiPgTvL5udH7I
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
Iki2JzRybI4Ek9OtX9WDhdGlom25nEvr9ekktfbyySa03fRcD2Ymg0Q96ZnU
zo3IX5Zt4QwbGQYdQ8/f99iAGpbzNgRykuF1zkW/jRVCyCt35EQxPxnubC+4
xedARVV/XWokRMnwqLmA32OehChvefoOipPBlFXy4k0XEnJIebRoLkGGju25
w9eqBBEfGle5JU0GZu3UiM4ifmRDjjN4IksGvtHMlN3P+RB9SPH8B3kyDBsH
naPV8iKLm175zCrr/LXvdeqmudFja/IbcXUyZJbbua0JcyMmZXr//v1kuCoY
rWWmxYXyO6aEfTAZLJysui4XcaDpHQE3B/XJoHh5iPqmmRUdWdhUsHqCDP8F
5Usxy7KijE/lb0WNyJD8jJ2FcY0FafourhiZk2GPtAQz10lmdEcnQ9TzDBlm
V15dIyqY0KjIwb03rclw3lE/SleeCcVXX/Z6Y0+GnfKF0oH7VonBxC2x/U5k
+HUs2qlMbYVQd2IULrmSoX54b5vngWWih5/5u4o3GfJfRH/GNouE3JkIk7zL
ZGB784N6kHmOsPAuo7CFkWG1q23mvtwsER01+uVcBBn2CZqsvDwzQwyXHju6
/SYZXhRI2je1ThFCDSGc4XFkOHyi4YqB6BSh+a347eAtMvTdM6H4O/0jaHwb
cE4qGWzbqSNvhSaJRkndZeZMMlSZjHZc8vtLrOwLeml7lwzHk2s5/pT+IU47
9Kpsy1+3D54xa3QdJzZU3d9JKyXDCZ42n37Dn4RW23/Da2Vk4Hr3Q/yb3Sjh
84s71+bVev4ubjO/dukH0bTRQ3xrDRmuy9gXR74fJlblaV0hb8ngnUrZfGJx
iFA43JLSV08Gqe/j4QkqQ8QNT3VKduN6vYmMeQZWDBIvrzl/WWle99cosjeT
e5AYzUiPsfpKhiy+xsn91gOE9vtVDvEeMpgkvu2fEvlGMG2rX8r4uV6/yl6b
+h52E0p7F8qXfpNhw6SIVG5OF2F9fJf/mb9kaOHTsxDK6yQqguL/is6RocF9
lSmj9j/iV3zNk+DF9Xpriefg6m8nhPOnXLtWyFBp3CHVxNpO+LeYDaexUSDP
ZOw8OLQReaPXcxY4KWBZN1Voeq+VaF2tsLHgpUCCgty/3KEWYvcuiS5hCgWc
px8c7r7STIyFjzambKXAoSaqFytbIyGaLhozJ0kBhoLfds7BT8SR4mN6ZtIU
MGiJUfvQ8JHI7yl+s1GBAs9L542WX30g2v4NhvrvpsD5pERScc17gpV7A2pX
ocBJdpVTD5rribNqQeV3NNb1WvvrufnqiHj9RxdmCArsO8un3az2jqiy7VU2
OUSBlA06D5Kc3hJicYeeCB2hwBE579GRgVqifYQ7J9GEAs2OsY93y1UTdcbX
M1+aU+CZcPU3NQUGUVbLldJ/Zp0/31TMllRFJGdzxuyyo0BhudKE0XQFEckX
FWnoQAFNh79l7tOvCP9gjrAAZwpcHmo4G77ykjAxZfd/40GBKI2+LnfZckLr
bYTXT28KqL9/z1mo/4JQVWZzE7xAARvrjJxnF8oIIQHWs2cuUuCn0jJl57dn
RNs7pqNTURTQ65bRDOWkE29VQrVEblKgTPx3l7RtCfHs3hrCcRR4L6/gU1Jd
TCRdXlW5mbTOnygbor2tiIgYu6xYkkIBaa3ebn3mp4SfxcrO/9IpIPLyVP/N
scfEKbVl8e33KOAWt5n1ZO9DQjP3orBeHgXi6rl/SQ0VEsrkJYrnAwqcrrT7
0jlVQFDGFzgrnlCAZcvZj/flHxAteXOTRq8osPNLtmnVUi5RSwn4HVhJAaUD
qjWeh3IJeujsSHb1ejxbjrp+is0hblvOdP+qW/fPiR6Wtv8ecbXBr53UQIFt
Y9yCqak0wmffdJP6ZwqIKoSNVSzeJQyFpt5dbaVAo8mfDYNPswi46lNd0E6B
Dx/5E8tSM4ndfydfNXZSgGKZ9y42JoMgffpbJPqNAjH7B7f0JqQRTeETafTf
FCBE93v+x5JMVE+eT+r4s54vUXfWqyp3iGKb8bjVfxR4sTlh8LFbEpFw4Hf4
0QUKFIkXDflN3iZCC91CvJYpcOPaq5QEdJvw2jQWmLxGgc5v32Jkb98iTk79
PD/IToUUT6GQUf0EAtm6OHNxU2GLnLjbwXPxhOKXUTtFPiqIVYewDeyPIwQe
/TALplBhoOxEJuKMIRrthg9RtlJh5rld5O9N0cQA24P5O5JUuNTzzPmGcBQx
ne9cJCJNBbv4B5Lx2yMJkbGxzdsUqBDSufxb2iyCkI990pq3mwqaqdJqkyHh
BFLyvLFTlQpvJ619E4quEva+/+aUDlChpc9RZ0Q2jAjY8OxpKaLCtubXQ5M+
ocSNFxcc9mpSYWhOP3Y+8gpRtDTfgvSo4MgoSC6bukQshq89OW5GBfXDs25k
50CCX7rGvvk0FdrzSqp97QIIifdXxUysqdCXovoiy8mf0ObjuG7pQIX9bwbe
xCb4EeZP6/E3Zyro/I5yDSv1JVwNrs+ec6cCB0vBpZR+HyIhic/ezZcKI9/m
k+mG3kSueqPoH38q/Et738iW4kWUdcQ3+wRTIaPRgl/mvSfRvZmKg8OoIHT9
6/3jO88T0vdFRK/HU2Ep8Nh/ctHOxH7d7ia+RCrcKn7dqRviRBz7mRmVkLye
D0vUEnTFkfBWkJhJyVrHD+8VNrhnT0R8GXgkdo8KrOV9+SI154hk71y7u3lU
kPAYMND8ZUe8fi7dlP+ICnN/JCzlzGyJL2ajkXJFVCj5w413p58lBhcKiad0
KmSteg8ebrAhOJHCo+cvqSAn3HZ8SdKKMKpTiXxbv45/brx8OcCccHCeOXjk
IxVubJkWdHAzIwJ5Xkx9bKSCVcf3PWmupkTWCQ3b1q9UULp1I5T/ujFR/Hdp
k1knFa7+MJVxf3CKqL1d2djVQwW16yoexl+MiNF2ODj4nQqiNo7lShqGxGIg
y5TDDyqEPrUbPHfJgOAXe1v48xcV/AQ79XVjTxLKNrqbJiepsF0/99b378cI
bWbuRr8ZKjDxpwRU5ukT5rkNEfPzVLi+P8Bgp+9RwlU75sClZSpUPfrx8fYJ
PeL//u+B//+/538iSYT4
           "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PanelPlotLayout" -> <||>, 
        "PlotRange" -> {{-5, 5}, {-0.07431791759497397, 1.1147170388288536`}},
         "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
        "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
        "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           Opacity[1.], 
           AbsoluteThickness[2], 
           RGBColor[1, 0, 0]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.24, 0.6, 0.8], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.95, 0.627, 0.1425], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.455, 0.7, 0.21], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.578, 0.51, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.4, 0.64, 1.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1., 0.75, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.8, 0.4, 0.76], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.637, 0.65, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-5., 5.000000000000001}, {-0.2, 1.2}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.957466250156083*^9, 3.957466298121314*^9}, 
   3.957466387317474*^9, 3.957466483466516*^9, 3.957466626093748*^9, 
   3.957466656147077*^9, {3.957466688572484*^9, 3.957466711292532*^9}, 
   3.957466988029492*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"b451fa36-1f6d-491b-9a1a-a196e36f0d6b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nlm", "[", "\"\<BestFitParameters\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.957466639692251*^9, 3.9574666443122396`*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"f395d0c2-ebbc-454a-8737-a95996f0635b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["a", "1"], "\[Rule]", 
    RowBox[{"-", "28.41047381952049`"}]}], ",", 
   RowBox[{
    SubscriptBox["\[Sigma]", "1"], "\[Rule]", 
    RowBox[{"-", "0.38749341807087356`"}]}], ",", 
   RowBox[{
    SubscriptBox["a", "2"], "\[Rule]", "17.79733491679075`"}], ",", 
   RowBox[{
    SubscriptBox["\[Sigma]", "2"], "\[Rule]", 
    RowBox[{"-", "0.4557164724397528`"}]}], ",", 
   RowBox[{
    SubscriptBox["a", "3"], "\[Rule]", 
    RowBox[{"-", "22.168879859497842`"}]}], ",", 
   RowBox[{
    SubscriptBox["\[Sigma]", "3"], "\[Rule]", 
    RowBox[{"-", "0.5445598279515156`"}]}], ",", 
   RowBox[{
    SubscriptBox["a", "4"], "\[Rule]", "16.78222513828962`"}], ",", 
   RowBox[{
    SubscriptBox["\[Sigma]", "4"], "\[Rule]", "0.4555351620398925`"}], ",", 
   RowBox[{
    SubscriptBox["a", "5"], "\[Rule]", "17.736468813241814`"}], ",", 
   RowBox[{
    SubscriptBox["\[Sigma]", "5"], "\[Rule]", "0.45543713796684476`"}], ",", 
   RowBox[{
    SubscriptBox["a", "6"], "\[Rule]", "17.350616125858764`"}], ",", 
   RowBox[{
    SubscriptBox["\[Sigma]", "6"], "\[Rule]", "0.3437421643605436`"}], ",", 
   RowBox[{
    SubscriptBox["a", "7"], "\[Rule]", "19.733387439198797`"}], ",", 
   RowBox[{
    SubscriptBox["\[Sigma]", "7"], "\[Rule]", "0.34373519027075644`"}], ",", 
   RowBox[{
    SubscriptBox["a", "8"], "\[Rule]", 
    RowBox[{"-", "21.936283810641125`"}]}], ",", 
   RowBox[{
    SubscriptBox["\[Sigma]", "8"], "\[Rule]", "0.5441618020224724`"}], ",", 
   RowBox[{
    SubscriptBox["a", "9"], "\[Rule]", "17.53749427436402`"}], ",", 
   RowBox[{
    SubscriptBox["\[Sigma]", "9"], "\[Rule]", 
    RowBox[{"-", "0.45569662509973846`"}]}], ",", 
   RowBox[{
    SubscriptBox["a", "10"], "\[Rule]", "15.519122717124938`"}], ",", 
   RowBox[{
    SubscriptBox["\[Sigma]", "10"], "\[Rule]", "0.45555931577820563`"}], ",", 
   
   RowBox[{
    SubscriptBox["a", "11"], "\[Rule]", "17.064631322668568`"}], ",", 
   RowBox[{
    SubscriptBox["\[Sigma]", "11"], "\[Rule]", 
    RowBox[{"-", "0.4557161262734507`"}]}], ",", 
   RowBox[{
    SubscriptBox["a", "12"], "\[Rule]", 
    RowBox[{"-", "22.197528659451528`"}]}], ",", 
   RowBox[{
    SubscriptBox["\[Sigma]", "12"], "\[Rule]", 
    RowBox[{"-", "0.5445688868289924`"}]}], ",", 
   RowBox[{
    SubscriptBox["a", "13"], "\[Rule]", "20.21817660247714`"}], ",", 
   RowBox[{
    SubscriptBox["\[Sigma]", "13"], "\[Rule]", "0.3437423832494641`"}], ",", 
   RowBox[{
    SubscriptBox["a", "14"], "\[Rule]", 
    RowBox[{"-", "28.023885163113118`"}]}], ",", 
   RowBox[{
    SubscriptBox["\[Sigma]", "14"], "\[Rule]", "0.38727728870451095`"}], ",", 
   
   RowBox[{
    SubscriptBox["a", "15"], "\[Rule]", 
    RowBox[{"-", "29.51468556334217`"}]}], ",", 
   RowBox[{
    SubscriptBox["\[Sigma]", "15"], "\[Rule]", "0.38730293234301616`"}], ",", 
   
   RowBox[{
    SubscriptBox["a", "16"], "\[Rule]", 
    RowBox[{"-", "28.811276144910252`"}]}], ",", 
   RowBox[{
    SubscriptBox["\[Sigma]", "16"], "\[Rule]", 
    RowBox[{"-", "0.3875258194302419`"}]}], ",", 
   RowBox[{
    SubscriptBox["a", "17"], "\[Rule]", "16.66552424703736`"}], ",", 
   RowBox[{
    SubscriptBox["\[Sigma]", "17"], "\[Rule]", "0.45537427593745694`"}], ",", 
   
   RowBox[{
    SubscriptBox["a", "18"], "\[Rule]", "16.764933520662684`"}], ",", 
   RowBox[{
    SubscriptBox["\[Sigma]", "18"], "\[Rule]", "0.6229578376968665`"}], ",", 
   RowBox[{
    SubscriptBox["a", "19"], "\[Rule]", 
    RowBox[{"-", "28.65299425903376`"}]}], ",", 
   RowBox[{
    SubscriptBox["\[Sigma]", "19"], "\[Rule]", 
    RowBox[{"-", "0.3875013764858923`"}]}], ",", 
   RowBox[{
    SubscriptBox["a", "20"], "\[Rule]", "17.61500068052682`"}], ",", 
   RowBox[{
    SubscriptBox["\[Sigma]", "20"], "\[Rule]", "0.4554553482331964`"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.957466644538114*^9, 3.95746665620497*^9}, {
   3.957466688655553*^9, 3.957466711356995*^9}, 3.957466988103374*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"a37b2757-f7e2-4c59-84fc-81b810133bcd"]
}, Open  ]]
},
WindowSize->{1037, 1183},
WindowMargins->{{Automatic, 765}, {Automatic, 0}},
FrontEndVersion->"14.2 for Mac OS X ARM (64-bit) (December 26, 2024)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"1c3c2a61-33da-46cd-858a-eb2fa41c7196"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[576, 22, 664, 17, 49, "Input",ExpressionUUID->"5c74a527-81ae-429b-9dc4-336d6f80ea34"],
Cell[1243, 41, 9671, 222, 249, "Output",ExpressionUUID->"825bbe03-575b-45b0-b0a6-aae074164258"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10951, 268, 1935, 48, 278, "Input",ExpressionUUID->"37b05baf-2992-46bb-8751-607ce48c9c72"],
Cell[12889, 318, 5228, 167, 88, "Output",ExpressionUUID->"b5b9cf98-1580-4401-aa1c-7eaeaee21678"],
Cell[18120, 487, 1951, 48, 53, "Output",ExpressionUUID->"2bdf5048-5112-4f06-931d-65269ffa982a"],
Cell[20074, 537, 14261, 276, 49, "Output",ExpressionUUID->"183ca5f9-2b67-4237-9e51-ac1f6e89b893"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34372, 818, 749, 19, 111, "Input",ExpressionUUID->"a4886798-43e2-46d4-ac16-2a114722eef9"],
Cell[35124, 839, 118768, 2039, 250, "Output",ExpressionUUID->"b451fa36-1f6d-491b-9a1a-a196e36f0d6b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[153929, 2883, 227, 3, 29, "Input",ExpressionUUID->"f395d0c2-ebbc-454a-8737-a95996f0635b"],
Cell[154159, 2888, 4049, 106, 115, "Output",ExpressionUUID->"a37b2757-f7e2-4c59-84fc-81b810133bcd"]
}, Open  ]]
}
]
*)

