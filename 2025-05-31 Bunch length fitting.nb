(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    793260,      15059]
NotebookOptionsPosition[    780394,      14846]
NotebookOutlinePosition[    780793,      14862]
CellTagsIndexPosition[    780750,      14859]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"TransformedDistribution", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"\[Sigma]Screen", "*", "\[Sigma]Screen"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Sigma]Screen", "\[Distributed]", 
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"\[Mu]\[Sigma]Screen", ",", "\[Sigma]\[Sigma]Screen"}], 
       "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\[Sigma]Off", "\[Distributed]", 
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"\[Mu]\[Sigma]Off", ",", "\[Sigma]\[Sigma]Off"}], "]"}]}]}], 
    "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.957699393783395*^9, 3.957699499829052*^9}, {
  3.957701443962543*^9, 3.95770146100517*^9}},
 CellLabel->
  "In[2365]:=",ExpressionUUID->"5c28327a-b7e9-44d4-83e5-88843c3046cf"],

Cell[BoxData[
 RowBox[{"TransformedDistribution", "[", 
  RowBox[{
   SuperscriptBox["\[FormalX]1", "2"], ",", 
   RowBox[{
    RowBox[{"{", "\[FormalX]1", "}"}], "\[Distributed]", 
    RowBox[{"TransformedDistribution", "[", 
     RowBox[{
      RowBox[{"{", "\[FormalX]", "}"}], ",", 
      RowBox[{"\[FormalX]", "\[Distributed]", 
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"\[Mu]\[Sigma]Screen", ",", "\[Sigma]\[Sigma]Screen"}], 
        "]"}]}]}], "]"}]}]}], "]"}]], "Output",
 CellChangeTimes->{{3.957699494301054*^9, 3.957699500048833*^9}, {
   3.9577014445496283`*^9, 3.957701461549238*^9}, 3.9577039226504517`*^9, {
   3.9577041986011868`*^9, 3.957704257394475*^9}, {3.95770445839511*^9, 
   3.957704488486944*^9}, 3.957705168978681*^9},
 CellLabel->
  "Out[2365]=",ExpressionUUID->"f3f34146-1980-4a41-b103-2380cb27ad08"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"data", " ", "=", 
    RowBox[{"ImportString", "[", 
     RowBox[{"\"\< -1, 0.001463870524947474\n 0, 0.00047288595738029726\n 1, \
0.0015314520018408838\n -1, 0.0015990216946601093\n 0, 0.000488025717938945\n \
1, 0.001702715083358308\n -1, 0.0015840824570475\n 0, 0.0004415050596621244\n \
1, 0.0016658283063040557\n -1, 0.001981712299712555\n 0, \
0.0005222530245381091\n 1, 0.0017697200301395532\n -1, 0.0014666899862966108\n\
 0, 0.00045537560463279814\n 1, 0.0018473205035243142\n -1, \
0.0013760208707809464\n 0, 0.0004859513693057428\n 1, 0.00173260856250911\n \
-1, 0.002051708016449268\n 0, 0.0004954909340642246\n 1, \
0.0010361132520943922\n -1, 0.0019271012186153709\n 0, 0.0004533206230957517\n\
 1, 0.001938710604969935\n -1, 0.0017277901577373476\n 0, \
0.00048823842599653476\n 1, 0.0015677181790459992\n -1, 0.0017144755734529442\
\n 0, 0.0004857739148630236\n 1, 0.001810528644912713\n\>\"", 
      ",", "\"\<CSV\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"data", "=", 
     RowBox[{"data", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "6"}], "]"}], "]"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Convert", " ", "to", " ", "microns"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}], "*=", 
   SuperscriptBox["10", "6"]}], ";"}]}], "Input",
 CellChangeTimes->{{3.957704455750102*^9, 3.957704487839951*^9}, 
   3.957705168310978*^9},
 CellLabel->
  "In[1500]:=",ExpressionUUID->"4a3a60fb-72da-4c8f-ae61-1f421145749c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"expr\[Sigma]Screen", " ", "=", " ", 
   RowBox[{
    SqrtBox[
     RowBox[{
      SuperscriptBox["\[Sigma]Off", "2"], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"\[Kappa]", " ", "V", " ", "\[Sigma]z"}], ")"}], "2"]}]], "/.", 
    RowBox[{"\[Kappa]", "->", 
     RowBox[{"(", 
      RowBox[{"1", "/", "0.073"}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"nlm", " ", "=", " ", 
  RowBox[{"NonlinearModelFit", "[", "\[IndentingNewLine]", 
   RowBox[{
   "data", ",", "\[IndentingNewLine]", "expr\[Sigma]Screen", ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"\[Sigma]Off", ",", "\[Sigma]z"}], "}"}], ",", 
    "\[IndentingNewLine]", "V"}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.957697430307851*^9, 3.957697468658025*^9}, {
   3.95769760472867*^9, 3.9576976479425173`*^9}, {3.9576976795195627`*^9, 
   3.957697702824416*^9}, {3.957703715061554*^9, 3.957703733274262*^9}, {
   3.95770378488793*^9, 3.957703801047431*^9}, {3.9577038714266357`*^9, 
   3.9577038904199057`*^9}, 3.957703921496933*^9, {3.957704197353528*^9, 
   3.957704256424344*^9}, {3.957704295284889*^9, 3.95770430172202*^9}},
 CellLabel->
  "In[1502]:=",ExpressionUUID->"f4076314-d383-4b9c-8f9e-8f726f3672ef"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["FittedModel",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               TagBox[
                TagBox[
                 SqrtBox[
                  RowBox[{"229328.03040465055`", "\[VeryThinSpace]", "+", 
                    RowBox[{"2.5754910121913673`*^6", " ", 
                    SuperscriptBox["V", "2"]}]}]], Short], "SummaryItem"]}}, 
             AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            GridBox[{{
               TagBox[
                TagBox[
                 SqrtBox[
                  RowBox[{
                    RowBox[{"229328.03040465055`", "\[VeryThinSpace]"}], "+", 
                    
                    RowBox[{"2.5754910121913673`*^6", " ", 
                    SuperscriptBox["V", "2"]}]}]], Short], "SummaryItem"]}}, 
             AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  FittedModel[<|
   "Type" -> "Nonlinear", 
    "Model" -> <|
     "FittedParameterRules" -> {$CellContext`\[Sigma]Off -> 
        478.88206314775516`, $CellContext`\[Sigma]z -> 117.15285572263186`}, 
      "IndependentVariables" -> {$CellContext`V}, 
      "FitExpression" -> ($CellContext`\[Sigma]Off^2 + 
        187.65246762994937` $CellContext`V^2 $CellContext`\[Sigma]z^2)^
       Rational[1, 2], "ParameterConstraints" -> True|>, 
    "Weights" -> <|"ExampleWeights" -> 1|>, 
    "InputData" -> {{-1, 1463.870524947474}, {0, 472.88595738029727`}, {
      1, 1531.4520018408837`}, {-1, 1599.0216946601092`}, {
      0, 488.025717938945}, {1, 1702.715083358308}, {-1, 1584.0824570475}, {
      0, 441.5050596621244}, {
      1, 1665.8283063040558`}, {-1, 1981.7122997125553`}, {
      0, 522.2530245381091}, {
      1, 1769.7200301395533`}, {-1, 1466.6899862966109`}, {
      0, 455.3756046327982}, {
      1, 1847.3205035243143`}, {-1, 1376.0208707809463`}, {
      0, 485.95136930574284`}, {
      1, 1732.60856250911}, {-1, 2051.7080164492677`}, {
      0, 495.49093406422463`}, {
      1, 1036.1132520943922`}, {-1, 1927.101218615371}, {
      0, 453.3206230957517}, {
      1, 1938.710604969935}, {-1, 1727.7901577373475`}, {
      0, 488.2384259965348}, {
      1, 1567.7181790459992`}, {-1, 1714.4755734529442`}, {
      0, 485.7739148630236}, {1, 1810.528644912713}}, "Localizer" -> 
    Function[Null, 
      Internal`LocalizedBlock[{$CellContext`V, $CellContext`\[Sigma]Off, \
$CellContext`\[Sigma]z}, #], {HoldAll}], "Options" -> {}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.957697699826095*^9, 3.9576977224264803`*^9}, {
   3.957703719322228*^9, 3.9577037337104607`*^9}, {3.957703788664515*^9, 
   3.957703801411645*^9}, 3.957703891804179*^9, 3.9577039226911097`*^9, {
   3.957704198657222*^9, 3.957704257449295*^9}, {3.957704458450616*^9, 
   3.957704488530117*^9}, 3.957705169056018*^9, 3.958132531806984*^9},
 CellLabel->
  "Out[1503]=",ExpressionUUID->"d7796f81-1ced-41b0-b34c-7523a620a298"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"aroundData", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"Around", "[", 
     RowBox[{"#", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "&"}], "/@", 
   RowBox[{"GroupBy", "[", 
    RowBox[{"data", ",", "First"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.957704303721307*^9, 3.957704378076586*^9}},
 CellLabel->
  "In[1504]:=",ExpressionUUID->"b2cbb7d1-a9d0-4732-b69e-0f590f6f799e"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "1"}], "\[Rule]", 
    InterpretationBox[
     TemplateBox[{"1689.", "234."},
      "Around"],
     Around[1689.2472799700124`, 234.1052944296365]]}], ",", 
   RowBox[{"0", "\[Rule]", 
    InterpretationBox[
     TemplateBox[{"479.", "24."},
      "Around"],
     Around[478.88206314775516`, 23.721649808536505`]]}], ",", 
   RowBox[{"1", "\[Rule]", 
    InterpretationBox[
     TemplateBox[{"1660.", "251."},
      "Around"],
     Around[1660.2715168699265`, 251.4117783137951]]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.9577043204773493`*^9, 3.957704378405196*^9}, {
   3.957704458469473*^9, 3.957704488545187*^9}, 3.957705169064611*^9, 
   3.958132533273747*^9},
 CellLabel->
  "Out[1504]=",ExpressionUUID->"5eebf6a8-b743-4613-b973-269bea0b257c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"aroundData", ",", 
     RowBox[{"ImageSize", "->", "800"}], ",", 
     RowBox[{"Frame", "->", "True"}], ",", 
     RowBox[{"LabelStyle", "->", "20"}], ",", 
     RowBox[{"FrameLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<TCAV3 scaled amplitude\>\"", ",", 
        " ", "\"\<PR15944 \!\(\*SubscriptBox[\(SIIS90\), \(y\)]\) \
[\[Mu]m]\>\""}], "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"nlm", "[", "\"\<BestFit\>\"", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"V", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
     RowBox[{"PlotStyle", "->", "Red"}]}], "]"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.957703804166243*^9, 3.957703835195018*^9}, {
  3.957703901889892*^9, 3.9577039091955957`*^9}, {3.957704032379715*^9, 
  3.957704086195477*^9}, {3.957704385682705*^9, 3.9577044035361958`*^9}},
 CellLabel->
  "In[1505]:=",ExpressionUUID->"0d6f2a76-6ffb-4b46-996f-e20b589083a5"],

Cell[BoxData[
 GraphicsBox[{{{{
      {RGBColor[0.24, 0.6, 0.8], 
       StyleBox[{{}, {
          LineBox[{{-1., 1455.141985540376}, {-1., 1689.2472799700124`}}], 
          LineBox[{{-1., 1689.2472799700124`}, {-1., 1923.3525743996488`}}]}},
        
        Antialiasing->False]}, 
      {RGBColor[0.24, 0.6, 0.8], 
       StyleBox[{{}, {
          LineBox[{{0., 455.1604133392187}, {0., 478.88206314775516`}}], 
          LineBox[{{0., 478.88206314775516`}, {0., 502.60371295629164`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.24, 0.6, 0.8], 
       StyleBox[{{}, {
          LineBox[{{1., 1408.8597385561313`}, {1., 1660.2715168699265`}}], 
          LineBox[{{1., 1660.2715168699265`}, {1., 1911.6832951837216`}}]}},
        Antialiasing->False]}}, {
      {RGBColor[0.24, 0.6, 0.8], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{-1., 1923.3525743996488`}, 
             Offset[{3, 0}, {-1., 1923.3525743996488`}]}, {{-1., 
             1923.3525743996488`}, 
             Offset[{-3, 0}, {-1., 1923.3525743996488`}]}, {{-1., 
             1455.141985540376}, 
             Offset[{3, 0}, {-1., 1455.141985540376}]}, {{-1., 
             1455.141985540376}, 
             Offset[{-3, 0}, {-1., 1455.141985540376}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.24, 0.6, 0.8], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0., 502.60371295629164`}, 
             Offset[{3, 0}, {0., 502.60371295629164`}]}, {{0., 
             502.60371295629164`}, 
             Offset[{-3, 0}, {0., 502.60371295629164`}]}, {{0., 
             455.1604133392187}, Offset[{3, 0}, {0., 455.1604133392187}]}, {{
             0., 455.1604133392187}, 
             Offset[{-3, 0}, {0., 455.1604133392187}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.24, 0.6, 0.8], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{1., 1911.6832951837216`}, 
             Offset[{3, 0}, {1., 1911.6832951837216`}]}, {{1., 
             1911.6832951837216`}, 
             Offset[{-3, 0}, {1., 1911.6832951837216`}]}, {{1., 
             1408.8597385561313`}, 
             Offset[{3, 0}, {1., 1408.8597385561313`}]}, {{1., 
             1408.8597385561313`}, 
             Offset[{-3, 0}, {1., 1408.8597385561313`}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}}}, 
    InterpretationBox[{
      TagBox[
       TagBox[
        {RGBColor[0.24, 0.6, 0.8], PointSize[0.012833333333333334`], 
         AbsoluteThickness[2], 
         PointBox[{{-1., 1689.2472799700124`}, {0., 478.88206314775516`}, {1.,
           1660.2715168699265`}}]},
        Annotation[#, "Charting`Private`Tag#1"]& ],
       {"WolframDynamicHighlight", <|
        "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
      StyleBox[
       DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
         Slot["HighlightElements"], 
         Slot["LayoutOptions"], 
         Slot["Meta"], 
         Charting`HighlightActionFunction["DynamicHighlight", {{
            Annotation[{
              Directive[
               PointSize[0.012833333333333334`], 
               RGBColor[0.24, 0.6, 0.8], 
               AbsoluteThickness[2]], 
              
              Point[{{-1., 1689.2472799700124`}, {0., 478.88206314775516`}, {
               1., 1660.2715168699265`}}]}, "Charting`Private`Tag#1"]}}, <|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, 
             "PlotRange" -> {{-1., 1.}, {0, 1923.3525743996488`}}, 
             "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
             "ImageSize" -> {800, 800/GoldenRatio}, "Axes" -> {True, True}, 
             "LabelStyle" -> {FontSize -> 20}, "AspectRatio" -> 
             GoldenRatio^(-1), "DefaultStyle" -> {
               Directive[
                PointSize[0.012833333333333334`], 
                RGBColor[0.24, 0.6, 0.8], 
                AbsoluteThickness[2]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{-1., 1.}, {0, 1923.3525743996488`}}, 
            "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
            "ImageSize" -> {800, 800/GoldenRatio}, "Axes" -> {True, True}, 
            "LabelStyle" -> {FontSize -> 20}, "AspectRatio" -> 
            GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               PointSize[0.012833333333333334`], 
               RGBColor[0.24, 0.6, 0.8], 
               AbsoluteThickness[2]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListPlot, "GroupHighlight" -> False|>|>],
        ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
         4.503599627370496*^15, -4.503599627370496*^15}}],
       Selectable->False]},
     Annotation[{{
        Annotation[{
          Directive[
           PointSize[0.012833333333333334`], 
           RGBColor[0.24, 0.6, 0.8], 
           AbsoluteThickness[2]], 
          
          Point[{{-1., 1689.2472799700124`}, {0., 478.88206314775516`}, {1., 
           1660.2715168699265`}}]}, "Charting`Private`Tag#1"]}}, <|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
       "LayoutOptions" -> <|
        "PanelPlotLayout" -> <||>, 
         "PlotRange" -> {{-1., 1.}, {0, 1923.3525743996488`}}, 
         "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
         "ImageSize" -> {800, 800/GoldenRatio}, "Axes" -> {True, True}, 
         "LabelStyle" -> {FontSize -> 20}, "AspectRatio" -> GoldenRatio^(-1), 
         "DefaultStyle" -> {
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.24, 0.6, 0.8], 
            AbsoluteThickness[2]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         ListPlot, "GroupHighlight" -> False|>|>, 
      "DynamicHighlight"]], {{}, {}}}, 
   InterpretationBox[{
     TagBox[{{{}, {}, 
        TagBox[
         {RGBColor[1, 0, 0], AbsoluteThickness[2], Opacity[1.], 
          LineBox[CompressedData["
1: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
/f+++h9Yvl20
           "]]},
         Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     StyleBox[
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
            Annotation[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[2], 
               RGBColor[1, 0, 0]], 
              Line[CompressedData["
1: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
/f+++h9Yvl20
               "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{-1, 1}, {478.88212686336885`, 
              1674.7593356515013`}}, 
            "Frame" -> {{False, False}, {False, False}}, 
            "AxesOrigin" -> {0, 478.88212686336993`}, 
            "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
            "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
            "DefaultStyle" -> {
              Directive[
               Opacity[1.], 
               AbsoluteThickness[2], 
               RGBColor[1, 0, 0]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            Plot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{-1, 1}, {478.88212686336885`, 
             1674.7593356515013`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 478.88212686336993`}, 
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
           "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              AbsoluteThickness[2], 
              RGBColor[1, 0, 0]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}],
      Selectable->False]},
    Annotation[{{{{}, {}, 
        Annotation[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[2], 
           RGBColor[1, 0, 0]], 
          Line[CompressedData["
1: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
/f+++h9Yvl20
           "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PanelPlotLayout" -> <||>, 
        "PlotRange" -> {{-1, 1}, {478.88212686336885`, 1674.7593356515013`}}, 
        "Frame" -> {{False, False}, {False, False}}, 
        "AxesOrigin" -> {0, 478.88212686336993`}, 
        "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
        "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           Opacity[1.], 
           AbsoluteThickness[2], 
           RGBColor[1, 0, 0]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox[
      "\"PR15944 \\!\\(\\*SubscriptBox[\\(SIIS90\\), \\(y\\)]\\) [\[Mu]m]\"", 
       HoldForm], TraditionalForm], None}, {
     FormBox[
      TagBox["\"TCAV3 scaled amplitude\"", HoldForm], TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->800,
  LabelStyle->20,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.24, 0.6, 0.8], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.95, 0.627, 0.1425], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.455, 0.7, 0.21], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.578, 0.51, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.4, 0.64, 1.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1., 0.75, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.8, 0.4, 0.76], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.637, 0.65, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-1., 1.}, {0, 1923.3525743996488`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.957703806633312*^9, 3.9577038356473083`*^9}, {
   3.957703893038115*^9, 3.95770392280757*^9}, 3.9577040896225147`*^9, {
   3.95770419877216*^9, 3.95770425756812*^9}, {3.95770438710774*^9, 
   3.9577044040266438`*^9}, {3.957704458587816*^9, 3.95770448866547*^9}, 
   3.957705169194419*^9, 3.9581325340982733`*^9},
 CellLabel->
  "Out[1505]=",ExpressionUUID->"b2dd72e9-0d07-4fc1-85ed-8173c2b8dc1c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nlm", "[", "\"\<ParameterEstimates\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.95770384899128*^9, 3.95770385596516*^9}},
 CellLabel->
  "In[1506]:=",ExpressionUUID->"8fc52bc0-c136-4730-a8e0-82972abd83ca"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "Parameter" -> $CellContext`\[Sigma]Off, "BestFitValue" -> 
        478.88206314775516`, "StandardError" -> 61.857583108786926`, 
        "TStatistic" -> 7.741687260971074, "PValue" -> 
        1.9643907286266346`*^-8, 
        "ConfidenceInterval" -> {352.17254813352304`, 605.5915781619873}|>, <|
       "Parameter" -> $CellContext`\[Sigma]z, "BestFitValue" -> 
        117.15285572263186`, "StandardError" -> 3.594272020990732, 
        "TStatistic" -> 32.594320919077134`, "PValue" -> 
        8.200119436463348*^-24, 
        "ConfidenceInterval" -> {109.79032324527961`, 124.5153881999841}|>}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Parameter"} -> 
        1, {All, "BestFitValue"} -> 1, {All, "StandardError"} -> 
        1, {All, "TStatistic"} -> 1, {All, "PValue"} -> 
        1, {All, "ConfidenceInterval"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Parameter" -> TypeSystem`PackageScope`UnknownShape[False], 
            "BestFitValue" -> TypeSystem`PackageScope`AtomShape[60], 
            "StandardError" -> TypeSystem`PackageScope`AtomShape[60], 
            "TStatistic" -> TypeSystem`PackageScope`AtomShape[60], "PValue" -> 
            TypeSystem`PackageScope`AtomShape[60], "ConfidenceInterval" -> 
            TypeSystem`PackageScope`UnknownShape[False]|>], 
          DirectedInfinity[1], 6, {All}]], 2, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Parameter", "BestFitValue", "StandardError", "TStatistic", "PValue", 
         "ConfidenceInterval"}, {TypeSystem`AnyType, 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Vector[
          TypeSystem`Atom[Real], 2]}], 2], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Parameter"} -> 
        1, {All, "BestFitValue"} -> 1, {All, "StandardError"} -> 
        1, {All, "TStatistic"} -> 1, {All, "PValue"} -> 
        1, {All, "ConfidenceInterval"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Parameter" -> TypeSystem`PackageScope`UnknownShape[False], 
            "BestFitValue" -> TypeSystem`PackageScope`AtomShape[60], 
            "StandardError" -> TypeSystem`PackageScope`AtomShape[60], 
            "TStatistic" -> TypeSystem`PackageScope`AtomShape[60], "PValue" -> 
            TypeSystem`PackageScope`AtomShape[60], "ConfidenceInterval" -> 
            TypeSystem`PackageScope`UnknownShape[False]|>], 
          DirectedInfinity[1], 6, {All}]], 2, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Parameter", "BestFitValue", "StandardError", "TStatistic", "PValue", 
         "ConfidenceInterval"}, {TypeSystem`AnyType, 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Vector[
          TypeSystem`Atom[Real], 2]}], 2], "Path" -> {}, "DisplayedRowCount" -> 
     2, "DisplayedColumnCount" -> 6, "DataRowCount" -> 2, "DataColumnCount" -> 
     6, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Parameter", 
                  Style[
                  "Parameter", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Parameter"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Parameter"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["BestFitValue", 
                  Style[
                  "BestFitValue", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "BestFitValue"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "BestFitValue"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["StandardError", 
                  Style[
                  "StandardError", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "StandardError"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "StandardError"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["TStatistic", 
                  Style[
                  "TStatistic", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "TStatistic"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "TStatistic"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PValue", 
                  Style[
                  "PValue", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "PValue"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "PValue"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ConfidenceInterval", 
                  Style[
                  "ConfidenceInterval", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "ConfidenceInterval"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "ConfidenceInterval"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\[Sigma]Off", FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Parameter"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["478.882"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["BestFitValue"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["61.8576"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardError"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.74169"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["TStatistic"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000000196439"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["PValue"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{352.17254813352304`, 605.5915781619873}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{352.17254813352304`, 605.5915781619873}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["ConfidenceInterval"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ConfidenceInterval"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\[Sigma]z", FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Parameter"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["117.153"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["BestFitValue"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.59427"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["StandardError"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["32.5943"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["TStatistic"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00000000000000000000000820012"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["PValue"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{109.79032324527961`, 124.5153881999841}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{109.79032324527961`, 124.5153881999841}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                    Key["ConfidenceInterval"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["ConfidenceInterval"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Dynamic[
     Replace[
      Replace[
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
       TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
          Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
          Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
           Blank[]]] :> (
         Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
          TypeSystem`NestedGrid`PackagePrivate`path$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
          TypeSystem`NestedGrid`PackagePrivate`pathType$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
          TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
         TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
          TypeSystem`NestedGrid`PackagePrivate`path$, 
           TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
        Spacer[10], Blank[] :> Spacer[10]}], 
      Pattern[TypeSystem`NestedGrid`PackagePrivate`bar, 
        Except[
         Alternatives[
          Blank[Spacer], ""]]] :> 
      TypeSystem`NestedGrid`PackagePrivate`makeFramedPathbar[
       TypeSystem`NestedGrid`PackagePrivate`bar]], 
     TrackedSymbols :> {
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{651.976, {37.530792236328125`, 43.262725830078125`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{651.976, {37.530792236328125`, 43.262725830078125`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.9577038562489157`*^9, 3.9577039228698997`*^9, {3.9577042186571627`*^9, 
   3.9577042576302357`*^9}, {3.957704458642599*^9, 3.9577044887235003`*^9}, 
   3.957705169255987*^9, 3.9581325358241177`*^9},
 CellLabel->
  "Out[1506]=",ExpressionUUID->"1d265cc1-9150-49ae-b34a-dbfe326e2a54"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Attempt directly inverting", "Subtitle",
 CellChangeTimes->{{3.958132539107264*^9, 
  3.95813254237741*^9}},ExpressionUUID->"a258dcff-923c-45a8-81ad-\
c2ed8303318b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"\[Sigma]Screen", " ", "==", " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["\[Sigma]Off", "2"], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[Kappa]", " ", "V", " ", "\[Sigma]z"}], ")"}], "2"]}]]}], ",",
     "\[Sigma]z"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.958132559161997*^9, 3.958132564175667*^9}},
 CellLabel->
  "In[1508]:=",ExpressionUUID->"596bc78d-50c0-49ed-8a2e-e49fa1fc0c7f"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "nongen", 
   "\"There may be values of the parameters for which some or all solutions \
are not valid.\"", 2, 1508, 29, 22004652801433359150, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{{3.95813255440832*^9, 3.958132564729762*^9}},
 CellLabel->
  "During evaluation of \
In[1508]:=",ExpressionUUID->"ed587467-bdc4-4f66-a67c-d4e4d7282e8e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Sigma]z", "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[Sigma]Off", "2"]}], "+", 
         SuperscriptBox["\[Sigma]Screen", "2"]}]], 
       RowBox[{"V", " ", "\[Kappa]"}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Sigma]z", "\[Rule]", 
     FractionBox[
      SqrtBox[
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["\[Sigma]Off", "2"]}], "+", 
        SuperscriptBox["\[Sigma]Screen", "2"]}]], 
      RowBox[{"V", " ", "\[Kappa]"}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.958132554413879*^9, 3.958132564734627*^9}},
 CellLabel->
  "Out[1508]=",ExpressionUUID->"8dfb715f-88e4-4b09-9f1a-6e98abc98868"]
}, Open  ]],

Cell[BoxData[
 FractionBox[
  SqrtBox[
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["\[Sigma]Off", "2"]}], "+", 
    SuperscriptBox["\[Sigma]Screen", "2"]}]], 
  RowBox[{"V", " ", "\[Kappa]"}]]], "Input",ExpressionUUID->"773dfa11-4491-\
4e34-a75b-436ebbb1dd57"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TransformedDistribution", "[", "\[IndentingNewLine]", 
  RowBox[{
   FractionBox[
    SqrtBox[
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[Sigma]Off", "2"]}], "+", 
      SuperscriptBox["\[Sigma]Screen", "2"]}]], 
    RowBox[{"V", " ", "\[Kappa]"}]], ",", "\[IndentingNewLine]", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Sigma]Screen", "\[Distributed]", 
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"\[Mu]\[Sigma]Screen", ",", "\[Sigma]\[Sigma]Screen"}], 
       "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\[Sigma]Off", "\[Distributed]", 
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"\[Mu]\[Sigma]Off", ",", "\[Sigma]\[Sigma]Off"}], "]"}]}]}], 
    "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{3.958132634155347*^9},
 CellLabel->
  "In[1509]:=",ExpressionUUID->"c55e4d5a-96c1-48ce-b786-f0528c9c4588"],

Cell[BoxData[
 RowBox[{"TransformedDistribution", "[", 
  RowBox[{
   FractionBox[
    SqrtBox[
     RowBox[{
      SuperscriptBox["\[FormalX]1", "2"], "-", 
      SuperscriptBox["\[FormalX]2", "2"]}]], 
    RowBox[{"V", " ", "\[Kappa]"}]], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[FormalX]1", "\[Distributed]", 
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"\[Mu]\[Sigma]Screen", ",", "\[Sigma]\[Sigma]Screen"}], 
       "]"}]}], ",", 
     RowBox[{"\[FormalX]2", "\[Distributed]", 
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"\[Mu]\[Sigma]Off", ",", "\[Sigma]\[Sigma]Off"}], "]"}]}]}], 
    "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.958132635047002*^9},
 CellLabel->
  "Out[1509]=",ExpressionUUID->"61cabc10-ab6c-48f5-acec-8680a5d8b6c3"]
}, Open  ]],

Cell["\<\
From \[OpenCurlyDoubleQuote]2025-01-28 Analytic uncertainty propagation - \
compare to Around.nb\[CloseCurlyDoubleQuote]\
\>", "Text",
 CellChangeTimes->{{3.95813271972435*^9, 
  3.958132721599667*^9}},ExpressionUUID->"1044c2d0-26c5-4a13-9e6b-\
c3e90c105532"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"powerAround", "[", 
   RowBox[{"a_", ",", "n_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"a", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "n"], ",", " ", 
    RowBox[{"Abs", "[", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"a", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "n"], " ", "*", " ", "n", " ", "*", 
      " ", 
      RowBox[{
       RowBox[{"a", "[", 
        RowBox[{"[", "2", "]"}], "]"}], " ", "/", " ", 
       RowBox[{"a", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}]}], " ", "]"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plusAround", "[", 
   RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"a", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "+", 
     RowBox[{"b", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ",", 
    SqrtBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"a", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"b", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "2"]}]]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.958132685433176*^9, 3.958132687687586*^9}},
 CellLabel->
  "In[1512]:=",ExpressionUUID->"634fb283-744b-4e27-8b70-f0b40b213e7e"],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox[
  RowBox[{"powerAround", "[", 
   RowBox[{
    RowBox[{"plusAround", "[", 
     RowBox[{
      RowBox[{"powerAround", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Mu]\[Sigma]Screen", ",", "\[Sigma]\[Sigma]Screen"}], 
         "}"}], ",", "2"}], "]"}], ",", 
      RowBox[{"-", 
       RowBox[{"powerAround", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Mu]\[Sigma]Off", ",", "\[Sigma]\[Sigma]Off"}], "}"}], ",",
          "2"}], "]"}]}]}], "]"}], ",", 
    RowBox[{"1", "/", "2"}]}], "]"}], 
  RowBox[{"V", " ", "\[Kappa]"}]]], "Input",
 CellChangeTimes->{{3.9581327459963417`*^9, 3.958132816841977*^9}},
 CellLabel->
  "In[1514]:=",ExpressionUUID->"fce7861a-ccf5-4b41-a8aa-9fed7dcdf998"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    SqrtBox[
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[Mu]\[Sigma]Off", "2"]}], "+", 
      SuperscriptBox["\[Mu]\[Sigma]Screen", "2"]}]], 
    RowBox[{"V", " ", "\[Kappa]"}]], ",", 
   FractionBox[
    RowBox[{"Abs", "[", 
     FractionBox[
      SqrtBox[
       RowBox[{
        RowBox[{"4", " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"\[Mu]\[Sigma]Off", " ", "\[Sigma]\[Sigma]Off"}], "]"}], 
          "2"]}], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"\[Mu]\[Sigma]Screen", " ", "\[Sigma]\[Sigma]Screen"}], 
           "]"}], "2"]}]}]], 
      SqrtBox[
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["\[Mu]\[Sigma]Off", "2"]}], "+", 
        SuperscriptBox["\[Mu]\[Sigma]Screen", "2"]}]]], "]"}], 
    RowBox[{"2", " ", "V", " ", "\[Kappa]"}]]}], "}"}]], "Output",
 CellChangeTimes->{3.958132826408312*^9},
 CellLabel->
  "Out[1514]=",ExpressionUUID->"7c9982a7-5a4b-4107-9025-bf32b97116ba"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Get the standard errors for these quantities and propagate", "Subtitle",
 CellChangeTimes->{{3.9581329611084213`*^9, 3.958132976992566*^9}, 
   3.958133198772442*^9},ExpressionUUID->"587cccd9-a182-436d-a034-\
1225e13798e4"],

Cell[CellGroupData[{

Cell["First get \[Sigma]Off; it\[CloseCurlyQuote]s equal to the screen value \
with V = 0", "Subsection",
 CellChangeTimes->{{3.958133011359188*^9, 
  3.958133036919924*^9}},ExpressionUUID->"31934396-4d56-42f5-9411-\
b32a39d7bfd6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"offMeasurements", " ", "=", " ", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{"data", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "==", "0"}], "&"}]}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Mean", "[", "offMeasurements", "]"}], "\[IndentingNewLine]", 
 RowBox[{"StandardDeviation", "[", "offMeasurements", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StandardDeviation", "[", "offMeasurements", "]"}], "/", 
  RowBox[{"Sqrt", "[", 
   RowBox[{"Length", "[", "offMeasurements", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.958133044978464*^9, 3.9581330871372843`*^9}},
 CellLabel->
  "In[1519]:=",ExpressionUUID->"a37ab1b5-bf63-45b8-8004-1d703046ddd8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "472.88595738029727`", ",", "488.025717938945`", ",", "441.5050596621244`", 
   ",", "522.2530245381091`", ",", "455.3756046327982`", ",", 
   "485.95136930574284`", ",", "495.49093406422463`", ",", 
   "453.3206230957517`", ",", "488.2384259965348`", ",", 
   "485.7739148630236`"}], "}"}]], "Output",
 CellChangeTimes->{{3.9581330595971117`*^9, 3.958133087924775*^9}},
 CellLabel->
  "Out[1519]=",ExpressionUUID->"300dfdaa-2a48-488b-8bb8-f76067a316a8"],

Cell[BoxData["478.88206314775516`"], "Output",
 CellChangeTimes->{{3.9581330595971117`*^9, 3.958133087926903*^9}},
 CellLabel->
  "Out[1520]=",ExpressionUUID->"b030c428-e755-446a-9fdd-430bb1f56fff"],

Cell[BoxData["23.721649808536505`"], "Output",
 CellChangeTimes->{{3.9581330595971117`*^9, 3.9581330879284983`*^9}},
 CellLabel->
  "Out[1521]=",ExpressionUUID->"cf79103a-170e-4bf5-8b44-1976666bd4ad"],

Cell[BoxData["7.501444325187251`"], "Output",
 CellChangeTimes->{{3.9581330595971117`*^9, 3.9581330879296722`*^9}},
 CellLabel->
  "Out[1522]=",ExpressionUUID->"bbc1eae5-9f1a-439c-80ff-ab4ec3a3b25c"]
}, Open  ]],

Cell["So \[Mu]\[Sigma]Off = 478.882 with standard error 7.50144", "Text",
 CellChangeTimes->{{3.9581331133895283`*^9, 
  3.958133124945401*^9}},ExpressionUUID->"333234a5-2c80-42f5-a2c9-\
09e60e4a49a9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Now, for each measurement, estimate \[Sigma]z", "Subsection",
 CellChangeTimes->{{3.958133128842123*^9, 3.958133131614884*^9}, {
  3.958133298522153*^9, 
  3.958133305559465*^9}},ExpressionUUID->"02d626a9-f7f9-464d-b162-\
7f9917d684d7"],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox[
  SqrtBox[
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Around", "[", 
        RowBox[{"478.882", ",", "7.50144"}], "]"}], "2"], "+", 
      SuperscriptBox["\[Sigma]Screen", "2"]}]}]}]], 
  RowBox[{"V", " ", "\[Kappa]"}]]], "Input",
 CellChangeTimes->{{3.958133325195796*^9, 
  3.95813336384704*^9}},ExpressionUUID->"4e1e63b8-61d3-4a23-ac43-\
d537567cfb46"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1463.870524947474`", ",", "1531.4520018408837`", ",", 
   "1599.0216946601092`", ",", "1702.715083358308`", ",", "1584.0824570475`", 
   ",", "1665.8283063040558`", ",", "1981.7122997125553`", ",", 
   "1769.7200301395533`", ",", "1466.6899862966109`", ",", 
   "1847.3205035243143`", ",", "1376.0208707809463`", ",", 
   "1732.60856250911`", ",", "2051.7080164492677`", ",", 
   "1036.1132520943922`", ",", "1927.101218615371`", ",", 
   "1938.710604969935`", ",", "1727.7901577373475`", ",", 
   "1567.7181790459992`", ",", "1714.4755734529442`", ",", 
   "1810.528644912713`"}], "}"}]], "Output",
 CellChangeTimes->{3.958133329587021*^9},
 CellLabel->
  "Out[1523]=",ExpressionUUID->"badb241c-41f2-4cf2-9e19-0a1504c876e8"]
}, Open  ]],

Cell["No, I decided I don\[CloseCurlyQuote]t like this", "Text",
 CellChangeTimes->{{3.9581334050683193`*^9, 
  3.958133408399129*^9}},ExpressionUUID->"b0f898f4-704b-442a-9f1a-\
c7280b04ed45"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Directly propagating standard errors", "Subsection",
 CellChangeTimes->{{3.958133889259691*^9, 3.9581338902644176`*^9}, {
  3.9581339548548403`*^9, 
  3.958133960856461*^9}},ExpressionUUID->"ba764d93-01ae-44b3-a650-\
6b47f9d21a43"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"offMeasurements", " ", "=", " ", 
   RowBox[{
    RowBox[{"Select", "[", 
     RowBox[{"data", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "==", "0"}], "&"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"onMeasurements", " ", "=", " ", 
   RowBox[{
    RowBox[{"Select", "[", 
     RowBox[{"data", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "!=", "0"}], "&"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.958134074916712*^9, 3.958134075485523*^9}},
 CellLabel->
  "In[1588]:=",ExpressionUUID->"7e5825c3-6868-4d05-8312-dbb62c2da81d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"aroundWithStandardError", "[", "pop_", "]"}], ":=", 
  RowBox[{"Around", "[", 
   RowBox[{
    RowBox[{"Mean", "[", "pop", "]"}], ",", 
    RowBox[{
     RowBox[{"StandardDeviation", "[", "pop", "]"}], "/", 
     SqrtBox[
      RowBox[{"Length", "[", "pop", "]"}]]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9581339937409573`*^9, 3.958134017764578*^9}},
 CellLabel->
  "In[1590]:=",ExpressionUUID->"c762a2c5-9916-4634-9e7a-f1cec900cc28"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Abs", "[", 
   FractionBox[
    SqrtBox[
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[Sigma]Off", "2"]}], "+", 
      SuperscriptBox["\[Sigma]Screen", "2"]}]], 
    RowBox[{"V", " ", "\[Kappa]"}]], "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Sigma]Off", "->", 
     RowBox[{"aroundWithStandardError", "[", "offMeasurements", "]"}]}], ",", 
    
    RowBox[{"\[Sigma]Screen", "->", 
     RowBox[{"aroundWithStandardError", "[", "onMeasurements", "]"}]}], ",", 
    RowBox[{"V", "->", "1"}], ",", 
    RowBox[{"\[Kappa]", "->", 
     RowBox[{"(", 
      RowBox[{"1", "/", "0.073"}], ")"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.958133971677699*^9, 3.958133976155056*^9}, {
  3.958134022345148*^9, 3.9581340240404997`*^9}},
 CellLabel->
  "In[1591]:=",ExpressionUUID->"43dffa15-5031-4fe1-9ff7-6f908b1e7383"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{"117.", "4."},
   "Around"],
  Around[117.15285572263187`, 4.038799355024817]]], "Output",
 CellChangeTimes->{3.958133976477203*^9, 3.958134025760861*^9, 
  3.958134078367399*^9},
 CellLabel->
  "Out[1591]=",ExpressionUUID->"efd45d5b-4f92-445f-9161-94e3fd1cc7eb"]
}, Open  ]],

Cell["\<\
This approach seems reasonable, but doesn\[CloseCurlyQuote]t accommodate \
varying V values\
\>", "Text",
 CellChangeTimes->{{3.95813404811158*^9, 3.958134049220355*^9}, {
  3.9581340807961187`*^9, 
  3.958134097569034*^9}},ExpressionUUID->"3e1fc637-3496-4c6b-ad5b-\
2201b573584e"],

Cell["", "Text",
 CellChangeTimes->{{3.95813389257586*^9, 
  3.958133952755282*^9}},ExpressionUUID->"b3e3a680-c1b3-45ab-a8bb-\
f070625d2051"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Monte Carlo error propagation", "Subtitle",
 CellChangeTimes->{{3.958133410603743*^9, 
  3.9581334163953876`*^9}},ExpressionUUID->"17d5007b-ffad-4d9b-8ca7-\
c3459ce383b7"],

Cell[TextData[{
 "The general solution for \[Sigma]z is |",
 Cell[BoxData[
  FractionBox[
   SqrtBox[
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["\[Sigma]Off", "2"]}], "+", 
     SuperscriptBox["\[Sigma]Screen", "2"]}]], 
   RowBox[{"V", " ", "\[Kappa]"}]]],
  CellChangeTimes->{{3.958132554413879*^9, 3.958132564734627*^9}},
  ExpressionUUID->"a9e9c277-d9af-446f-af8f-5e864ca1c82c"],
 "|\n\nAlthough my data only has |V| = 1, the following Monte Carlo method \
would be general if, e.g. V was varying"
}], "Text",
 CellChangeTimes->{{3.958133442516836*^9, 
  3.9581334973181877`*^9}},ExpressionUUID->"35c85509-0042-4354-8a62-\
9ac371b11cfa"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"offMeasurements", " ", "=", " ", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{"data", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "==", "0"}], "&"}]}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"onMeasurements", " ", "=", " ", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{"data", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "!=", "0"}], "&"}]}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.958133510252355*^9, 3.9581335181701612`*^9}},
 CellLabel->
  "In[1528]:=",ExpressionUUID->"a42f69ef-b7b7-4733-9773-054d765c3460"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "472.88595738029727`", ",", "488.025717938945`", ",", "441.5050596621244`", 
   ",", "522.2530245381091`", ",", "455.3756046327982`", ",", 
   "485.95136930574284`", ",", "495.49093406422463`", ",", 
   "453.3206230957517`", ",", "488.2384259965348`", ",", 
   "485.7739148630236`"}], "}"}]], "Output",
 CellChangeTimes->{{3.958133514539282*^9, 3.958133519955591*^9}},
 CellLabel->
  "Out[1528]=",ExpressionUUID->"1b4684ac-0987-4157-8c2a-fd219633e1d3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1463.870524947474`", ",", "1531.4520018408837`", ",", 
   "1599.0216946601092`", ",", "1702.715083358308`", ",", "1584.0824570475`", 
   ",", "1665.8283063040558`", ",", "1981.7122997125553`", ",", 
   "1769.7200301395533`", ",", "1466.6899862966109`", ",", 
   "1847.3205035243143`", ",", "1376.0208707809463`", ",", 
   "1732.60856250911`", ",", "2051.7080164492677`", ",", 
   "1036.1132520943922`", ",", "1927.101218615371`", ",", 
   "1938.710604969935`", ",", "1727.7901577373475`", ",", 
   "1567.7181790459992`", ",", "1714.4755734529442`", ",", 
   "1810.528644912713`"}], "}"}]], "Output",
 CellChangeTimes->{{3.958133514539282*^9, 3.9581335199574327`*^9}},
 CellLabel->
  "Out[1529]=",ExpressionUUID->"0e7afdab-4deb-46cf-86e5-821aba6db38c"]
}, Open  ]],

Cell["\<\
My concern with this is doing the appropriate number of samples... too few, \
and I\[CloseCurlyQuote]ll overestimate the standard error, too many and I\
\[CloseCurlyQuote]ll be duplicating virtual measurements since I have a \
finite number of \[OpenCurlyDoubleQuote]real\[CloseCurlyDoubleQuote] numbers \
to sample from

I\[CloseCurlyQuote]ll try two cases: number of trials equal to the number of \
offMeasurements and number of trials equal to the onMeasurements\
\>", "Text",
 CellChangeTimes->{{3.958133532224539*^9, 
  3.958133647171607*^9}},ExpressionUUID->"4a84711a-1fb1-4c40-837f-\
0d2a61a5c711"],

Cell[CellGroupData[{

Cell["10 trials", "Subsection",
 CellChangeTimes->{{3.958133661378236*^9, 
  3.9581336622183113`*^9}},ExpressionUUID->"a07cef80-2875-456f-9100-\
60ea63fd2520"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"results", " ", "=", " ", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Abs", "[", 
       FractionBox[
        SqrtBox[
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["\[Sigma]Off", "2"]}], "+", 
          SuperscriptBox["\[Sigma]Screen", "2"]}]], 
        RowBox[{"V", " ", "\[Kappa]"}]], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Sigma]Off", "->", 
         RowBox[{"RandomChoice", "[", "offMeasurements", "]"}]}], ",", 
        RowBox[{"\[Sigma]Screen", "->", 
         RowBox[{"RandomChoice", "[", "onMeasurements", "]"}]}], ",", 
        RowBox[{"V", "->", "1"}], ",", 
        RowBox[{"\[Kappa]", "->", 
         RowBox[{"(", 
          RowBox[{"1", "/", "0.073"}], ")"}]}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", "10"}], "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Mean", "[", "results", "]"}], "\[IndentingNewLine]", 
 RowBox[{"StandardDeviation", "[", "results", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StandardDeviation", "[", "results", "]"}], "/", 
  RowBox[{"Sqrt", "[", 
   RowBox[{"Length", "[", "results", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.958133667999071*^9, 3.958133756858721*^9}},
 CellLabel->
  "In[1532]:=",ExpressionUUID->"33cc19c9-e180-4902-b052-17275eecb50e"],

Cell[BoxData["116.8112582365765`"], "Output",
 CellChangeTimes->{{3.958133738808384*^9, 3.958133757409906*^9}},
 CellLabel->
  "Out[1533]=",ExpressionUUID->"cafc6277-416f-4a9b-8b09-93e38cd73dc2"],

Cell[BoxData["14.686610751338952`"], "Output",
 CellChangeTimes->{{3.958133738808384*^9, 3.958133757411574*^9}},
 CellLabel->
  "Out[1534]=",ExpressionUUID->"191df986-744b-49b3-9f53-b42c189acdde"],

Cell[BoxData["4.6443141082547905`"], "Output",
 CellChangeTimes->{{3.958133738808384*^9, 3.958133757412689*^9}},
 CellLabel->
  "Out[1535]=",ExpressionUUID->"2996d4cb-2d66-4638-90d0-55fa3bc91509"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["20 trials", "Subsection",
 CellChangeTimes->{{3.958133661378236*^9, 3.9581336622183113`*^9}, {
  3.958133770921546*^9, 
  3.958133770997569*^9}},ExpressionUUID->"4264834a-24e1-491c-9e79-\
1adc59837d00"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"results", " ", "=", " ", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Abs", "[", 
       FractionBox[
        SqrtBox[
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["\[Sigma]Off", "2"]}], "+", 
          SuperscriptBox["\[Sigma]Screen", "2"]}]], 
        RowBox[{"V", " ", "\[Kappa]"}]], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Sigma]Off", "->", 
         RowBox[{"RandomChoice", "[", "offMeasurements", "]"}]}], ",", 
        RowBox[{"\[Sigma]Screen", "->", 
         RowBox[{"RandomChoice", "[", "onMeasurements", "]"}]}], ",", 
        RowBox[{"V", "->", "1"}], ",", 
        RowBox[{"\[Kappa]", "->", 
         RowBox[{"(", 
          RowBox[{"1", "/", "0.073"}], ")"}]}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", "20"}], "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Mean", "[", "results", "]"}], "\[IndentingNewLine]", 
 RowBox[{"StandardDeviation", "[", "results", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StandardDeviation", "[", "results", "]"}], "/", 
  RowBox[{"Sqrt", "[", 
   RowBox[{"Length", "[", "results", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.958133667999071*^9, 3.958133773997217*^9}},
 CellLabel->
  "In[1572]:=",ExpressionUUID->"c913763a-5ce6-41b4-ae40-7d5eb15f4309"],

Cell[BoxData["117.4988345479491`"], "Output",
 CellChangeTimes->{{3.958133738808384*^9, 3.958133787531723*^9}},
 CellLabel->
  "Out[1573]=",ExpressionUUID->"abb285c4-846a-46b4-af77-cd44bc1cd3b9"],

Cell[BoxData["17.911832182522495`"], "Output",
 CellChangeTimes->{{3.958133738808384*^9, 3.958133787533646*^9}},
 CellLabel->
  "Out[1574]=",ExpressionUUID->"b29dfdb1-c1e6-4899-ab06-f6b9e6c2e51f"],

Cell[BoxData["4.005207436168872`"], "Output",
 CellChangeTimes->{{3.958133738808384*^9, 3.958133787535033*^9}},
 CellLabel->
  "Out[1575]=",ExpressionUUID->"95716e8d-42fc-43c9-911b-0a3481c5b1e3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["20*10 trials", "Subsection",
 CellChangeTimes->{{3.958133661378236*^9, 3.9581336622183113`*^9}, {
  3.958133770921546*^9, 
  3.958133794443739*^9}},ExpressionUUID->"e60594ad-42bd-4caa-8337-\
77434960bd3f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"results", " ", "=", " ", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Abs", "[", 
       FractionBox[
        SqrtBox[
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["\[Sigma]Off", "2"]}], "+", 
          SuperscriptBox["\[Sigma]Screen", "2"]}]], 
        RowBox[{"V", " ", "\[Kappa]"}]], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Sigma]Off", "->", 
         RowBox[{"RandomChoice", "[", "offMeasurements", "]"}]}], ",", 
        RowBox[{"\[Sigma]Screen", "->", 
         RowBox[{"RandomChoice", "[", "onMeasurements", "]"}]}], ",", 
        RowBox[{"V", "->", "1"}], ",", 
        RowBox[{"\[Kappa]", "->", 
         RowBox[{"(", 
          RowBox[{"1", "/", "0.073"}], ")"}]}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", "200"}], "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Mean", "[", "results", "]"}], "\[IndentingNewLine]", 
 RowBox[{"StandardDeviation", "[", "results", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StandardDeviation", "[", "results", "]"}], "/", 
  RowBox[{"Sqrt", "[", 
   RowBox[{"Length", "[", "results", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.958133667999071*^9, 3.958133796996334*^9}},
 CellLabel->
  "In[1580]:=",ExpressionUUID->"fdfc827b-0d23-48a2-aab7-03036c069f2e"],

Cell[BoxData["116.79313029057937`"], "Output",
 CellChangeTimes->{{3.958133738808384*^9, 3.958133804361252*^9}},
 CellLabel->
  "Out[1581]=",ExpressionUUID->"ee852f6e-03b4-4e8b-b3f5-49044ee64fd2"],

Cell[BoxData["19.535314160394673`"], "Output",
 CellChangeTimes->{{3.958133738808384*^9, 3.958133804362945*^9}},
 CellLabel->
  "Out[1582]=",ExpressionUUID->"e3a19c28-ef2f-4b95-a86f-0778d2bbd393"],

Cell[BoxData["1.381355311542466`"], "Output",
 CellChangeTimes->{{3.958133738808384*^9, 3.9581338043641157`*^9}},
 CellLabel->
  "Out[1583]=",ExpressionUUID->"1fad0e46-92f3-4225-9ff7-b97ea5cd1035"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Toy model - sanity check", "Subtitle",
 CellChangeTimes->{{3.9580483914205437`*^9, 
  3.9580483981821127`*^9}},ExpressionUUID->"15011076-857f-452c-89f7-\
584fb47397e1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"fakeData", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", " ", 
        RowBox[{
         RowBox[{"2.1", " ", "x"}], " ", "+", " ", 
         RowBox[{"0.5", 
          RowBox[{
           RowBox[{"RandomVariate", "[", 
            RowBox[{
             RowBox[{"NormalDistribution", "[", 
              RowBox[{"0", ",", "1"}], "]"}], ",", "1"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "1"}], ",", "1", ",", "0.001"}], "}"}]}], "]"}]}], ";"}],
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Randomize", " ", "order"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fakeData", "=", 
    RowBox[{"RandomSample", "[", "fakeData", "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", "fakeData", "]"}]}], "Input",
 CellChangeTimes->{{3.9577053953012333`*^9, 3.957705487237503*^9}, 
   3.958047553537965*^9},
 CellLabel->
  "In[2779]:=",ExpressionUUID->"5ecf1295-cab0-4c96-bc9e-162b98379eba"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[
      TagBox[
       {RGBColor[0.24, 0.6, 0.8], PointSize[0.004583333333333334], 
        AbsoluteThickness[2], PointBox[CompressedData["
1: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
wDotynckgeEPx1edKn4i4WNU2BjDWxDZVUX7wwLYMG6zYv3HBprPUtH5FffF
u1NyJPVlNOT2KGk5NLYCypn9yoNCjq2jsEcpxUPt+SDDJtK7Xot9jOiHYIlv
zZ/LB2JoPHgMD7y2lk7LraT9ORm+u256PcujifafCyHp2IQ+RU01tB8ah4+1
n61iu8VRe06FJbaFRSV7iml8zEe7uuqXKPhJ9YkKOLR0T8IYSROtn6SgWXtR
Fclmscm8U3v9+SrFdt+ZGiR6eilGDZvS5PCklt6fchKvD9N5ErS9QD2/C3sF
Fi+zb0fT+0gCcKpuQmJOTTatTwrR+2Km2HRIKY1XArxrJL7ZZVwV0vswoSrr
P7OyKyJ1/xNHJj6t+XNYff9TAupvnV7/h5upnh+F1VfSk6oNiyCVPA+E9bkt
EVvz1fwtyF19JeIoFu0ntNcBxzFMY30YnV8MxJXxy2s47gKk/XDMH7DziF59
OOUjQ2Gq3sCohb9j1fU1xnC3WGyfHwXa5H5MtNt7wCZAO5zevyPBkE08bnO/
RoovxehlNyEgT1VB1xMOxS2/L8cV5YAfub8Epw7gGI65Gkj5q0TYEhh9/OGh
NJqPs/FTT/8P9w/Fqvl89HkbPPX18gqa30vR62up1rSmaqT8MYauE4/muX+k
/T0+rDYrmtJ9cy0QvUgq+E3aO6ZA8UHd30BTh2WHFzxR4yMx/HDUnDtzejnt
fwsxOibm9LWDGhzSPy+BoZpj9jexK4Dqz2Gjy5j9NQF/Kb7Iw+DUXqxlnbnq
+WqwKSxMXSnkAe2fQ3254eWIlQl0Xr0YQhZcbtl2rpXiBwGG7W2t26VqofM7
Eug8511ZL/9m2t/gwrkZpo/OZ1TR/pcCxplpXywa20T796VouTVwU21ODe3P
tdep51PMDM820vwphZ9Pf6T3m9eknl+E2cLHWStOVavvz4P1nzUuTqwvASLv
luP957ZJ8q8aHIqnYEHh9nXTblcC5ffg8ZHGsoV/BPT+HxFefpkT63qjjt63
KUOTuyed+hdV0vqiFANmDNn/Q9iqnj9Go0L/abK4fKpXKsDpSRbjdg9vQaIH
50EMe96skjAWm9xnlAtGZ31Hbe38jb5PLhZ8nTJkRUstxc9cPGaR27QkJZ7e
LyXBmv7Hxwdo1tN+axJugcjH5wMzKF/OgbeH12om66Ujqa/a48TNM9dEusWU
/ylDNDE0OPpEi0PnIWB3FZb9vtoIJH7GoYv+JZHwj4DyQ5YoeL/5rWs3fzUf
D9Wp3j6g+5fy+TLEaew3H1pa6XyNFIJaD58W72qi/eQS/HNi69MTx5sov5WO
gr7HfQ+eyKZ8YySYlHvezzCOp/MTYpCaTNrmuq6Exl8hpn62mx0ENZS/44JP
8eKvlv5VFK+XYLx735cL3jXS/CTBQSe/bz7v3UD5FTl494s38h+ixaZ6BCiq
HpL286OA9mPa89nq5ybaS7U5hE8XQcRth8Vv4lW0nuCiXt5Aa1UnIT2/PNze
ZVvC2Ql8ej8bFzUmzfvxs6ISyf0aHLBcU+67vpaLdF4FunE8O41PyqHzAlz0
Ss/78EmQhnQeFGW6Nief/uChFZnPhGWLv7mMTVUCqQd+Yxov689iG4F6HgLz
7WaVDFkso+tJwxPFQ3X8nblI75cFw3EXUqzaImn/igt1Fg3vT++Wgojc94Ue
78+MKoyvRFIvKHDNz4Om8ROraHzLx/yIfPGg/rm0flSC3pXucxtdtKn+RgG7
5sU6TypVx18Zejh/UG46pMkhfGkZ1t6z2V/Rp47GxzwsfhM7ZNcvAY1fxVhu
HpTu0VZA468Ue+71OzlS2ULrZS44vr8l/WzwF/YyfEYMFjqOfsp3llO9XCEK
UiZ9ztcVqe8LhAC/4p+DD8gp3pGh56ZH5y+KqpHoh6VYYsnvdGZgPY2Hctj4
3HqIzvBqIPiBi+ez3vSxvcri0PtnUTMtoyzoe536vlR8nXJk4ZcRFbTfLgXL
wZMH65ZWqfEvXu2yMaFSoUTiz3GQ3qDtsqdASu8feIC3z/Zdszb/NxK+NwT+
BUf4brJIo/fvcMG3anTm6B5VkEoKDrjzvvxEVB91PM5Ajs89neIMP3Ri9vc7
jFgr+lR+O019nxC67TPWu9G7RK0HxXcb3wjcNRvwGLmvGKu7lqYNxUwk81Cp
8M91yaDWB5VA/E8BT/NkFv1cK+l9K+J2f9oZNFVbrb/gQvCo7h7WozTYxP+d
YINP28lZ4/4h4T+kKNCddvSSazWdZy/D020zhVXbupHXH8pDh/qVhw+mCvAR
qSfw2a/ed1NzNTmUf8DY9BWt123SaX0vhvtre/j2TGqg9ZgcPms6eVuvV+vn
hOj249fZnmsbaH0sgprYfoYvbrLY1J5grfyI3uDBCspnCGH/+dU7LKRqvrkU
n0hsvpodr0Wqj8HanQWpG/wrKT5IRI8R5Wsnfyyg+hIuBHL32p66Wk37sVwY
O3vRlsBxteBK7oeDb9KRl9rWSun9OXycZzIkXLq7herJ89Bw575NF8bW4Ccy
T4V2N452Dm5MU+uhcevA+OcWQ9R6uSS4s6XJ+ld7XUrqwSzU6LNxbld/Ib1P
TwADhS82yA7mANFzKWBn3fxlwVvqqV5LjubsQr5uQTlSPR1M2TZtwCUTKZB5
FiW+6PnVuk9ZG9WvCXCB1GcNR7uC8l9lsH/PJrs3lm00fkjhRB2UrN5aQd9P
jAk91n2aulGN71WoP+eXp+Ibi0PvDwMfjxEfWv/VUf1RFp7UuDza7VAFxedx
YLT7vrnx0etUj10Erk8CRs8ZF0/7qUrsU+i/yupYM+VvBHjtrCUngNtG+Rgx
pg4peFN2tRBdyf3qYPY2QX+nQl1Ptq/nyUNNt5XVSAEvhOkVf1rlqp4vcMQj
nA3eW24W0/wpg/jEcLZ3TT3F7+Xg0nzi0aSxLDa9PxN3Tf/1/IizNr2PqQB+
746c1uOrkup9M/C0zZ4U3tto9X6CdmdHs40uClqv8TE8LuNMYEuF+r5emDT5
agI7tJr6nwTi2pqNnC92YhO9WR7YmGmstp6fQPXmxejc9iJ6pGGl+v5T/Nnj
zc8UNxaH1Jfv0HauRcqXH3E0XzvhvOmzBl7dVqHGJzAh60p+imtXytcoYdNg
V1a/gdpsysdAXOKNFZvb/Y7kWw7ydxlv8fydDk4E0EGQiq23sb+Qxhch1vLn
7nu0oobeFyTF89Wnh88raVXfn4SH+k/vJmwIp/WeEjclyd7O12ij+jcZBt/L
jrr4porq3aSgwesp+SCpVNs7PC/ZMycgUKjW+4BLL3PRSCP1/YfF4PIh/tou
fTVeTMGkd7t6OrT7HekPZ4D3xIcmWn/K6TyPAJ3E+gb4H5fGbyU8v5r7bIJx
C+3f8FA7+V/rsbUVaEP4Lxgd/MfyuX4l1cupMO3rnn1PzrM4VB8Pv3w7+/ac
K6bnw8cNkYO9O8U2qvvBMOP08NDg823q+8vwed6U4S83y6ieSYHji7pb//pc
Tfn2n9C3O9/cYGMctR8F7hjbd25kd00OCaBhYBbYdNvzz091vxWb5ypUM7XC
gcRfIXp2PzjKk6Ok9yHkw4pxRxx2X8igfEQh1Epi9H2Xq6heXoXZ5YuqNQ83
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
7Whifkw8Y7+wcqVrFxJfAFfyUifveKXOI30UDHk82WLRJSnLv8Ww0rFv+4nk
dH8XwqAK2Xy7WhX1n5nY2rzu+KQtWZT/kIbHrsyuhFXs9xHjrD2X8m9bNVHe
mRgCJxe3Fc9tJ79GLoStMDcemC8GOTe/oqf7gdHzZXHs/oeTJb/0K58ho3lH
AGqi5Hhn7Wbg8K6b+HzdUQff5yx/rrf+nisrfDdWSn6gPHS8s6sodlQNcvxn
LY5S7J8q9dWmPEsR/H1nTLW5jgrUvg+o7mD3w9AJ0qRIhgfB5kLJkYzD9cD1
T8W48tfNg5Nj6tj+LfT+FnP07oVX9P5ngO3g1EuN9fX0vpXiy47w6tBjTXQe
hciLqrU5vLoNX3J5vZjRnS/avcqP8l9775F1A21d/2T7UbKhz959Bg/tlLS/
SQI/3VxnPN5AQvkZ2eAn09dJ/KRieT1o+doxeO0/bUwvgvkuIcZPrBpZni6m
pQ9LfO4tpn6oAmssJ5yOPcj8ROWwmB8d/fZvJflh84Cft2NXdN8HxM9mwEu9
+skbS1NJD1GCFReW618LZ3rDati/fkugYz9NHnc+c3DQX7MKlcsUpB+Rw4XB
C87q6LF6XQlPi8bv5q3opvogQtvQOe6NMc3EHwgh7dvantKDFYTfVUBo7fH3
eh6d1I/74J8VGyp0z6fRPpJaGLnnU4tJH20ep5/5CI93aJy0jckFFbfPEvSf
r3w97kQa4VW9fanYqrkmQU7zeDF6368rU22RsPxFaOz5d3ZK731A+wZh0fiT
Yfze/5fLKy0E230Vq3z+VbG8NIjuMynK854Gj/ZTwT3XKRmjb9bRfCiDJ998
ulOvqvNIT416jn5V5SNa2b5AiNG0R42VzUxPDLYj1P4I6awkfkQE1WF2L4LW
KKGA4w8w5Ezmy6WSEuK3i7Cra2ba1gvVhCeIsOPgbyaXDldSfyzHgo6lncvX
NJBeIRBDfzCasjEln+U1w5x3C3NSLrTDZC5fAp3N5ec6IpleogYNP5hU37FR
4xPfCRvwy70Z5kryI+ShwOp2T0y5kPScQuxuKez4UthG+2grwGDmAIe9U6so
zy8bYrI2xz/STyI8swA6Uh95psY2sH0s6Gb0rc7x33+A44sqIUo//aZgfx3x
mVIU14cYXXnUQvNNMfg0LnfOOCYmf0/v+/omwiU1UMb4RfByvvthlo6MzpMS
5s3y3fYkpgO4/TMfcN8doUNDUQHxqXm4Z9mb46YnW0nfJEahXcddwcVams96
z5+hd9VXsYzmUQXkJ/4xefMelgcswQzjwV/1qgupfheD96ab//kfrkB5KeC3
9XefGb31h8PvMiFn0YKnp36MJz5LAGsW5AccXigmP38G8jMtTgtHP6HfUwlj
li/ZZPpHXx739yuBvyU7dZ1RI+F5pbDPJSfC7L6U9E/laBrlljZrUDPtv8yF
nYb+HeJwMekZiuFx8YAOnqSZ/Hi5aNUS9/iDfR3TH2CCu+3wJbOKCS95gP5H
XQfESNMpr6IcNDYfFTlaNoI3l1cPzRH+65wcKikfpAxeREd7ZWTKiI8pwfiP
z/Q2SOWsfqJ1aLhoxh+VGMr5YQBu+8z2TMoBTy6fEYa8u+YsXJ1AeE823tNv
vTZiVSryuXoASv9FBbrOVcT/935uZcvNb9fKGL8BP+4zCDE7r0F5z9nociXL
qEqvifk14JRn64xda3poP6AEmye06xs3NrB+CH31fc4E8irZfg/Y+dj8uHNQ
PeUVSdBt9rbGaf17iL+Rw1q7Q29VDi2Enyfg4zNR7t9+S6N5Px/tpc8jf9LJ
p/u4FudUTo8bZKDNJ/0nhPY5ONQh5wbVo1jUPfpKYlpahRncvmW0ue5qmOgk
Ra4+KsEqMO6UZbgmj95/9LBpv3njSinrh7CC/4tZdYgW8X2FYJP9yMB/fwP8
F8meGPY=
         "]]},
       Annotation[#, "Charting`Private`Tag#1"]& ],
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
     StyleBox[
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction["DynamicHighlight", {{
           Annotation[{
             Directive[
              PointSize[0.004583333333333334], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2]], 
             Point[CompressedData["
1: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
wDotynckgeEPx1edKn4i4WNU2BjDWxDZVUX7wwLYMG6zYv3HBprPUtH5FffF
u1NyJPVlNOT2KGk5NLYCypn9yoNCjq2jsEcpxUPt+SDDJtK7Xot9jOiHYIlv
zZ/LB2JoPHgMD7y2lk7LraT9ORm+u256PcujifafCyHp2IQ+RU01tB8ah4+1
n61iu8VRe06FJbaFRSV7iml8zEe7uuqXKPhJ9YkKOLR0T8IYSROtn6SgWXtR
Fclmscm8U3v9+SrFdt+ZGiR6eilGDZvS5PCklt6fchKvD9N5ErS9QD2/C3sF
Fi+zb0fT+0gCcKpuQmJOTTatTwrR+2Km2HRIKY1XArxrJL7ZZVwV0vswoSrr
P7OyKyJ1/xNHJj6t+XNYff9TAupvnV7/h5upnh+F1VfSk6oNiyCVPA+E9bkt
EVvz1fwtyF19JeIoFu0ntNcBxzFMY30YnV8MxJXxy2s47gKk/XDMH7DziF59
OOUjQ2Gq3sCohb9j1fU1xnC3WGyfHwXa5H5MtNt7wCZAO5zevyPBkE08bnO/
RoovxehlNyEgT1VB1xMOxS2/L8cV5YAfub8Epw7gGI65Gkj5q0TYEhh9/OGh
NJqPs/FTT/8P9w/Fqvl89HkbPPX18gqa30vR62up1rSmaqT8MYauE4/muX+k
/T0+rDYrmtJ9cy0QvUgq+E3aO6ZA8UHd30BTh2WHFzxR4yMx/HDUnDtzejnt
fwsxOibm9LWDGhzSPy+BoZpj9jexK4Dqz2Gjy5j9NQF/Kb7Iw+DUXqxlnbnq
+WqwKSxMXSnkAe2fQ3254eWIlQl0Xr0YQhZcbtl2rpXiBwGG7W2t26VqofM7
Eug8511ZL/9m2t/gwrkZpo/OZ1TR/pcCxplpXywa20T796VouTVwU21ODe3P
tdep51PMDM820vwphZ9Pf6T3m9eknl+E2cLHWStOVavvz4P1nzUuTqwvASLv
luP957ZJ8q8aHIqnYEHh9nXTblcC5ffg8ZHGsoV/BPT+HxFefpkT63qjjt63
KUOTuyed+hdV0vqiFANmDNn/Q9iqnj9Go0L/abK4fKpXKsDpSRbjdg9vQaIH
50EMe96skjAWm9xnlAtGZ31Hbe38jb5PLhZ8nTJkRUstxc9cPGaR27QkJZ7e
LyXBmv7Hxwdo1tN+axJugcjH5wMzKF/OgbeH12om66Ujqa/a48TNM9dEusWU
/ylDNDE0OPpEi0PnIWB3FZb9vtoIJH7GoYv+JZHwj4DyQ5YoeL/5rWs3fzUf
D9Wp3j6g+5fy+TLEaew3H1pa6XyNFIJaD58W72qi/eQS/HNi69MTx5sov5WO
gr7HfQ+eyKZ8YySYlHvezzCOp/MTYpCaTNrmuq6Exl8hpn62mx0ENZS/44JP
8eKvlv5VFK+XYLx735cL3jXS/CTBQSe/bz7v3UD5FTl494s38h+ixaZ6BCiq
HpL286OA9mPa89nq5ybaS7U5hE8XQcRth8Vv4lW0nuCiXt5Aa1UnIT2/PNze
ZVvC2Ql8ej8bFzUmzfvxs6ISyf0aHLBcU+67vpaLdF4FunE8O41PyqHzAlz0
Ss/78EmQhnQeFGW6Nief/uChFZnPhGWLv7mMTVUCqQd+Yxov689iG4F6HgLz
7WaVDFkso+tJwxPFQ3X8nblI75cFw3EXUqzaImn/igt1Fg3vT++Wgojc94Ue
78+MKoyvRFIvKHDNz4Om8ROraHzLx/yIfPGg/rm0flSC3pXucxtdtKn+RgG7
5sU6TypVx18Zejh/UG46pMkhfGkZ1t6z2V/Rp47GxzwsfhM7ZNcvAY1fxVhu
HpTu0VZA468Ue+71OzlS2ULrZS44vr8l/WzwF/YyfEYMFjqOfsp3llO9XCEK
UiZ9ztcVqe8LhAC/4p+DD8gp3pGh56ZH5y+KqpHoh6VYYsnvdGZgPY2Hctj4
3HqIzvBqIPiBi+ez3vSxvcri0PtnUTMtoyzoe536vlR8nXJk4ZcRFbTfLgXL
wZMH65ZWqfEvXu2yMaFSoUTiz3GQ3qDtsqdASu8feIC3z/Zdszb/NxK+NwT+
BUf4brJIo/fvcMG3anTm6B5VkEoKDrjzvvxEVB91PM5Ajs89neIMP3Ri9vc7
jFgr+lR+O019nxC67TPWu9G7RK0HxXcb3wjcNRvwGLmvGKu7lqYNxUwk81Cp
8M91yaDWB5VA/E8BT/NkFv1cK+l9K+J2f9oZNFVbrb/gQvCo7h7WozTYxP+d
YINP28lZ4/4h4T+kKNCddvSSazWdZy/D020zhVXbupHXH8pDh/qVhw+mCvAR
qSfw2a/ed1NzNTmUf8DY9BWt123SaX0vhvtre/j2TGqg9ZgcPms6eVuvV+vn
hOj249fZnmsbaH0sgprYfoYvbrLY1J5grfyI3uDBCspnCGH/+dU7LKRqvrkU
n0hsvpodr0Wqj8HanQWpG/wrKT5IRI8R5Wsnfyyg+hIuBHL32p66Wk37sVwY
O3vRlsBxteBK7oeDb9KRl9rWSun9OXycZzIkXLq7herJ89Bw575NF8bW4Ccy
T4V2N452Dm5MU+uhcevA+OcWQ9R6uSS4s6XJ+ld7XUrqwSzU6LNxbld/Ib1P
TwADhS82yA7mANFzKWBn3fxlwVvqqV5LjubsQr5uQTlSPR1M2TZtwCUTKZB5
FiW+6PnVuk9ZG9WvCXCB1GcNR7uC8l9lsH/PJrs3lm00fkjhRB2UrN5aQd9P
jAk91n2aulGN71WoP+eXp+Ibi0PvDwMfjxEfWv/VUf1RFp7UuDza7VAFxedx
YLT7vrnx0etUj10Erk8CRs8ZF0/7qUrsU+i/yupYM+VvBHjtrCUngNtG+Rgx
pg4peFN2tRBdyf3qYPY2QX+nQl1Ptq/nyUNNt5XVSAEvhOkVf1rlqp4vcMQj
nA3eW24W0/wpg/jEcLZ3TT3F7+Xg0nzi0aSxLDa9PxN3Tf/1/IizNr2PqQB+
746c1uOrkup9M/C0zZ4U3tto9X6CdmdHs40uClqv8TE8LuNMYEuF+r5emDT5
agI7tJr6nwTi2pqNnC92YhO9WR7YmGmstp6fQPXmxejc9iJ6pGGl+v5T/Nnj
zc8UNxaH1Jfv0HauRcqXH3E0XzvhvOmzBl7dVqHGJzAh60p+imtXytcoYdNg
V1a/gdpsysdAXOKNFZvb/Y7kWw7ydxlv8fydDk4E0EGQiq23sb+Qxhch1vLn
7nu0oobeFyTF89Wnh88raVXfn4SH+k/vJmwIp/WeEjclyd7O12ij+jcZBt/L
jrr4porq3aSgwesp+SCpVNs7PC/ZMycgUKjW+4BLL3PRSCP1/YfF4PIh/tou
fTVeTMGkd7t6OrT7HekPZ4D3xIcmWn/K6TyPAJ3E+gb4H5fGbyU8v5r7bIJx
C+3f8FA7+V/rsbUVaEP4Lxgd/MfyuX4l1cupMO3rnn1PzrM4VB8Pv3w7+/ac
K6bnw8cNkYO9O8U2qvvBMOP08NDg823q+8vwed6U4S83y6ieSYHji7pb//pc
Tfn2n9C3O9/cYGMctR8F7hjbd25kd00OCaBhYBbYdNvzz091vxWb5ypUM7XC
gcRfIXp2PzjKk6Ok9yHkw4pxRxx2X8igfEQh1Epi9H2Xq6heXoXZ5YuqNQ83
UzytwlDreVa33DvR+pqHp2KKRy00+F9P1+EX1bWEqUosPFAiKqIgKkiwt2CU
2dgroog1JiIqaBJ7CVZsgA0BFSE2wN4QBRRpsxQRFKXXpexStsAuu/QOj+ed
8/6A5cfuvWfOzNemkfRe8RA3WLwSnROIHyxFeUB2mqSqArn6XoJeRjO9Y+fl
kR9WCjrumQkmY9qYvxpLLd2XNXkpWX3Drc1DtZ9vlyGnp8kFN/N+eyM9wwlv
y4EhjmFb1a6xPCwBJkwa91t+dxPpaXvvm5U9Afq3mF9aBEmdU80/djP+uwLl
Hv7qq72yiM8rhqR7f0+x/UfK8hcgeUrQHsdmxpfWoN+ar1oBlhpUv76h/yqz
iB0d2XTeynBqZsDDZ9srSM+RBFd2TE8PTpGxvFpMWhJ8eZtQjc/pvQQY/0i6
dN9IBekfkmFJypSLq0dH0b4BJQaXnXjzYx9NPvFRaKcdOOpnfRHdp3I0D+mM
hT5d5OeSwv7rA3tfaOY3rIK/Fy3Lzm1rIT+pHH3Vdbas42vxufy0CJgXPf7c
gxNCIP4I3S+4+s2cyvrravTYvWOn9usW5PIOy+DehaqfvvzVRfWqGnOt+X/L
R3Yi529QQlJc4OwHU7V4lNcH2pWdg/YvZedHBnphi7tt77ZQ/pQIZ7r8HqRY
3kD3cwnu8FX2VJsqkNP7CyA9P9T8yr0u0rPKUZzWFRi7opHyAxXw+Y6FgYeD
Go+7fyvh2+aw9sjRfXm03wLeJQ3b1b22lvkhIXiB4VRrXSl0fv89UlDH945e
RkwIzZsCcOvu+c0C6ygPuPd8jnjSOiFOnfympbgs+K7ZrJVS4tPzcVSFof3w
AwLyI0Tj/Oetu71O1ZI+SYHCX58fk23ty6f9E3hA0XnfxrGQ8A0x1iQ75bg6
qfHJD4qbfFML7S+1oQmXtwLH/gwE+bla0rNkY2jJ2Al3es8h931zYNvi40Jz
WSbofX8BX2HycInrBat6ynuIwJtnepRL+BLKn80AXr8+k6akp5KeMAOtdhYd
Ns+vJ3+aCP2z7xuVb26mPM1asFzW/+gKrx6w+/7AP4C3muSQ14Wz5Kcrg+Zl
wy5LfQQsPx7sZ3i9H65TTfW4Gra0bH92+p8mmu/LcJOdUPRJtwG5+akE6k4X
tnrqlgGnpyiBE9oeXcGN9XS/CFG8Tx6p9VxO/LQYUbV6eEsVqzdVcN8qxijw
UQPll97FrLTy/De1n2Di9/OTjd577S8PuhwGezn/Cq65itLOuxp8bt9BGC4f
at+OwlyUfn/cbzDN86Cxze48tr8Ai28lXaz/f78lwoDlsZ7GexrI/14Iaq3i
U3bFTL8ixKzWuGud81WEbylR+MEhM3SlGp/0yajKefp5xLanxBdX9J7nKSFL
mhqQm/fk+OJ12ARjAdsPoUJn3TmTXNa3YCSnt4bz2xeG+iTnMv0VjLXuUdxc
3o9H+2D+1+/Nbr/M8qJz8ZRYdsquSEL65FQIv87T95kdSnhkKmx7f+NsmVsm
5c9IQPvDMosk3zby6xXi1cFHrvW1LSI+pBIw0G2wLKqF4cs49e2wrm2VPcR3
V4AC5ENsItqpnyvBIff2+n6Usfw/Cfi4hcQ/9eskvYcY1Cc8K83YrGL5RxDw
99u+Jv+q2L4MEDTwbFJ3V1H/G48aa2xKjZ0lhH/IwfS46rBK0c78duiuf01t
wkMJ5RlKYNRWraCkYU3kT1SAhekXswzXdsqnewNRI4e8XrFERHq8SGiaNSxJ
LV5I79Mr0J5tLvlDlEafLwGTieH9I7rbiD9Swttc03KL3u9L/B023z5v7qzR
SPhdOfjzd486K24k/W01+ro6uSdcaCU9mQIDDYPVIV2Nz+G5QlDNXLgubZAG
j/QMKPfsObXINx3HcflBGCuM1dzaOzcRnonFLzsmy5c8pf0dYdD3xMFNP28r
Z34ecP8p89YAVRL5GRJxxPUox+v6cpa/jj/b5kX3zGyi/BYljna0s1hsqEX+
fhnuW7ig/0c9dcqPrMKUEpcXj9e3En5YCmrDHVZJzerIj/cZdT5ffQOW71ne
M8yPrTitEdBMfLAEBux8eNZCq578sXK40SCzn97cxPgv2KeeVDDP8whyfigJ
jMxNXHe7pIHqSyb66g1KTW3JoPupFKxtDNrezJSQPk2MzcIlwW9+UOd+nq5i
zLFY0T5tXhP5scSYm2txw6Gzkd0veEXl6nc+nU/5DXnga29SUzCb/b9l2Hji
4o97O1SEd2Shhd2UX4+myXEyx89Ch1bl+flB2VS/qsAb9z5ICOyg86SE3A39
Bs28qc6jeRnm6HQOuOJYT3ryKrBa+NlVOa6R/EJVuOnXW94b9XpIHxMF/hNM
x84RFiKXzyXFqQ+9pikFbZTXFwQ7jxn8MmNYJcPHMO38s3ATuYzlq8DAvm6/
/Xaih/BJGaRPMDbSmdVG7/tTyJgcUZuueA9cf1aFcXFf1oX3byN9jRK21DYv
rtjezvzqkNM5bG1TjhrLY4IbT2/UzPVpgn0cng5nX30u7m+cR/xhGd4znf7o
vnUrcvseFKj3b2hk+vFumk+VMDTqnTihqJP0t0JMiwkQjPVoZ3gbDHhYLZ84
V4vH6eVq4XVH1YxPeppU7xDd5hmuGGcaT/U5F9qu7XJ5O0BFedPhUOiUEH3w
RTnpSz7iASe//whD6xk/jeZT+9V83tmIGdx+GWgdfElqVlNA850UhJf9EkZ2
NRN+mYkuBbPvql+JJL1RNnr9UlS3zqua9vV8xgOG7usXOX4Eej4440zGsfGP
igh/k8EhfZFN4lmWz1ALyWNGXl3Qos7jnncRWF+cuvZrcg2bF2CIwRejuq4O
4qcVsCZLP/4H00rqJ5U4JszYy6f3fSA/JHaaK54d9Zez+QtORhgYnXNSgBHn
78WgC2pfPczakZsHEZKPTVBXPpHR9xWibGL7obGnGhn/gY2VUY6LFghYXgeM
T2w9uXO7Crg8+FTMWOn5w1XdV8j5wRUw0Dd0wnJLNdIPl+HYuqc/JfpVUT2u
wcUt015OVNPkEx8Eyd5nWxd9qAc3bt8L+PRINuonfiS8QAbl3h156/d3kb+w
d657pzbq/QJ1HuUFQuhpbZ3Qvg3A6S1Tscyq9vHWafVMj44/vhjofPyYiM5L
PFw7dL9/REAOzQcFsGmk0by4YBlw+7Vy0PdNP4GwqAw5P3Fvv25tF/R2ozaf
89+UwoCDesGbpteC2vcHeAKCeAN+1btTTe9vMUyeGzpo7IoS4vsFqFvr/1o3
WER6URH8O7dviiS1js5TBm4V5VTfvh/C/P/gGz/0nqFPJvNvwbja37e+u1tG
908uNEVGDj3boyL9bw2OzNKSG5zqQa7fEeBc6/JR5/fXsH4FtvU+HU8V+z1y
UOdSxLRjE1tY/ieGmywaLK14gJx+qbefOTF/jHv8PNJfCHF6+S77X6uUyOFX
qXDeYnPP+6Jo5i/CvBTDuz9HZKMel8eMNg4GI9PPZjA9EOhHnOH9aZZG95EA
XVw9PJJt2mh+voWKE1o8py1MXy2DcdYOAZr92wjf4eOIn588+0v/G9Obgg1P
kVH1RMD6L5yZ+PTE7EAV8aOZMOTopCk749i+r3ycdqZjqMm2Ssanwfmx25M2
jfsEnN61BNSkvol3591i+XC4/w+DzdMnq5h/G81WGf9uFd5J+VGFsEpDR3eN
Pst3LEA995KAdmR5JKWoSPMeOHixnPhZKWTNbVbtamgALl+lGA9fvbLBWFNE
+c6VKH52P1ivnyaf9sVgyIplmtMf1bH8SvR6qf18t0cJ4VlFOHRotFQ2LJLw
1kpIPnr1m68n65flcGSTm6XRMjUe6Y+xZmcAWHiVsP1fsHzruGhzi3Lyk+VB
kv+hEQLHOvJvl+OzL9EuN4K6WL4l9nkyMOVAb32h/HE0fnV+b11EI+VbF0AW
/6HrtrtMr5QIOq49U0LfFZB/RwFtF3/Xf6/QIr9jKYbsjc1uyu8k/UoJxHts
/Oi1Wwxc3kcBrDJbuv9aSwnVu0y0HPjF5tUYJepx+53g5+Dz5etTy0mfIAdD
3z0mD/LaGP8BQW7O4TZBWYTvZUK4w7cXXfqpNF+KILIny8zpYDvVuwJcOsL/
2Ns8IX2/GuR9rvxi/0GD9mOlwxiV7cKrf5Uzvzbm+sXY/WPdh/QPCriuV3rR
67kaj/P/5+Djc+7+8wqZH0oEA66H5Y+yLWL6fvC1SxNp760jvZoc3FKdyoJS
moE7D09AK+7TmVERjTQf1sJwIepaH1EnPYIMflmZ4rBrM7vfHoLLmua3hce8
iS+4hIUjipu9LBTEp3/CHreqrh1Lv1K/VIvl9y13HC9k+/FK0Nqy8FRZZTXl
gctReK51RPxqLT7tH4IxiSWpE092kL5ZgbvjjgxSaGjzObyOj359ktYvrqoh
fOoBxN3ek1rakwRzubxOHPziSWahYSfpiYVos3tfeubeata/Y5PnLHnPvS4k
Py2sPeNxcnFuNek7v2LR+tW7EyoS2H42SNkxLXTBniRs5fJcQX7LfPGRA3I2
L8LRq5o3/WfWMfwKBB/2TGt2aiP/UjFWj35/yqlJRXyaAGsHLri38RPzd8vA
WqQuPfGBzSflGBBxYYMgvI78fJV4Tsm/fKSii/JAizHZUrKi+XEj8z/C8Tk3
Jo3SrQBuH6cAkw009WML2D6vWug4fei02rw6yn9UYsn2hGyrklbi15TY8HBo
Q5+TLaQvEcDLp5M9+lwtojygCog12B9eVlxDeGMuqi9cbh4b3014XhR+nnUT
/OOKkNNz5MChjHLT9ily0qNWgIlCfYvL6+ekv6nAbufgLiNXlqcrg0GXHhwp
7Whifkw8Y7+wcqVrFxJfAFfyUifveKXOI30UDHk82WLRJSnLv8Ww0rFv+4nk
dH8XwqAK2Xy7WhX1n5nY2rzu+KQtWZT/kIbHrsyuhFXs9xHjrD2X8m9bNVHe
mRgCJxe3Fc9tJ79GLoStMDcemC8GOTe/oqf7gdHzZXHs/oeTJb/0K58ho3lH
AGqi5Hhn7Wbg8K6b+HzdUQff5yx/rrf+nisrfDdWSn6gPHS8s6sodlQNcvxn
LY5S7J8q9dWmPEsR/H1nTLW5jgrUvg+o7mD3w9AJ0qRIhgfB5kLJkYzD9cD1
T8W48tfNg5Nj6tj+LfT+FnP07oVX9P5ngO3g1EuN9fX0vpXiy47w6tBjTXQe
hciLqrU5vLoNX3J5vZjRnS/avcqP8l9775F1A21d/2T7UbKhz959Bg/tlLS/
SQI/3VxnPN5AQvkZ2eAn09dJ/KRieT1o+doxeO0/bUwvgvkuIcZPrBpZni6m
pQ9LfO4tpn6oAmssJ5yOPcj8ROWwmB8d/fZvJflh84Cft2NXdN8HxM9mwEu9
+skbS1NJD1GCFReW618LZ3rDati/fkugYz9NHnc+c3DQX7MKlcsUpB+Rw4XB
C87q6LF6XQlPi8bv5q3opvogQtvQOe6NMc3EHwgh7dvantKDFYTfVUBo7fH3
eh6d1I/74J8VGyp0z6fRPpJaGLnnU4tJH20ep5/5CI93aJy0jckFFbfPEvSf
r3w97kQa4VW9fanYqrkmQU7zeDF6368rU22RsPxFaOz5d3ZK731A+wZh0fiT
Yfze/5fLKy0E230Vq3z+VbG8NIjuMynK854Gj/ZTwT3XKRmjb9bRfCiDJ998
ulOvqvNIT416jn5V5SNa2b5AiNG0R42VzUxPDLYj1P4I6awkfkQE1WF2L4LW
KKGA4w8w5Ezmy6WSEuK3i7Cra2ba1gvVhCeIsOPgbyaXDldSfyzHgo6lncvX
NJBeIRBDfzCasjEln+U1w5x3C3NSLrTDZC5fAp3N5ec6IpleogYNP5hU37FR
4xPfCRvwy70Z5kryI+ShwOp2T0y5kPScQuxuKez4UthG+2grwGDmAIe9U6so
zy8bYrI2xz/STyI8swA6Uh95psY2sH0s6Gb0rc7x33+A44sqIUo//aZgfx3x
mVIU14cYXXnUQvNNMfg0LnfOOCYmf0/v+/omwiU1UMb4RfByvvthlo6MzpMS
5s3y3fYkpgO4/TMfcN8doUNDUQHxqXm4Z9mb46YnW0nfJEahXcddwcVams96
z5+hd9VXsYzmUQXkJ/4xefMelgcswQzjwV/1qgupfheD96ab//kfrkB5KeC3
9XefGb31h8PvMiFn0YKnp36MJz5LAGsW5AccXigmP38G8jMtTgtHP6HfUwlj
li/ZZPpHXx739yuBvyU7dZ1RI+F5pbDPJSfC7L6U9E/laBrlljZrUDPtv8yF
nYb+HeJwMekZiuFx8YAOnqSZ/Hi5aNUS9/iDfR3TH2CCu+3wJbOKCS95gP5H
XQfESNMpr6IcNDYfFTlaNoI3l1cPzRH+65wcKikfpAxeREd7ZWTKiI8pwfiP
z/Q2SOWsfqJ1aLhoxh+VGMr5YQBu+8z2TMoBTy6fEYa8u+YsXJ1AeE823tNv
vTZiVSryuXoASv9FBbrOVcT/935uZcvNb9fKGL8BP+4zCDE7r0F5z9nociXL
qEqvifk14JRn64xda3poP6AEmye06xs3NrB+CH31fc4E8irZfg/Y+dj8uHNQ
PeUVSdBt9rbGaf17iL+Rw1q7Q29VDi2Enyfg4zNR7t9+S6N5Px/tpc8jf9LJ
p/u4FudUTo8bZKDNJ/0nhPY5ONQh5wbVo1jUPfpKYlpahRncvmW0ue5qmOgk
Ra4+KsEqMO6UZbgmj95/9LBpv3njSinrh7CC/4tZdYgW8X2FYJP9yMB/fwP8
F8meGPY=
              "]]}, "Charting`Private`Tag#1"]}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{-1., 1.}, {-3.2944104986090066`, 
             3.286907061911864}}, "Frame" -> {{False, False}, {False, False}},
             "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
            "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
            GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               PointSize[0.004583333333333334], 
               RGBColor[0.24, 0.6, 0.8], 
               AbsoluteThickness[2]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{-1., 1.}, {-3.2944104986090066`, 
            3.286907061911864}}, "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              PointSize[0.004583333333333334], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}],
      Selectable->False]},
    Annotation[{{
       Annotation[{
         Directive[
          PointSize[0.004583333333333334], 
          RGBColor[0.24, 0.6, 0.8], 
          AbsoluteThickness[2]], 
         Point[CompressedData["
1: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
wDotynckgeEPx1edKn4i4WNU2BjDWxDZVUX7wwLYMG6zYv3HBprPUtH5FffF
u1NyJPVlNOT2KGk5NLYCypn9yoNCjq2jsEcpxUPt+SDDJtK7Xot9jOiHYIlv
zZ/LB2JoPHgMD7y2lk7LraT9ORm+u256PcujifafCyHp2IQ+RU01tB8ah4+1
n61iu8VRe06FJbaFRSV7iml8zEe7uuqXKPhJ9YkKOLR0T8IYSROtn6SgWXtR
Fclmscm8U3v9+SrFdt+ZGiR6eilGDZvS5PCklt6fchKvD9N5ErS9QD2/C3sF
Fi+zb0fT+0gCcKpuQmJOTTatTwrR+2Km2HRIKY1XArxrJL7ZZVwV0vswoSrr
P7OyKyJ1/xNHJj6t+XNYff9TAupvnV7/h5upnh+F1VfSk6oNiyCVPA+E9bkt
EVvz1fwtyF19JeIoFu0ntNcBxzFMY30YnV8MxJXxy2s47gKk/XDMH7DziF59
OOUjQ2Gq3sCohb9j1fU1xnC3WGyfHwXa5H5MtNt7wCZAO5zevyPBkE08bnO/
RoovxehlNyEgT1VB1xMOxS2/L8cV5YAfub8Epw7gGI65Gkj5q0TYEhh9/OGh
NJqPs/FTT/8P9w/Fqvl89HkbPPX18gqa30vR62up1rSmaqT8MYauE4/muX+k
/T0+rDYrmtJ9cy0QvUgq+E3aO6ZA8UHd30BTh2WHFzxR4yMx/HDUnDtzejnt
fwsxOibm9LWDGhzSPy+BoZpj9jexK4Dqz2Gjy5j9NQF/Kb7Iw+DUXqxlnbnq
+WqwKSxMXSnkAe2fQ3254eWIlQl0Xr0YQhZcbtl2rpXiBwGG7W2t26VqofM7
Eug8511ZL/9m2t/gwrkZpo/OZ1TR/pcCxplpXywa20T796VouTVwU21ODe3P
tdep51PMDM820vwphZ9Pf6T3m9eknl+E2cLHWStOVavvz4P1nzUuTqwvASLv
luP957ZJ8q8aHIqnYEHh9nXTblcC5ffg8ZHGsoV/BPT+HxFefpkT63qjjt63
KUOTuyed+hdV0vqiFANmDNn/Q9iqnj9Go0L/abK4fKpXKsDpSRbjdg9vQaIH
50EMe96skjAWm9xnlAtGZ31Hbe38jb5PLhZ8nTJkRUstxc9cPGaR27QkJZ7e
LyXBmv7Hxwdo1tN+axJugcjH5wMzKF/OgbeH12om66Ujqa/a48TNM9dEusWU
/ylDNDE0OPpEi0PnIWB3FZb9vtoIJH7GoYv+JZHwj4DyQ5YoeL/5rWs3fzUf
D9Wp3j6g+5fy+TLEaew3H1pa6XyNFIJaD58W72qi/eQS/HNi69MTx5sov5WO
gr7HfQ+eyKZ8YySYlHvezzCOp/MTYpCaTNrmuq6Exl8hpn62mx0ENZS/44JP
8eKvlv5VFK+XYLx735cL3jXS/CTBQSe/bz7v3UD5FTl494s38h+ixaZ6BCiq
HpL286OA9mPa89nq5ybaS7U5hE8XQcRth8Vv4lW0nuCiXt5Aa1UnIT2/PNze
ZVvC2Ql8ej8bFzUmzfvxs6ISyf0aHLBcU+67vpaLdF4FunE8O41PyqHzAlz0
Ss/78EmQhnQeFGW6Nief/uChFZnPhGWLv7mMTVUCqQd+Yxov689iG4F6HgLz
7WaVDFkso+tJwxPFQ3X8nblI75cFw3EXUqzaImn/igt1Fg3vT++Wgojc94Ue
78+MKoyvRFIvKHDNz4Om8ROraHzLx/yIfPGg/rm0flSC3pXucxtdtKn+RgG7
5sU6TypVx18Zejh/UG46pMkhfGkZ1t6z2V/Rp47GxzwsfhM7ZNcvAY1fxVhu
HpTu0VZA468Ue+71OzlS2ULrZS44vr8l/WzwF/YyfEYMFjqOfsp3llO9XCEK
UiZ9ztcVqe8LhAC/4p+DD8gp3pGh56ZH5y+KqpHoh6VYYsnvdGZgPY2Hctj4
3HqIzvBqIPiBi+ez3vSxvcri0PtnUTMtoyzoe536vlR8nXJk4ZcRFbTfLgXL
wZMH65ZWqfEvXu2yMaFSoUTiz3GQ3qDtsqdASu8feIC3z/Zdszb/NxK+NwT+
BUf4brJIo/fvcMG3anTm6B5VkEoKDrjzvvxEVB91PM5Ajs89neIMP3Ri9vc7
jFgr+lR+O019nxC67TPWu9G7RK0HxXcb3wjcNRvwGLmvGKu7lqYNxUwk81Cp
8M91yaDWB5VA/E8BT/NkFv1cK+l9K+J2f9oZNFVbrb/gQvCo7h7WozTYxP+d
YINP28lZ4/4h4T+kKNCddvSSazWdZy/D020zhVXbupHXH8pDh/qVhw+mCvAR
qSfw2a/ed1NzNTmUf8DY9BWt123SaX0vhvtre/j2TGqg9ZgcPms6eVuvV+vn
hOj249fZnmsbaH0sgprYfoYvbrLY1J5grfyI3uDBCspnCGH/+dU7LKRqvrkU
n0hsvpodr0Wqj8HanQWpG/wrKT5IRI8R5Wsnfyyg+hIuBHL32p66Wk37sVwY
O3vRlsBxteBK7oeDb9KRl9rWSun9OXycZzIkXLq7herJ89Bw575NF8bW4Ccy
T4V2N452Dm5MU+uhcevA+OcWQ9R6uSS4s6XJ+ld7XUrqwSzU6LNxbld/Ib1P
TwADhS82yA7mANFzKWBn3fxlwVvqqV5LjubsQr5uQTlSPR1M2TZtwCUTKZB5
FiW+6PnVuk9ZG9WvCXCB1GcNR7uC8l9lsH/PJrs3lm00fkjhRB2UrN5aQd9P
jAk91n2aulGN71WoP+eXp+Ibi0PvDwMfjxEfWv/VUf1RFp7UuDza7VAFxedx
YLT7vrnx0etUj10Erk8CRs8ZF0/7qUrsU+i/yupYM+VvBHjtrCUngNtG+Rgx
pg4peFN2tRBdyf3qYPY2QX+nQl1Ptq/nyUNNt5XVSAEvhOkVf1rlqp4vcMQj
nA3eW24W0/wpg/jEcLZ3TT3F7+Xg0nzi0aSxLDa9PxN3Tf/1/IizNr2PqQB+
746c1uOrkup9M/C0zZ4U3tto9X6CdmdHs40uClqv8TE8LuNMYEuF+r5emDT5
agI7tJr6nwTi2pqNnC92YhO9WR7YmGmstp6fQPXmxejc9iJ6pGGl+v5T/Nnj
zc8UNxaH1Jfv0HauRcqXH3E0XzvhvOmzBl7dVqHGJzAh60p+imtXytcoYdNg
V1a/gdpsysdAXOKNFZvb/Y7kWw7ydxlv8fydDk4E0EGQiq23sb+Qxhch1vLn
7nu0oobeFyTF89Wnh88raVXfn4SH+k/vJmwIp/WeEjclyd7O12ij+jcZBt/L
jrr4porq3aSgwesp+SCpVNs7PC/ZMycgUKjW+4BLL3PRSCP1/YfF4PIh/tou
fTVeTMGkd7t6OrT7HekPZ4D3xIcmWn/K6TyPAJ3E+gb4H5fGbyU8v5r7bIJx
C+3f8FA7+V/rsbUVaEP4Lxgd/MfyuX4l1cupMO3rnn1PzrM4VB8Pv3w7+/ac
K6bnw8cNkYO9O8U2qvvBMOP08NDg823q+8vwed6U4S83y6ieSYHji7pb//pc
Tfn2n9C3O9/cYGMctR8F7hjbd25kd00OCaBhYBbYdNvzz091vxWb5ypUM7XC
gcRfIXp2PzjKk6Ok9yHkw4pxRxx2X8igfEQh1Epi9H2Xq6heXoXZ5YuqNQ83
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
7Whifkw8Y7+wcqVrFxJfAFfyUifveKXOI30UDHk82WLRJSnLv8Ww0rFv+4nk
dH8XwqAK2Xy7WhX1n5nY2rzu+KQtWZT/kIbHrsyuhFXs9xHjrD2X8m9bNVHe
mRgCJxe3Fc9tJ79GLoStMDcemC8GOTe/oqf7gdHzZXHs/oeTJb/0K58ho3lH
AGqi5Hhn7Wbg8K6b+HzdUQff5yx/rrf+nisrfDdWSn6gPHS8s6sodlQNcvxn
LY5S7J8q9dWmPEsR/H1nTLW5jgrUvg+o7mD3w9AJ0qRIhgfB5kLJkYzD9cD1
T8W48tfNg5Nj6tj+LfT+FnP07oVX9P5ngO3g1EuN9fX0vpXiy47w6tBjTXQe
hciLqrU5vLoNX3J5vZjRnS/avcqP8l9775F1A21d/2T7UbKhz959Bg/tlLS/
SQI/3VxnPN5AQvkZ2eAn09dJ/KRieT1o+doxeO0/bUwvgvkuIcZPrBpZni6m
pQ9LfO4tpn6oAmssJ5yOPcj8ROWwmB8d/fZvJflh84Cft2NXdN8HxM9mwEu9
+skbS1NJD1GCFReW618LZ3rDati/fkugYz9NHnc+c3DQX7MKlcsUpB+Rw4XB
C87q6LF6XQlPi8bv5q3opvogQtvQOe6NMc3EHwgh7dvantKDFYTfVUBo7fH3
eh6d1I/74J8VGyp0z6fRPpJaGLnnU4tJH20ep5/5CI93aJy0jckFFbfPEvSf
r3w97kQa4VW9fanYqrkmQU7zeDF6368rU22RsPxFaOz5d3ZK731A+wZh0fiT
Yfze/5fLKy0E230Vq3z+VbG8NIjuMynK854Gj/ZTwT3XKRmjb9bRfCiDJ998
ulOvqvNIT416jn5V5SNa2b5AiNG0R42VzUxPDLYj1P4I6awkfkQE1WF2L4LW
KKGA4w8w5Ezmy6WSEuK3i7Cra2ba1gvVhCeIsOPgbyaXDldSfyzHgo6lncvX
NJBeIRBDfzCasjEln+U1w5x3C3NSLrTDZC5fAp3N5ec6IpleogYNP5hU37FR
4xPfCRvwy70Z5kryI+ShwOp2T0y5kPScQuxuKez4UthG+2grwGDmAIe9U6so
zy8bYrI2xz/STyI8swA6Uh95psY2sH0s6Gb0rc7x33+A44sqIUo//aZgfx3x
mVIU14cYXXnUQvNNMfg0LnfOOCYmf0/v+/omwiU1UMb4RfByvvthlo6MzpMS
5s3y3fYkpgO4/TMfcN8doUNDUQHxqXm4Z9mb46YnW0nfJEahXcddwcVams96
z5+hd9VXsYzmUQXkJ/4xefMelgcswQzjwV/1qgupfheD96ab//kfrkB5KeC3
9XefGb31h8PvMiFn0YKnp36MJz5LAGsW5AccXigmP38G8jMtTgtHP6HfUwlj
li/ZZPpHXx739yuBvyU7dZ1RI+F5pbDPJSfC7L6U9E/laBrlljZrUDPtv8yF
nYb+HeJwMekZiuFx8YAOnqSZ/Hi5aNUS9/iDfR3TH2CCu+3wJbOKCS95gP5H
XQfESNMpr6IcNDYfFTlaNoI3l1cPzRH+65wcKikfpAxeREd7ZWTKiI8pwfiP
z/Q2SOWsfqJ1aLhoxh+VGMr5YQBu+8z2TMoBTy6fEYa8u+YsXJ1AeE823tNv
vTZiVSryuXoASv9FBbrOVcT/935uZcvNb9fKGL8BP+4zCDE7r0F5z9nociXL
qEqvifk14JRn64xda3poP6AEmye06xs3NrB+CH31fc4E8irZfg/Y+dj8uHNQ
PeUVSdBt9rbGaf17iL+Rw1q7Q29VDi2Enyfg4zNR7t9+S6N5Px/tpc8jf9LJ
p/u4FudUTo8bZKDNJ/0nhPY5ONQh5wbVo1jUPfpKYlpahRncvmW0ue5qmOgk
Ra4+KsEqMO6UZbgmj95/9LBpv3njSinrh7CC/4tZdYgW8X2FYJP9yMB/fwP8
F8meGPY=
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
      "LayoutOptions" -> <|
       "PanelPlotLayout" -> <||>, 
        "PlotRange" -> {{-1., 1.}, {-3.2944104986090066`, 3.286907061911864}},
         "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
        "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
        "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[0.004583333333333334], 
           RGBColor[0.24, 0.6, 0.8], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.24, 0.6, 0.8], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.95, 0.627, 0.1425], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.455, 0.7, 0.21], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.578, 0.51, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.4, 0.64, 1.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1., 0.75, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.8, 0.4, 0.76], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.637, 0.65, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-1., 1.}, {-3.2944104986090066`, 3.286907061911864}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.9577054522661057`*^9, 3.957705487790368*^9}, {
   3.9580473456574507`*^9, 3.9580473514344997`*^9}, 3.9580475543719473`*^9},
 CellLabel->
  "Out[2781]=",ExpressionUUID->"2bcf99b7-df34-4e43-84a6-41b2a64f2d24"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nlm", " ", "=", " ", 
   RowBox[{"NonlinearModelFit", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"fakeData", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "50"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"m", " ", "x"}], " ", "+", " ", "b"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"m", ",", "b"}], "}"}], ",", "\[IndentingNewLine]", "x"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"nlm", "[", "\"\<ParameterEstimates\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Mean", "[", "#", "]"}], ",", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "-", 
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], "&"}], "/@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", "\"\<ConfidenceInterval\>\"", "]"}], "&"}], "/@", 
     RowBox[{"Normal", "[", 
      RowBox[{"nlm", "[", "\"\<ParameterEstimates\>\"", "]"}], "]"}]}], 
    ")"}]}], "//", "TableForm"}]}], "Input",
 CellChangeTimes->{{3.9577054907507143`*^9, 3.957705545888958*^9}, {
  3.958047425335434*^9, 3.95804743489939*^9}, {3.95804755715018*^9, 
  3.9580475572091618`*^9}},
 CellLabel->
  "In[2782]:=",ExpressionUUID->"b8186d44-8db5-4d71-9ba8-ff9b54c65dab"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "Parameter" -> $CellContext`m, "BestFitValue" -> 2.1163920092262196`, 
        "StandardError" -> 0.11654606996003468`, "TStatistic" -> 
        18.159273924482918`, "PValue" -> 3.8365312559751357`*^-23, 
        "ConfidenceInterval" -> {1.8820604301000685`, 
         2.3507235883523707`}|>, <|
       "Parameter" -> $CellContext`b, "BestFitValue" -> -0.02780481051024073, 
        "StandardError" -> 0.06725948116019821, 
        "TStatistic" -> -0.4133961492211843, "PValue" -> 0.6811575258475122, 
        "ConfidenceInterval" -> {-0.1630390611107074, 
         0.10742944009022595`}|>}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Parameter"} -> 
        1, {All, "BestFitValue"} -> 1, {All, "StandardError"} -> 
        1, {All, "TStatistic"} -> 1, {All, "PValue"} -> 
        1, {All, "ConfidenceInterval"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Parameter" -> TypeSystem`PackageScope`UnknownShape[False], 
            "BestFitValue" -> TypeSystem`PackageScope`AtomShape[60], 
            "StandardError" -> TypeSystem`PackageScope`AtomShape[60], 
            "TStatistic" -> TypeSystem`PackageScope`AtomShape[60], "PValue" -> 
            TypeSystem`PackageScope`AtomShape[60], "ConfidenceInterval" -> 
            TypeSystem`PackageScope`UnknownShape[False]|>], 
          DirectedInfinity[1], 6, {All}]], 2, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Parameter", "BestFitValue", "StandardError", "TStatistic", "PValue", 
         "ConfidenceInterval"}, {TypeSystem`AnyType, 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Vector[
          TypeSystem`Atom[Real], 2]}], 2], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Parameter"} -> 
        1, {All, "BestFitValue"} -> 1, {All, "StandardError"} -> 
        1, {All, "TStatistic"} -> 1, {All, "PValue"} -> 
        1, {All, "ConfidenceInterval"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Parameter" -> TypeSystem`PackageScope`UnknownShape[False], 
            "BestFitValue" -> TypeSystem`PackageScope`AtomShape[60], 
            "StandardError" -> TypeSystem`PackageScope`AtomShape[60], 
            "TStatistic" -> TypeSystem`PackageScope`AtomShape[60], "PValue" -> 
            TypeSystem`PackageScope`AtomShape[60], "ConfidenceInterval" -> 
            TypeSystem`PackageScope`UnknownShape[False]|>], 
          DirectedInfinity[1], 6, {All}]], 2, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Parameter", "BestFitValue", "StandardError", "TStatistic", "PValue", 
         "ConfidenceInterval"}, {TypeSystem`AnyType, 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Vector[
          TypeSystem`Atom[Real], 2]}], 2], "Path" -> {}, "DisplayedRowCount" -> 
     2, "DisplayedColumnCount" -> 6, "DataRowCount" -> 2, "DataColumnCount" -> 
     6, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Parameter", 
                  Style[
                  "Parameter", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Parameter"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Parameter"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["BestFitValue", 
                  Style[
                  "BestFitValue", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "BestFitValue"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "BestFitValue"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["StandardError", 
                  Style[
                  "StandardError", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "StandardError"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "StandardError"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["TStatistic", 
                  Style[
                  "TStatistic", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "TStatistic"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "TStatistic"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PValue", 
                  Style[
                  "PValue", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "PValue"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "PValue"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ConfidenceInterval", 
                  Style[
                  "ConfidenceInterval", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "ConfidenceInterval"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "ConfidenceInterval"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["m", FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Parameter"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.11639"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["BestFitValue"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.116546"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardError"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["18.1593"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["TStatistic"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000000000000000000000383653"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["PValue"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{1.8820604301000685`, 2.3507235883523707`}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{1.8820604301000685`, 2.3507235883523707`}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["ConfidenceInterval"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ConfidenceInterval"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["b", FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Parameter"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.0278048"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["BestFitValue"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0672595"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["StandardError"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.413396"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["TStatistic"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.681158"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["PValue"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{-0.1630390611107074, 0.10742944009022595`}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{-0.1630390611107074, 0.10742944009022595`}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                    Key["ConfidenceInterval"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["ConfidenceInterval"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Dynamic[
     Replace[
      Replace[
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
       TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
          Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
          Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
           Blank[]]] :> (
         Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
          TypeSystem`NestedGrid`PackagePrivate`path$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
          TypeSystem`NestedGrid`PackagePrivate`pathType$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
          TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
         TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
          TypeSystem`NestedGrid`PackagePrivate`path$, 
           TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
        Spacer[10], Blank[] :> Spacer[10]}], 
      Pattern[TypeSystem`NestedGrid`PackagePrivate`bar, 
        Except[
         Alternatives[
          Blank[Spacer], ""]]] :> 
      TypeSystem`NestedGrid`PackagePrivate`makeFramedPathbar[
       TypeSystem`NestedGrid`PackagePrivate`bar]], 
     TrackedSymbols :> {
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{
       661.9607430555556, {37.530792236328125`, 43.262725830078125`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{
      661.9607430555556, {37.530792236328125`, 43.262725830078125`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.957705515401849*^9, 3.957705546225177*^9}, {
   3.958047347374441*^9, 3.958047352612014*^9}, {3.958047425656769*^9, 
   3.958047435268602*^9}, 3.958047558646572*^9},
 CellLabel->
  "Out[2783]=",ExpressionUUID->"82f08747-6b51-45e4-8be9-31d5ea1990eb"],

Cell[BoxData[
 TagBox[GridBox[{
    {"2.1163920092262196`", "0.4686631582523022`"},
    {
     RowBox[{"-", "0.027804810510240724`"}], "0.27046850120093335`"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.957705515401849*^9, 3.957705546225177*^9}, {
   3.958047347374441*^9, 3.958047352612014*^9}, {3.958047425656769*^9, 
   3.958047435268602*^9}, 3.958047558695182*^9},
 CellLabel->
  "Out[2784]//TableForm=",ExpressionUUID->"de9a2090-6e8c-4d44-bffa-\
6fb17718cad8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nlm", " ", "=", " ", 
   RowBox[{"NonlinearModelFit", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"fakeData", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "200"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"m", " ", "x"}], " ", "+", " ", "b"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"m", ",", "b"}], "}"}], ",", "\[IndentingNewLine]", "x"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"nlm", "[", "\"\<ParameterEstimates\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Mean", "[", "#", "]"}], ",", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "-", 
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], "&"}], "/@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", "\"\<ConfidenceInterval\>\"", "]"}], "&"}], "/@", 
     RowBox[{"Normal", "[", 
      RowBox[{"nlm", "[", "\"\<ParameterEstimates\>\"", "]"}], "]"}]}], 
    ")"}]}], "//", "TableForm"}]}], "Input",
 CellChangeTimes->{{3.9577055518691463`*^9, 3.9577055524292088`*^9}, {
  3.958047441636498*^9, 3.958047442017564*^9}, {3.958047561005336*^9, 
  3.958047561894916*^9}},
 CellLabel->
  "In[2785]:=",ExpressionUUID->"30d555f5-59d7-486e-a864-e75c2d3d34f9"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "Parameter" -> $CellContext`m, "BestFitValue" -> 1.9837583301244412`, 
        "StandardError" -> 0.06048217770505811, "TStatistic" -> 
        32.79905594335999, "PValue" -> 5.687438523314248*^-82, 
        "ConfidenceInterval" -> {1.8644864185924659`, 
         2.1030302416564166`}|>, <|
       "Parameter" -> $CellContext`b, "BestFitValue" -> -0.02108369575999045, 
        "StandardError" -> 0.035876937854591825`, 
        "TStatistic" -> -0.5876670925886164, "PValue" -> 0.557425373411324, 
        "ConfidenceInterval" -> {-0.09183364426049215, 
         0.04966625274051126}|>}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Parameter"} -> 
        1, {All, "BestFitValue"} -> 1, {All, "StandardError"} -> 
        1, {All, "TStatistic"} -> 1, {All, "PValue"} -> 
        1, {All, "ConfidenceInterval"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Parameter" -> TypeSystem`PackageScope`UnknownShape[False], 
            "BestFitValue" -> TypeSystem`PackageScope`AtomShape[60], 
            "StandardError" -> TypeSystem`PackageScope`AtomShape[60], 
            "TStatistic" -> TypeSystem`PackageScope`AtomShape[60], "PValue" -> 
            TypeSystem`PackageScope`AtomShape[60], "ConfidenceInterval" -> 
            TypeSystem`PackageScope`UnknownShape[False]|>], 
          DirectedInfinity[1], 6, {All}]], 2, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Parameter", "BestFitValue", "StandardError", "TStatistic", "PValue", 
         "ConfidenceInterval"}, {TypeSystem`AnyType, 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Vector[
          TypeSystem`Atom[Real], 2]}], 2], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Parameter"} -> 
        1, {All, "BestFitValue"} -> 1, {All, "StandardError"} -> 
        1, {All, "TStatistic"} -> 1, {All, "PValue"} -> 
        1, {All, "ConfidenceInterval"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Parameter" -> TypeSystem`PackageScope`UnknownShape[False], 
            "BestFitValue" -> TypeSystem`PackageScope`AtomShape[60], 
            "StandardError" -> TypeSystem`PackageScope`AtomShape[60], 
            "TStatistic" -> TypeSystem`PackageScope`AtomShape[60], "PValue" -> 
            TypeSystem`PackageScope`AtomShape[60], "ConfidenceInterval" -> 
            TypeSystem`PackageScope`UnknownShape[False]|>], 
          DirectedInfinity[1], 6, {All}]], 2, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Parameter", "BestFitValue", "StandardError", "TStatistic", "PValue", 
         "ConfidenceInterval"}, {TypeSystem`AnyType, 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Vector[
          TypeSystem`Atom[Real], 2]}], 2], "Path" -> {}, "DisplayedRowCount" -> 
     2, "DisplayedColumnCount" -> 6, "DataRowCount" -> 2, "DataColumnCount" -> 
     6, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Parameter", 
                  Style[
                  "Parameter", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Parameter"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Parameter"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["BestFitValue", 
                  Style[
                  "BestFitValue", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "BestFitValue"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "BestFitValue"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["StandardError", 
                  Style[
                  "StandardError", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "StandardError"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "StandardError"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["TStatistic", 
                  Style[
                  "TStatistic", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "TStatistic"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "TStatistic"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PValue", 
                  Style[
                  "PValue", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "PValue"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "PValue"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ConfidenceInterval", 
                  Style[
                  "ConfidenceInterval", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "ConfidenceInterval"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "ConfidenceInterval"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["m", FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Parameter"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.98376"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["BestFitValue"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0604822"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardError"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["32.7991"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["TStatistic"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
               "0.000000000000000000000000000000000000000000000000000000000000\
000000000000000000000568744"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["PValue"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{1.8644864185924659`, 2.1030302416564166`}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{1.8644864185924659`, 2.1030302416564166`}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["ConfidenceInterval"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ConfidenceInterval"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["b", FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Parameter"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.0210837"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["BestFitValue"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0358769"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["StandardError"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.587667"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["TStatistic"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.557425"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["PValue"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{-0.09183364426049215, 0.04966625274051126}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{-0.09183364426049215, 0.04966625274051126}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                    Key["ConfidenceInterval"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["ConfidenceInterval"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Dynamic[
     Replace[
      Replace[
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
       TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
          Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
          Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
           Blank[]]] :> (
         Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
          TypeSystem`NestedGrid`PackagePrivate`path$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
          TypeSystem`NestedGrid`PackagePrivate`pathType$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
          TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
         TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
          TypeSystem`NestedGrid`PackagePrivate`path$, 
           TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
        Spacer[10], Blank[] :> Spacer[10]}], 
      Pattern[TypeSystem`NestedGrid`PackagePrivate`bar, 
        Except[
         Alternatives[
          Blank[Spacer], ""]]] :> 
      TypeSystem`NestedGrid`PackagePrivate`makeFramedPathbar[
       TypeSystem`NestedGrid`PackagePrivate`bar]], 
     TrackedSymbols :> {
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{
       1086.3987430555562`, {37.530792236328125`, 43.262725830078125`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{
      1086.3987430555562`, {37.530792236328125`, 43.262725830078125`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.957705552815179*^9, 3.9580474425198927`*^9, 
  3.958047562335127*^9},
 CellLabel->
  "Out[2786]=",ExpressionUUID->"8ff4ddcd-e9aa-4ec1-aaeb-a6cd19fcee53"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1.9837583301244412`", "0.23854382306395072`"},
    {
     RowBox[{"-", "0.021083695759990445`"}], "0.1414998970010034`"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.957705552815179*^9, 3.9580474425198927`*^9, 
  3.9580475623860064`*^9},
 CellLabel->
  "Out[2787]//TableForm=",ExpressionUUID->"231335d2-ffa3-4dd3-a616-\
2fb79e739435"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nlm", " ", "=", " ", 
   RowBox[{"NonlinearModelFit", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"fakeData", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "400"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"m", " ", "x"}], " ", "+", " ", "b"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"m", ",", "b"}], "}"}], ",", "\[IndentingNewLine]", "x"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"nlm", "[", "\"\<ParameterEstimates\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Mean", "[", "#", "]"}], ",", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "-", 
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], "&"}], "/@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", "\"\<ConfidenceInterval\>\"", "]"}], "&"}], "/@", 
     RowBox[{"Normal", "[", 
      RowBox[{"nlm", "[", "\"\<ParameterEstimates\>\"", "]"}], "]"}]}], 
    ")"}]}], "//", "TableForm"}]}], "Input",
 CellChangeTimes->{{3.9577055565037193`*^9, 3.9577055575282593`*^9}, {
  3.9580474446792173`*^9, 3.958047444984068*^9}, {3.958047564879072*^9, 
  3.958047565144803*^9}},
 CellLabel->
  "In[2788]:=",ExpressionUUID->"3dc88987-f81d-4e52-b53b-4620452c94f7"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "Parameter" -> $CellContext`m, "BestFitValue" -> 2.0162835204286296`, 
        "StandardError" -> 0.04247015986740888, "TStatistic" -> 
        47.47529857960112, "PValue" -> 5.3158862624999264`*^-166, 
        "ConfidenceInterval" -> {1.9327896356392478`, 2.099777405218011}|>, <|
       "Parameter" -> $CellContext`b, "BestFitValue" -> 0.028462342827527506`,
         "StandardError" -> 0.024559505851534175`, "TStatistic" -> 
        1.158913497673225, "PValue" -> 0.24718630489489646`, 
        "ConfidenceInterval" -> {-0.019820229181948833`, 
         0.07674491483700385}|>}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Parameter"} -> 
        1, {All, "BestFitValue"} -> 1, {All, "StandardError"} -> 
        1, {All, "TStatistic"} -> 1, {All, "PValue"} -> 
        1, {All, "ConfidenceInterval"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Parameter" -> TypeSystem`PackageScope`UnknownShape[False], 
            "BestFitValue" -> TypeSystem`PackageScope`AtomShape[60], 
            "StandardError" -> TypeSystem`PackageScope`AtomShape[60], 
            "TStatistic" -> TypeSystem`PackageScope`AtomShape[60], "PValue" -> 
            TypeSystem`PackageScope`AtomShape[60], "ConfidenceInterval" -> 
            TypeSystem`PackageScope`UnknownShape[False]|>], 
          DirectedInfinity[1], 6, {All}]], 2, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Parameter", "BestFitValue", "StandardError", "TStatistic", "PValue", 
         "ConfidenceInterval"}, {TypeSystem`AnyType, 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Vector[
          TypeSystem`Atom[Real], 2]}], 2], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Parameter"} -> 
        1, {All, "BestFitValue"} -> 1, {All, "StandardError"} -> 
        1, {All, "TStatistic"} -> 1, {All, "PValue"} -> 
        1, {All, "ConfidenceInterval"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Parameter" -> TypeSystem`PackageScope`UnknownShape[False], 
            "BestFitValue" -> TypeSystem`PackageScope`AtomShape[60], 
            "StandardError" -> TypeSystem`PackageScope`AtomShape[60], 
            "TStatistic" -> TypeSystem`PackageScope`AtomShape[60], "PValue" -> 
            TypeSystem`PackageScope`AtomShape[60], "ConfidenceInterval" -> 
            TypeSystem`PackageScope`UnknownShape[False]|>], 
          DirectedInfinity[1], 6, {All}]], 2, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Parameter", "BestFitValue", "StandardError", "TStatistic", "PValue", 
         "ConfidenceInterval"}, {TypeSystem`AnyType, 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Vector[
          TypeSystem`Atom[Real], 2]}], 2], "Path" -> {}, "DisplayedRowCount" -> 
     2, "DisplayedColumnCount" -> 6, "DataRowCount" -> 2, "DataColumnCount" -> 
     6, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Parameter", 
                  Style[
                  "Parameter", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Parameter"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Parameter"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["BestFitValue", 
                  Style[
                  "BestFitValue", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "BestFitValue"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "BestFitValue"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["StandardError", 
                  Style[
                  "StandardError", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "StandardError"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "StandardError"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["TStatistic", 
                  Style[
                  "TStatistic", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "TStatistic"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "TStatistic"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PValue", 
                  Style[
                  "PValue", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "PValue"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "PValue"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ConfidenceInterval", 
                  Style[
                  "ConfidenceInterval", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "ConfidenceInterval"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "ConfidenceInterval"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["m", FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Parameter"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.01628"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["BestFitValue"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0424702"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardError"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["47.4753"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["TStatistic"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
               "0.000000000000000000000000000000000000000000000000000000000000\
000000000000000000000000000000000000000000000000000000000000000000000000000000\
000000000000000000000000000531589"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["PValue"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{1.9327896356392478`, 2.099777405218011}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{1.9327896356392478`, 2.099777405218011}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["ConfidenceInterval"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ConfidenceInterval"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["b", FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Parameter"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0284623"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["BestFitValue"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0245595"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["StandardError"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.15891"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["TStatistic"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.247186"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["PValue"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{-0.019820229181948833`, 0.07674491483700385}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{-0.019820229181948833`, 0.07674491483700385}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                    Key["ConfidenceInterval"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["ConfidenceInterval"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Dynamic[
     Replace[
      Replace[
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
       TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
          Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
          Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
           Blank[]]] :> (
         Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
          TypeSystem`NestedGrid`PackagePrivate`path$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
          TypeSystem`NestedGrid`PackagePrivate`pathType$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
          TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
         TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
          TypeSystem`NestedGrid`PackagePrivate`path$, 
           TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
        Spacer[10], Blank[] :> Spacer[10]}], 
      Pattern[TypeSystem`NestedGrid`PackagePrivate`bar, 
        Except[
         Alternatives[
          Blank[Spacer], ""]]] :> 
      TypeSystem`NestedGrid`PackagePrivate`makeFramedPathbar[
       TypeSystem`NestedGrid`PackagePrivate`bar]], 
     TrackedSymbols :> {
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{
       1670.521501736112, {37.530792236328125`, 43.262725830078125`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{
      1670.521501736112, {37.530792236328125`, 43.262725830078125`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.9577055579268837`*^9, 3.9580474451913443`*^9, 
  3.958047565521228*^9},
 CellLabel->
  "Out[2789]=",ExpressionUUID->"e8e8631f-6256-4937-bbc6-8c12d6f39461"],

Cell[BoxData[
 TagBox[GridBox[{
    {"2.0162835204286296`", "0.16698776957876338`"},
    {"0.02846234282752751`", "0.09656514401895269`"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.9577055579268837`*^9, 3.9580474451913443`*^9, 
  3.958047565572464*^9},
 CellLabel->
  "Out[2790]//TableForm=",ExpressionUUID->"b55315b7-ee47-4e32-9fa0-\
1285739dcd69"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nlm", " ", "=", " ", 
   RowBox[{"NonlinearModelFit", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"fakeData", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "800"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"m", " ", "x"}], " ", "+", " ", "b"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"m", ",", "b"}], "}"}], ",", "\[IndentingNewLine]", "x"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"nlm", "[", "\"\<ParameterEstimates\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Mean", "[", "#", "]"}], ",", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "-", 
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], "&"}], "/@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", "\"\<ConfidenceInterval\>\"", "]"}], "&"}], "/@", 
     RowBox[{"Normal", "[", 
      RowBox[{"nlm", "[", "\"\<ParameterEstimates\>\"", "]"}], "]"}]}], 
    ")"}]}], "//", "TableForm"}]}], "Input",
 CellChangeTimes->{3.958047744587846*^9},
 CellLabel->
  "In[2791]:=",ExpressionUUID->"b3d54b17-6696-47d5-b1d2-b4439ec732c5"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{\\\"-\\\", \
\\\"757.0056004337927`\\\"}], \\\"]\\\"}]\\) is too small to represent as a \
normalized machine number; precision may be lost.\"", 2, 2792, 141, 
   22001709420662597820, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{3.958047744795472*^9},
 CellLabel->
  "During evaluation of \
In[2791]:=",ExpressionUUID->"26df0aa7-e3af-4acc-95bc-e8aa8feac4fb"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "Parameter" -> $CellContext`m, "BestFitValue" -> 2.0906773367962326`, 
        "StandardError" -> 0.03124783505887307, "TStatistic" -> 
        66.90630992058338, "PValue" -> 0., 
        "ConfidenceInterval" -> {2.029339674172522, 2.152014999419943}|>, <|
       "Parameter" -> $CellContext`b, "BestFitValue" -> 0.034814001194956166`,
         "StandardError" -> 0.01807653326118435, "TStatistic" -> 
        1.925922448288915, "PValue" -> 0.05446902839903897, 
        "ConfidenceInterval" -> {-0.0006691705669212566, 
         0.07029717295683359}|>}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Parameter"} -> 
        1, {All, "BestFitValue"} -> 1, {All, "StandardError"} -> 
        1, {All, "TStatistic"} -> 1, {All, "PValue"} -> 
        1, {All, "ConfidenceInterval"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Parameter" -> TypeSystem`PackageScope`UnknownShape[False], 
            "BestFitValue" -> TypeSystem`PackageScope`AtomShape[60], 
            "StandardError" -> TypeSystem`PackageScope`AtomShape[60], 
            "TStatistic" -> TypeSystem`PackageScope`AtomShape[60], "PValue" -> 
            TypeSystem`PackageScope`AtomShape[60], "ConfidenceInterval" -> 
            TypeSystem`PackageScope`UnknownShape[False]|>], 
          DirectedInfinity[1], 6, {All}]], 2, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Parameter", "BestFitValue", "StandardError", "TStatistic", "PValue", 
         "ConfidenceInterval"}, {TypeSystem`AnyType, 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Vector[
          TypeSystem`Atom[Real], 2]}], 2], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Parameter"} -> 
        1, {All, "BestFitValue"} -> 1, {All, "StandardError"} -> 
        1, {All, "TStatistic"} -> 1, {All, "PValue"} -> 
        1, {All, "ConfidenceInterval"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Parameter" -> TypeSystem`PackageScope`UnknownShape[False], 
            "BestFitValue" -> TypeSystem`PackageScope`AtomShape[60], 
            "StandardError" -> TypeSystem`PackageScope`AtomShape[60], 
            "TStatistic" -> TypeSystem`PackageScope`AtomShape[60], "PValue" -> 
            TypeSystem`PackageScope`AtomShape[60], "ConfidenceInterval" -> 
            TypeSystem`PackageScope`UnknownShape[False]|>], 
          DirectedInfinity[1], 6, {All}]], 2, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Parameter", "BestFitValue", "StandardError", "TStatistic", "PValue", 
         "ConfidenceInterval"}, {TypeSystem`AnyType, 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Vector[
          TypeSystem`Atom[Real], 2]}], 2], "Path" -> {}, "DisplayedRowCount" -> 
     2, "DisplayedColumnCount" -> 6, "DataRowCount" -> 2, "DataColumnCount" -> 
     6, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Parameter", 
                  Style[
                  "Parameter", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Parameter"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Parameter"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["BestFitValue", 
                  Style[
                  "BestFitValue", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "BestFitValue"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "BestFitValue"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["StandardError", 
                  Style[
                  "StandardError", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "StandardError"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "StandardError"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["TStatistic", 
                  Style[
                  "TStatistic", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "TStatistic"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "TStatistic"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PValue", 
                  Style[
                  "PValue", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "PValue"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "PValue"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ConfidenceInterval", 
                  Style[
                  "ConfidenceInterval", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "ConfidenceInterval"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "ConfidenceInterval"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["m", FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Parameter"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.09068"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["BestFitValue"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0312478"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardError"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["66.9063"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["TStatistic"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["PValue"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{2.029339674172522, 2.152014999419943}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{2.029339674172522, 2.152014999419943}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["ConfidenceInterval"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ConfidenceInterval"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["b", FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Parameter"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.034814"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["BestFitValue"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0180765"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["StandardError"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.92592"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["TStatistic"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.054469"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["PValue"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{-0.0006691705669212566, 0.07029717295683359}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{-0.0006691705669212566, 0.07029717295683359}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                    Key["ConfidenceInterval"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["ConfidenceInterval"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Dynamic[
     Replace[
      Replace[
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
       TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
          Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
          Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
           Blank[]]] :> (
         Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
          TypeSystem`NestedGrid`PackagePrivate`path$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
          TypeSystem`NestedGrid`PackagePrivate`pathType$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
          TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
         TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
          TypeSystem`NestedGrid`PackagePrivate`path$, 
           TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
        Spacer[10], Blank[] :> Spacer[10]}], 
      Pattern[TypeSystem`NestedGrid`PackagePrivate`bar, 
        Except[
         Alternatives[
          Blank[Spacer], ""]]] :> 
      TypeSystem`NestedGrid`PackagePrivate`makeFramedPathbar[
       TypeSystem`NestedGrid`PackagePrivate`bar]], 
     TrackedSymbols :> {
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{
       544.1755017361111, {37.530792236328125`, 43.262725830078125`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{
      544.1755017361111, {37.530792236328125`, 43.262725830078125`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.958047744814876*^9},
 CellLabel->
  "Out[2792]=",ExpressionUUID->"26534fe9-fc4b-4601-a041-2028f6d4489a"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{\\\"-\\\", \
\\\"757.0056004337927`\\\"}], \\\"]\\\"}]\\) is too small to represent as a \
normalized machine number; precision may be lost.\"", 2, 2793, 142, 
   22001709420662597820, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{3.9580477448697042`*^9},
 CellLabel->
  "During evaluation of \
In[2791]:=",ExpressionUUID->"c55f3e57-19f8-4450-8bf8-50a5e59877bd"],

Cell[BoxData[
 TagBox[GridBox[{
    {"2.0906773367962326`", "0.12267532524742109`"},
    {"0.034814001194956166`", "0.07096634352375485`"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.958047744873208*^9},
 CellLabel->
  "Out[2793]//TableForm=",ExpressionUUID->"f141cdfe-f25b-448c-b006-\
69545ac6692b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.958047812192527*^9, 
  3.958047874528541*^9}},ExpressionUUID->"3e44cee3-6d47-4fb1-99ce-\
758e6754fd9a"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{\\\"-\\\", \
\\\"757.0056004337927`\\\"}], \\\"]\\\"}]\\) is too small to represent as a \
normalized machine number; precision may be lost.\"", 2, 2798, 147, 
   22001709420662597820, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{{3.958047821732787*^9, 3.95804787024584*^9}},
 CellLabel->
  "During evaluation of \
In[2798]:=",ExpressionUUID->"cfb00f04-0428-44d6-a177-c9b783d05582"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{"2.091", "0.031"},
   "Around"],
  Around[2.0906773367962326`, 0.03124783505887307]]], "Output",
 CellChangeTimes->{{3.958047821762744*^9, 3.9580478702504263`*^9}},
 CellLabel->
  "Out[2798]=",ExpressionUUID->"95dc4fdd-3ba6-4a81-b942-3c7a25e77a9f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"summaryResults", " ", "=", " ", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"nlm", " ", "=", " ", 
       RowBox[{"NonlinearModelFit", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"fakeData", "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", "n"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"m", " ", "x"}], " ", "+", " ", "b"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"m", ",", "b"}], "}"}], ",", "\[IndentingNewLine]", "x"}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"n", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"Around", "[", 
           RowBox[{"#BestFitValue", ",", "#StandardError"}], "]"}], "&"}], "@", 
         RowBox[{
          RowBox[{"Normal", "[", 
           RowBox[{"nlm", "[", "\"\<ParameterEstimates\>\"", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", "  ", "\[IndentingNewLine]", 
        
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Normal", "[", 
            RowBox[{"nlm", "[", "\"\<ParameterEstimates\>\"", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<ConfidenceInterval\>\"", 
          "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Normal", "[", 
            RowBox[{"nlm", "[", "\"\<ParameterEstimates\>\"", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<ConfidenceInterval\>\"", 
          "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", "}"}]}], ",",
      "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"n", ",", "3", ",", 
       RowBox[{"Length", "[", "fakeData", "]"}], ",", "5"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.958047782887807*^9, 3.95804780792342*^9}, {
  3.958047875888804*^9, 3.958047922727997*^9}, {3.958047959214768*^9, 
  3.958048025662717*^9}},ExpressionUUID->"b480e728-2564-4b36-9f8a-\
2bdbc2d407b6"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{\\\"-\\\", \
\\\"711.5054333364758`\\\"}], \\\"]\\\"}]\\) is too small to represent as a \
normalized machine number; precision may be lost.\"", 2, 2809, 175, 
   22001709420662597820, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{{3.9580478888297977`*^9, 3.958047960885838*^9}, 
   3.958048008119194*^9},
 CellLabel->
  "During evaluation of \
In[2809]:=",ExpressionUUID->"7b4be2cb-7fd7-404e-ba82-303cd27bbeaa"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{\\\"-\\\", \
\\\"711.5054333364758`\\\"}], \\\"]\\\"}]\\) is too small to represent as a \
normalized machine number; precision may be lost.\"", 2, 2809, 176, 
   22001709420662597820, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{{3.9580478888297977`*^9, 3.958047960885838*^9}, 
   3.958048008124995*^9},
 CellLabel->
  "During evaluation of \
In[2809]:=",ExpressionUUID->"4099648f-3c6d-46e7-a21f-f64d596a5eee"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{\\\"-\\\", \
\\\"711.5054333364758`\\\"}], \\\"]\\\"}]\\) is too small to represent as a \
normalized machine number; precision may be lost.\"", 2, 2809, 177, 
   22001709420662597820, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{{3.9580478888297977`*^9, 3.958047960885838*^9}, 
   3.958048008128602*^9},
 CellLabel->
  "During evaluation of \
In[2809]:=",ExpressionUUID->"221fb3d9-db68-4083-b505-25a36f47ceaa"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"General\\\", \
\\\"::\\\", \\\"munfl\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 2809, 178, 22001709420662597820, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{{3.9580478888297977`*^9, 3.958047960885838*^9}, 
   3.9580480081314793`*^9},
 CellLabel->
  "During evaluation of \
In[2809]:=",ExpressionUUID->"6b08a3ce-abf8-4e18-8796-7df17f0e0382"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListLogLinearPlot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"summaryResults", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"summaryResults", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"summaryResults", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "4"}], "}"}]}], "]"}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"IntervalMarkers", "->", "\"\<Bands\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "->", "800"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Joined", "->", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{"1.5", ",", "3"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<Num data points\>\"", ",", "\"\<Estimate of m\>\""}], 
       "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<Estimate +/- standard error\>\"", 
        ",", "\"\<Confidence inteval lower bound\>\"", 
        ",", "\"\<Confidence interval upper bound\>\""}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
     "Black", ",", "\[IndentingNewLine]", "Dashed", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "2.1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1000", ",", "2.1"}], "}"}]}], "}"}], "]"}]}], 
     "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.958047925073032*^9, 3.958047926994686*^9}, {
  3.958048011392798*^9, 3.958048122960837*^9}, {3.958048255365562*^9, 
  3.9580483557315073`*^9}, {3.958048523781679*^9, 3.958048526968388*^9}},
 CellLabel->
  "In[2836]:=",ExpressionUUID->"ae1b39e4-c492-4131-be36-32b64352cd57"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, 
       InterpretationBox[{
         TagBox[
          GraphicsComplexBox[CompressedData["
1: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
Bn3ZXH6b0fUjzgve5wyh8TWYLppEsePzi42RozSYnXh9Rw3VX+amynQbpwEt
1PBdKCr/U8ffs+cPDQwvZz/yRLHAZG+b1AxaH1ycusNoPg8lpNVOstD+YxxV
fvO/8YQpfynjpMNht7X3H6D2RgMOFMfPp4PXqMqT/9rbvqm80GUhHX42Z/wQ
Rf03DvR4vXUxHQxCP+4zQueR1lnez4v46eBU83CDFbp+npF2+3dBOqyMf9Dl
h64PTupaHCtCB7GA8yYZ6HzI3RW5w1KcDi+dKM8K0fVvb8xGrCTRgftECn0/
ar/s8MfJbgodSuReVZxC9ec1RJ55RKfDMgH5/XvRfN0hscTsltGBxF0S64Li
zLiYbytW0OF9TmlKKlrvn9MnUptW0uFS1NXJlWh8Opb3027J0uHZQ9NBOopT
g6Rq96+hA0cI82YZuj5g+Pfq+fJ08P7JXCGO+quzNSY5V4EOKgKViWvQeNaI
XzjsoEQHNV/5c22oXH/dSgXyJjqYOw2p9qD2rHT64YMqHShOZ/2UUf/dzDQu
uW+hQ2F525MvaHySvhfnLWGg/u8/6S2FxqPCKZn/XoMOmjn3L0ii8zcq9OCz
49vpMJ7yuYGOztPDy662iuykg2fDzbbb6PqtggJHcnbT4QPPFdWn6Po+mbUC
hntR/CX6dhZarx9S5Pgm99Hh7PFX75X+W6/OOoduHkD995ryTUbz4VPytW3D
YTqUUa96XEfva0vmr9df9Olw94n++CP0/vnWNfXZGtLhWMDYye9ofajfrLBn
GdOhdVBg8i2KnxJjqpFmdJBqOL76CapfN+VyVNYC3U/k88orqH3QtKvPt6LD
wit3opajcmvn2Yy9x+iw2+/7tT1oftj+wbc2bEWMN+c//1i49l2JXh0HsP0j
TMddMtqXA9j+8VWz1fCbPeuff8TKpq8JWTr7zz+ynM9k7zzCAWz/ULgWZ7vZ
lAPY/pHX9W50vJcD2P4RcMl4CeUXB7D9Q7DGdmdOBQew/WMt/94UgsL5zz9K
+xbkbMrkALZ/HL14skDvI8c//zC9OAIefzj++cfhiEPk9zKc//yDuWvFqXRx
zn/+cTya3//Td45//sHxkWkxUMvxzz9smPJvbb9y/PMPUdn0M88iOf75x4ms
a5ddrDmA7R9FXr5TapIcwPaPhbyfc3/t4QC2fwyKVkTsWMIBbP8otLF8ZNqB
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
CfvHe/Wp1zebsH98Ed5CDmrF/pF9NrkprBH7R4F6v+rbJuwfR7uYTmeasH9U
+sxPjm/G/mE/zlrg14L949bufNrdFuwfZ06bbYpqwf6RG+Dcm9iB/cPcb+Ov
//4fyPaPccsGmZ527B+MsTthzGbsH22kzUvvNWH/aNlv//J8E/YP02ebbhW3
Yf/Y7qH7abQF+8fj9T52bm3YPySq+AYqmrF/WPTHecS1Yv9QF/ko3t2M/SNK
w2TBjRbsH7GMAus3Ldg/vj3Ju67Qgv1DhEuOwd2C/eNoMStWvwH7x/FjTYz/
9he2f2xJ61zxtQX7x9KdS0MimrF/VLyySWe1YP9QdClcKNWO/WNagSeSvwX7
R/g8me98zdg/GAc8pZZ1YP9QJng8frdh/yhuFCR5tWD/eJyS/OJCO/aPbGWv
Q6sbsX/kGISY7m/E/hHXZl/jXI/9Y91y2dGv9dg/5nmJdt2rx/4xZe7ltKcR
+8eRMfsX7o3YP9YH1RV7NmH/8FUTnhVvwv5hfUs7YXkD9g+G7sC0VjP2D8v4
D4ovWrF/yG16ebi/FfsHuZxLO7sD+0fvYLtmTDv2j83tTY6DLdg/iPDHeo2t
2D/68q+7/Pc9zfaPgoW/vsrXY/8oDnHJDP6J/aPyVZyFQxX2jw5r+c/WNdg/
MpbyeHjV/o9/2GnRdtVi/1DdtGSrdA32jxZSqEZTLfYPfddr5w5XY//IVtyS
bfET+8dc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc
/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc
/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc
/sdc/sdc/sdc/sdc/sdc/sf/z/yP/wOopNn6
           "], {{{}, {}, {}, {}, {}, {}, {
              RGBColor[0.24, 0.6, 0.8], 
              Opacity[0.2], 
              EdgeForm[None], 
              GraphicsGroupBox[
               PolygonBox[CompressedData["
1:eJwl1kPUGFYQBtDYttHYttMkjW3btq1GbWzbtm3btu2k9z9d3DNvVrOa903i
hu0qtg0SKFCgwCQK+n8N6D0DBSM4IQhJKEIThrCEIzwRiEgkIhOFqEQjOjGI
SSxiE4e4xCM+CUgYMJ/E/EESkpKM5KQgJalITRrSko70ZCAjmchMFrKSjezk
ICe5yE0e8pKP/BSgIIUozJ8UoSjF+IvilKAkpShNGcpSjvJUoCKVqEwVqlKN
6tSgJrWoTR3qUo/6NKAhjWhME5rSjOa0oCWtaE0b2tKO9nSgI53oTBe60o3u
9KAnvehNH/rSj/4MYCCDGMwQhjKM4fzNCEYyitGM4R/+ZSzjGM8EJjKJyUxh
KtOYzgxmMovZzGEu85jPAhayiMUsYSnLWM4KVrKK1axhLetYzwY2sonNbGEr
29jODnayi93sYS/72M8BDnKIwxzhKMc4zglOcorTnOEs5zjPBS5yictc4SrX
uM4NbnKL29zhLve4zwMe8ojHPOEpz3jOC17yite84S3veM8HPvKJz3zhK9/4
zg9+8ovfBCx/YIIQlGAEJwQhCUVowhCWcIQnAhGJRGSiEJVoRCcGMYlFbOIQ
l3jEJwEJSURi/iAJSUlGclKQklSkJg1pSUd6MpCRTGQmC1nJRnZykJNc5CYP
eclHfgpQkEIU5k+KUJRi/EVxSlCSUpSmDGUpR3kqUJFKVKYKValGdWpQk1rU
pg51qUd9GtCQRjSmCU1pRnNa0JJWtKYNbWlHezrQkU50pgtd6UZ3etCTXvSm
D33pR38GMJBBDGYIQxnGcP5mBCMZxWjG8A//Bv4/QxKSgPjEIy5xiE0sYhKD
6EQjKlGITCQiEoHwhCMsYQhNKEISguAEIyhBArIrILT4LcB+8ZMffOcbX/nC
Zz7xkQ+85x1vecNrXvGSFzznGU95wmMe8ZAH3Oced7nDbW5xkxtc5xpXucJl
LnGRC5znHGc5w2lOcZITHOcYRznCYQ5xkAPsZx972cNudrGTHWxnG1vZwmY2
sZENrGcda1nDalaxkhUsZxlLWcJiFrGQBcxnHnOZw2xmMZMZTGcaU5nCZCYx
kQmMZxxj+Zd/GMNoRjGSEfzNcIYxlCEMZhADGUB/+tGXPvSmFz3pQXe60ZUu
dKYTHelAe9oRcBS1oTWtaEkLmtOMpjShMY1oSAPqU4+61KE2tahJDapTjapU
oTKVqEgFylOOspShNKUoSQmK8xfFKEoR/qQwhShIAfKTj7zkITe5yEkOspON
rGQhM5nISAbSk460pCE1qUhJCpKTjKQk4Q8Sk4iEJCA+8YhLHGITi5jEIDrR
iEoUIhOJiEQgPOEISxhCE4qQhCA4wQhKEAITcLz+9g/94ic/+M43vvKFz3zi
Ix94zzve8obXvOIlL3jOM57yhMc84iEPuM897nKH29ziJje4zjWucoXLXOIi
FzjPOc5yhtOc4iQnOM4xjnKEwxziIAfYzz72sofd7GInO9jONrayhc1sYiMb
WM861rKG1axiJStYzjKWsoTFLGIhC5jPPOYyh9nMYiYzmM40pjKFyUxiIhMY
zzjG8h83wYXb
                "]]]}, {}, {}, {}}, {{}, {}, {}, 
             TagBox[{
               RGBColor[0.24, 0.6, 0.8], 
               PointSize[0.0055000000000000005`], 
               AbsoluteThickness[1], 
               LineBox[CompressedData["
1:eJwl1WVbEAYUBWBQ7G7FxG4UGzBQsRM7EEXFFhsLCzAx1qGbLuzcjE03Y2Eu
zM3cdDPWMxa6dC/PPrzn/oJzbkh8Ysz4wICAgFUi42YiM0FkISvZyE4OcpKL
3OQhL/nITwEKUojCFKEoxShOCYIpSSlKU4aylCOE8lSgIpWoTBWqUo3q1KAm
tahNKHWoSxj1qE8DGtKIxjQhnAgiaUozmtOCKFrSitZE04a2tKM9HehIJzrT
ha50ozsx9KAnvehNH/rSj/4MYCCxDCKOwQwhnqEMYzgJjGAkoxjNGMYyjvEk
MoGJTGIyU5jKNJKYzgxmMovZJDOHucxjPgtIIZU0FrKIxSxhKctIZzkrWMkq
nuBJnuJpnuFZnuN5XuBFVrOGl3iZtazjFV7lNV5nPRvYyCY2s4WtbGM7O9jJ
Lt7gTXazh73s4y3eZj8HeId3OcghDnOE93ifD/iQoxzjOCc4ySk+4mM+4VNO
c4aznOM8F/iMz7nIJS5zhatc4wu+5Do3+IqvucktbnOHb/iW7/ieH/iRn/iZ
u9zjPg/4hV/5jd95yCP+4E/+4m/+4V8ek1H+QDKRmSCykJVsZCcHOclFbvKQ
l3zkpwAFKURhilCUYhSnBMGUpBSlKUNZyhFCeSpQkUpUpgpVqUZ1alCTWtQm
lDrUJYx61KcBDWlEY5oQTgSRNKUZzWlBFC1pRWuiaUNb2tGeDnSkE53pQle6
0Z0YetCTXvSmD33pR38GMJBYBhHHYIYQz1CGMZwERjCSUYxmDGMZR8Z4JzKB
iUxiMlOYyjSSmM4MZjKL2SQzh7nMYz4LSCGVNBayiMUsYSnLSGc5K1gZ+P//
+A+Q3qse
                "]]}, Annotation[#, "Charting`Private`Tag#1"]& ], 
             TagBox[{
               RGBColor[0.24, 0.6, 0.8], 
               PointSize[0.0055000000000000005`], 
               AbsoluteThickness[1], 
               LineBox[CompressedData["
1:eJwV0/l/DwQAxvHvNuccc2/ObSmlQ1KKcpRK6VBJBx1ypBPl6FCUCEUy933f
932fY4Y5ZsOMue+bjTHMvP3w/vwDz+uJbtGuUdugQCDQX2IYwEAGMZghDGUY
wxnBSEYxmjGMZRzjmcBEJjGZKUxlGtOZwUxmMZs5zGUe81nAQhaxmCUsZRnL
WcFKVrGaNaxlHeuJZQMbiWMT8WxmC1tJYBvb2cFOEtlFEsnsZg97SWEfqezn
AGkc5BCHOcJRjnGcE5zkFKc5w1nOcZ4LXOQSl7nCVdLJ4BrXyeQGN8niFre5
QzZ3ybk/YHAgEEQwIeQiN3nISz7yE0oBClKIwoRRhKIUozglKEkpwomgNGUo
SznKU4FIoojmASryIA9RiYd5hMo8ymM8zhNU4Umq8hTVeJpnqM6zPEcNavI8
L1CL2tShLi/yEvV4mVd4lfq8xus04A3e5C3epiHv8C7v0Yj3acwHfMhHfEwT
mvIJn/IZn9OML2hOC1rSii9pzVd8zTd8y3d8Txva0o4f+JH2dKAjnfiJn/mF
X+nMb/xOF7ryB3/Sjb/oTg/+pie96M0//Esf+vIf/fif/sQwgIEMYjBDGMow
hjOCkYxiNGMYyzjGM4GJTGIyU5jKNKYzg5nMYjZzmMs85rOAhSxiMUtYyjKW
s4KVrGI1a1jLOtYTywY2Escm4tnMFraSwDa2s4OdJLKLJJLZzR72ksI+UtnP
AdI4yCEOc4SjHOM4JzjJKU5zhrOc4zwXuMglLnOFq6STwTWuk8kNbpLFLW5z
h2zukkMgxP8JJoRc5CYPeclHfkIpQEEKUZgwilCUYhSnBCUpRTgRlKYMZSlH
eSoQSRT3ADBr3V8=
                "]]}, Annotation[#, "Charting`Private`Tag#2"]& ]}}], {
          "WolframDynamicHighlight", <|
           "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
         StyleBox[
          DynamicBox[
           (Charting`HighlightActionBox["DynamicHighlight", {}, 
            Slot["HighlightElements"], 
            Slot["LayoutOptions"], 
            Slot["Meta"], 
            Charting`HighlightActionFunction["DynamicHighlight", 
             GraphicsComplex[CompressedData["
1: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
Bn3ZXH6b0fUjzgve5wyh8TWYLppEsePzi42RozSYnXh9Rw3VX+amynQbpwEt
1PBdKCr/U8ffs+cPDQwvZz/yRLHAZG+b1AxaH1ycusNoPg8lpNVOstD+YxxV
fvO/8YQpfynjpMNht7X3H6D2RgMOFMfPp4PXqMqT/9rbvqm80GUhHX42Z/wQ
Rf03DvR4vXUxHQxCP+4zQueR1lnez4v46eBU83CDFbp+npF2+3dBOqyMf9Dl
h64PTupaHCtCB7GA8yYZ6HzI3RW5w1KcDi+dKM8K0fVvb8xGrCTRgftECn0/
ar/s8MfJbgodSuReVZxC9ec1RJ55RKfDMgH5/XvRfN0hscTsltGBxF0S64Li
zLiYbytW0OF9TmlKKlrvn9MnUptW0uFS1NXJlWh8Opb3027J0uHZQ9NBOopT
g6Rq96+hA0cI82YZuj5g+Pfq+fJ08P7JXCGO+quzNSY5V4EOKgKViWvQeNaI
XzjsoEQHNV/5c22oXH/dSgXyJjqYOw2p9qD2rHT64YMqHShOZ/2UUf/dzDQu
uW+hQ2F525MvaHySvhfnLWGg/u8/6S2FxqPCKZn/XoMOmjn3L0ii8zcq9OCz
49vpMJ7yuYGOztPDy662iuykg2fDzbbb6PqtggJHcnbT4QPPFdWn6Po+mbUC
hntR/CX6dhZarx9S5Pgm99Hh7PFX75X+W6/OOoduHkD995ryTUbz4VPytW3D
YTqUUa96XEfva0vmr9df9Olw94n++CP0/vnWNfXZGtLhWMDYye9ofajfrLBn
GdOhdVBg8i2KnxJjqpFmdJBqOL76CapfN+VyVNYC3U/k88orqH3QtKvPt6LD
wit3opajcmvn2Yy9x+iw2+/7tT1oftj+wbc2bEWMN+c//1i49l2JXh0HsP0j
TMddMtqXA9j+8VWz1fCbPeuff8TKpq8JWTr7zz+ynM9k7zzCAWz/ULgWZ7vZ
lAPY/pHX9W50vJcD2P4RcMl4CeUXB7D9Q7DGdmdOBQew/WMt/94UgsL5zz9K
+xbkbMrkALZ/HL14skDvI8c//zC9OAIefzj++cfhiEPk9zKc//yDuWvFqXRx
zn/+cTya3//Td45//sHxkWkxUMvxzz9smPJvbb9y/PMPUdn0M88iOf75x4ms
a5ddrDmA7R9FXr5TapIcwPaPhbyfc3/t4QC2fwyKVkTsWMIBbP8otLF8ZNqB
vl//+gcrhAjPTEHr+69/XPn9YjQ1hwC2fwwQ278tQM+P7R8OD9/bqKPny/aP
HzokHiv0e4btH1ELgoy60XnJ9g85tU3fNqDzme0f5cGqJ/vRecv2j8q1J8ea
j6Hvqb/+oX3CoMkDfe+x/eP0sEpBCfqeYfvHOwZThtuSALZ/2F/Jz50yR987
f/1je13mzB50Pds/qLU63plmBLD9Y1mvr0GsNgFs/2i+9ufuf/+fYvvHnXNe
d8qM0X731z8ENs57m4i+j9n+8XK12WM/FLP9I17LdXkN+p5k+0fms4PW89B4
2P5BSrQ4ZoC+f9n+cWSWdO6cHfr99dc/JKJKMr3s0X721z/cirYrTaDvP7Z/
3FFZuvYL+t5l+0dKxzaNouMEsP2jIsvYrBxdz/aPY5khvIvReNn+4VNm5GZ9
BJ2nf/2jvb064weK2f4RrR/lYmKFzqu//uG5c8Zj/BQ6X/76h0aossJR9PuL
7R9nLhtuC0Dfw2z/0BJ49JsffX+y/cPyVbiXEorZ/jElM2D3EM0X2z9Sbx68
q+eA9p+//pFCJS/2Rr9H2f7hP6ij/w6tL7Z/8EvKcH9D92f7x8at5BRNNN9s
//Dz2JdXh35/sv3j6IcFgtpovbD9Y4Oko/QrdH+2f/RUXdme6kgA2z9M4mq4
Q50IYPtHu1PN4ykb9D3x1z+ox5Pf/kbrie0f/fu+P6ywQL8X//rH2tKNGTqo
fbZ/5K2JfjeFfj+y/YO1dZNNHOov2z/M3EtUOtHzYvtHmUO+oA5qn+0f1wSv
K4Wj/ZntH3YRRXc00HnD9g/JAt6Yu+j7ju0fdIufn77HEsD2j8sCzje10fcd
2z/8K+7TulB9tn9QlvNcuROH1tdf/xD4LCdhjOqz/SN+26afU8nYPzY+yyFa
U7B/mJ3Ja13/BPuH89rj49xJ6Dz96x/q3FmOYZnYP7qPZYqOFmD/CKsojdn3
HvtHoRX9wqpS7B/FUBB2vB77x+OTLoRXFfaPVr6W1bJ12D92Kb524/uM/aNJ
17BArBj7xwLxs2dXl2D/2OeqviqtAPuHR/eveTrvsX88FF8i8L0E+8euI+t+
a3zC/lHbO1Z89iP2D8/yzFD1T9g/Vl/dvFOrBPuHuXhShd0n7B96qdYhcd+w
f3y76LfrbDX2jzajPYVTjdg/BtOE4wqqsH+01m+apjVh/xjOUVAQr8f+sV/y
ujC9AfuHZhD31rOD2D+cNGI8FPuwf9wQkDxK6cX+MXyIanKhA/uH6Yr4/uIe
7B+fTg666HRi/4jMDCf1NmL/mO+d/Y5gYv8YvJc7uqsd+0fPBoN2wSHsHzLD
rMorv7F/FHx/tsh+FPvHantxzdRR7B8GQs9qIwaxf3jv9TlwaAj7B6Npo8lz
JvYP/kNHfkj3Yv/QMdZvDu/G/sFMvWS+vgv7h1X9DZ9THdg/RrYkGZl1Y/8Y
qdlcfqIX+4eyy4OVG4ewf3youlqh9gv7h2PWNDO+C/uHiXmxbFUz9o9Hez23
HOvG/iF8glVu14P9g4uiaX2oH/tH3tGhlGdD2D8Ud0b/MRzH/lF4k7TjxTT2
jwfO/dMDk9g/nEtaLMensH8IPhgUPj+N/ePpVMu2aoLjn398yCt4d56D459/
LNxYHlU0n+Off1QXZJXYcHH88w/Pkt/W3SzsH9t8XxMbJ7B/FIXYqirOYv8Y
q1md8GUW+8d4TI4V/yT2j8DH3TIv/2D/2LBS7sS9SewfT551CG35g/1DKe4e
b88E9o9cl5m33CzsH5tEAmToLOwfi+1P3xKdwf7x9WPJdeMx7B8bTXxGmb+w
f2x8IWjnNYT9Q2M08kfQL+wfCyOsfRb2Y//Ye3Mz1+YB7B+8GaFLnAawf6xX
sCveOYj9Y9mDCFHbXuwff1RiLiV0Yf8wveLtYNGL/aNAuP2zbD/2j0UH1on/
YGL/OLOtWidwCPtHmkD4o3X92D+k/lis++/9ZvvH7R+dCiMd2D/GHp0vVOnB
/mHyVYqrsx/7R87BM+PjA9g/XM+Enb06jP0jQ5KrVmIU+4f+cqErwcPYP+bf
Vi3vGMb+cfJXYpzdEPYPGRGexDdD2D9+3c4bP9KP/WN3hXqd3AD2D+bQ4zX/
vZ9s/wiMLHs7wMT+Ufnx7YslXdg/Tu0dNB9pwv5xuPJd9ngD9o/iBJWQhHrs
H7prF48NNGD/uPxyckC8DvvHLdPL0lp12D+i8jRz5Rqwf4z9ifpY0Yb9ozC7
KtayHfvHbNDHq5PN2D9OqOYEpzdh/6iIjDKJaMH+0e83K01lYv/Ifpi6yrwP
+4fVqlUkOyb2D4/E9Q0Wndg/LI7f7OFswf4hy1R8/rEd+0f6icOR8l3YP3bf
vdbhwMT+UbZsg3IeE/uHgWyOlFgX9o+o0Ngj5p3YP644vOtL7MT+4a8WnkLr
xP6h1rtEw6IV+0em2bWL4Z3YP4jhVPflTdg/1iTrcKjUY/9YxdLcfKoR+4ej
SfxSgy7sH7cCB00Nmdg/IojMwfFe7B8cQhc2t/Vi/+hNPOC8ZRj7B1w6P/l+
EPsHp4rm8f5f2D+O8czcLO3F/nGDd99O3gHsHx5Pkl6U9GP/2LbCXTy6H/tH
p8l888Q+7B9J0vd2BvZj/+Anu/CRerF/6GlyG2h3Y/8oD/jWLcDE/lFRt70x
kYn9I2mJPCW7C/vHzKv23C2d2D/uhdg9et6J/WNVkojpyzbsH3Yl25w5O7F/
zJhkSxUOYP+wXdpzessA9g9fqciyxgHsH4kTPKlrfmH/UKnp/TowgP1jIUu0
auQX9g/z/vCNUsPYP9K9eaoNRrB/DA6ZPHL7jf1DjDntJjSG/cNcjK/u9CT2
j4NJHOHCf7B/sFIPLoz7jf2D8mvyR8sY9o+OyjUMGMP+8Y1HpW7hOPaPHb/2
ix4dw/7B2/fww5ER7B8DXaO2OYPYP5RKvix3GsT+QY4L3q3Zh/2DaWCgJt+L
/WN3r7PZSDf2D84ydb2f3dg/lGMUiqK7sX/YgezF913YPw54rCBtYGL/yAk9
ZiXYhf1Dz+CuI70X+wdr+ejB6B7sH0OPb1V96cb+Yfy+cbl+N/aP4DQ1zQNd
2D9cQ5gGNzuxf8yrDK2VasP+kb+GxXmkDfsHNdZ9gWUr9o/taxce3dOK/YNB
7gtsbcT+MfGH1/ZYO/YPszX+B7S6sH880Ra+L9eG/cPnka7DuQ7sH7nJK6p2
tmP/MGqwGl7XhP1j29FDxrN12D8gcZsftQ77RyaM55JqsH/s2bdKilqL/cP0
TkVD3U/sH7ey1oDyz//xj3PXFHiasH/oSP+acGjE/iGQFRlRWY/9Y1PQvtOR
ddg/al+Z+ps1YP8w3+TKGVuP/SNtrH5eXz32j7ZbvERlLfaPHWckdPpqsH8U
eW55XlmJ/SN8Uq21qBr7x5EqlpBBDfaPAI/VHf99n7H9Y3Vz5Z68Juwfqn3C
Kj8asX+Y7l5k3deC/cPFKj9kfyv2j3HXDJ/Cbuwff2wCNyh1Y//ovrM37FMX
9o+Pb+Slz7Zh/zAa6pEPbMH+4bFdvOJsK/aPkJJVoy6t2D9g1VjQZDv2D/6T
YsKsNuwfOZL8kyZd2D9+8D5Q52jD/lFNu1K6twH7R++OvEX3GrB/mF167LSx
CfvHe/Wp1zebsH98Ed5CDmrF/pF9NrkprBH7R4F6v+rbJuwfR7uYTmeasH9U
+sxPjm/G/mE/zlrg14L949bufNrdFuwfZ06bbYpqwf6RG+Dcm9iB/cPcb+Ov
//4fyPaPccsGmZ527B+MsTthzGbsH22kzUvvNWH/aNlv//J8E/YP02ebbhW3
Yf/Y7qH7abQF+8fj9T52bm3YPySq+AYqmrF/WPTHecS1Yv9QF/ko3t2M/SNK
w2TBjRbsH7GMAus3Ldg/vj3Ju67Qgv1DhEuOwd2C/eNoMStWvwH7x/FjTYz/
9he2f2xJ61zxtQX7x9KdS0MimrF/VLyySWe1YP9QdClcKNWO/WNagSeSvwX7
R/g8me98zdg/GAc8pZZ1YP9QJng8frdh/yhuFCR5tWD/eJyS/OJCO/aPbGWv
Q6sbsX/kGISY7m/E/hHXZl/jXI/9Y91y2dGv9dg/5nmJdt2rx/4xZe7ltKcR
+8eRMfsX7o3YP9YH1RV7NmH/8FUTnhVvwv5hfUs7YXkD9g+G7sC0VjP2D8v4
D4ovWrF/yG16ebi/FfsHuZxLO7sD+0fvYLtmTDv2j83tTY6DLdg/iPDHeo2t
2D/68q+7/Pc9zfaPgoW/vsrXY/8oDnHJDP6J/aPyVZyFQxX2jw5r+c/WNdg/
MpbyeHjV/o9/2GnRdtVi/1DdtGSrdA32jxZSqEZTLfYPfddr5w5XY//IVtyS
bfET+8dc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc
/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc
/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc
/sdc/sdc/sdc/sdc/sdc/sf/z/yP/wOopNn6
              "], {{{}, {}, {}, {}, {}, {}, {
                 EdgeForm[], 
                 Directive[
                  Opacity[0.2], 
                  RGBColor[0.24, 0.6, 0.8]], 
                 GraphicsGroup[{
                   Polygon[CompressedData["
1:eJwl1kPUGFYQBtDYttHYttMkjW3btq1GbWzbtm3btu2k9z9d3DNvVrOa903i
hu0qtg0SKFCgwCQK+n8N6D0DBSM4IQhJKEIThrCEIzwRiEgkIhOFqEQjOjGI
SSxiE4e4xCM+CUgYMJ/E/EESkpKM5KQgJalITRrSko70ZCAjmchMFrKSjezk
ICe5yE0e8pKP/BSgIIUozJ8UoSjF+IvilKAkpShNGcpSjvJUoCKVqEwVqlKN
6tSgJrWoTR3qUo/6NKAhjWhME5rSjOa0oCWtaE0b2tKO9nSgI53oTBe60o3u
9KAnvehNH/rSj/4MYCCDGMwQhjKM4fzNCEYyitGM4R/+ZSzjGM8EJjKJyUxh
KtOYzgxmMovZzGEu85jPAhayiMUsYSnLWM4KVrKK1axhLetYzwY2sonNbGEr
29jODnayi93sYS/72M8BDnKIwxzhKMc4zglOcorTnOEs5zjPBS5yictc4SrX
uM4NbnKL29zhLve4zwMe8ojHPOEpz3jOC17yite84S3veM8HPvKJz3zhK9/4
zg9+8ovfBCx/YIIQlGAEJwQhCUVowhCWcIQnAhGJRGSiEJVoRCcGMYlFbOIQ
l3jEJwEJSURi/iAJSUlGclKQklSkJg1pSUd6MpCRTGQmC1nJRnZykJNc5CYP
eclHfgpQkEIU5k+KUJRi/EVxSlCSUpSmDGUpR3kqUJFKVKYKValGdWpQk1rU
pg51qUd9GtCQRjSmCU1pRnNa0JJWtKYNbWlHezrQkU50pgtd6UZ3etCTXvSm
D33pR38GMJBBDGYIQxnGcP5mBCMZxWjG8A//Bv4/QxKSgPjEIy5xiE0sYhKD
6EQjKlGITCQiEoHwhCMsYQhNKEISguAEIyhBArIrILT4LcB+8ZMffOcbX/nC
Zz7xkQ+85x1vecNrXvGSFzznGU95wmMe8ZAH3Oced7nDbW5xkxtc5xpXucJl
LnGRC5znHGc5w2lOcZITHOcYRznCYQ5xkAPsZx972cNudrGTHWxnG1vZwmY2
sZENrGcda1nDalaxkhUsZxlLWcJiFrGQBcxnHnOZw2xmMZMZTGcaU5nCZCYx
kQmMZxxj+Zd/GMNoRjGSEfzNcIYxlCEMZhADGUB/+tGXPvSmFz3pQXe60ZUu
dKYTHelAe9oRcBS1oTWtaEkLmtOMpjShMY1oSAPqU4+61KE2tahJDapTjapU
oTKVqEgFylOOspShNKUoSQmK8xfFKEoR/qQwhShIAfKTj7zkITe5yEkOspON
rGQhM5nISAbSk460pCE1qUhJCpKTjKQk4Q8Sk4iEJCA+8YhLHGITi5jEIDrR
iEoUIhOJiEQgPOEISxhCE4qQhCA4wQhKEAITcLz+9g/94ic/+M43vvKFz3zi
Ix94zzve8obXvOIlL3jOM57yhMc84iEPuM897nKH29ziJje4zjWucoXLXOIi
FzjPOc5yhtOc4iQnOM4xjnKEwxziIAfYzz72sofd7GInO9jONrayhc1sYiMb
WM861rKG1axiJStYzjKWsoTFLGIhC5jPPOYyh9nMYiYzmM40pjKFyUxiIhMY
zzjG8h83wYXb
                    "]]}]}, {}, {}, {}}, {{}, {}, {}, 
                Annotation[{
                  Hue[0.67, 0.6, 0.6], 
                  Directive[
                   PointSize[0.0055000000000000005`], 
                   AbsoluteThickness[1], 
                   RGBColor[0.24, 0.6, 0.8]], 
                  Line[CompressedData["
1:eJwl1WVbEAYUBWBQ7G7FxG4UGzBQsRM7EEXFFhsLCzAx1qGbLuzcjE03Y2Eu
zM3cdDPWMxa6dC/PPrzn/oJzbkh8Ysz4wICAgFUi42YiM0FkISvZyE4OcpKL
3OQhL/nITwEKUojCFKEoxShOCYIpSSlKU4aylCOE8lSgIpWoTBWqUo3q1KAm
tahNKHWoSxj1qE8DGtKIxjQhnAgiaUozmtOCKFrSitZE04a2tKM9HehIJzrT
ha50ozsx9KAnvehNH/rSj/4MYCCxDCKOwQwhnqEMYzgJjGAkoxjNGMYyjvEk
MoGJTGIyU5jKNJKYzgxmMovZJDOHucxjPgtIIZU0FrKIxSxhKctIZzkrWMkq
nuBJnuJpnuFZnuN5XuBFVrOGl3iZtazjFV7lNV5nPRvYyCY2s4WtbGM7O9jJ
Lt7gTXazh73s4y3eZj8HeId3OcghDnOE93ifD/iQoxzjOCc4ySk+4mM+4VNO
c4aznOM8F/iMz7nIJS5zhatc4wu+5Do3+IqvucktbnOHb/iW7/ieH/iRn/iZ
u9zjPg/4hV/5jd95yCP+4E/+4m/+4V8ek1H+QDKRmSCykJVsZCcHOclFbvKQ
l3zkpwAFKURhilCUYhSnBMGUpBSlKUNZyhFCeSpQkUpUpgpVqUZ1alCTWtQm
lDrUJYx61KcBDWlEY5oQTgSRNKUZzWlBFC1pRWuiaUNb2tGeDnSkE53pQle6
0Z0YetCTXvSmD33pR38GMJBYBhHHYIYQz1CGMZwERjCSUYxmDGMZR8Z4JzKB
iUxiMlOYyjSSmM4MZjKL2SQzh7nMYz4LSCGVNBayiMUsYSnLSGc5K1gZ+P//
+A+Q3qse
                   "]]}, "Charting`Private`Tag#1"], 
                Annotation[{
                  Hue[0.9060679774997897, 0.6, 0.6], 
                  Directive[
                   PointSize[0.0055000000000000005`], 
                   AbsoluteThickness[1], 
                   RGBColor[0.24, 0.6, 0.8]], 
                  Line[CompressedData["
1:eJwV0/l/DwQAxvHvNuccc2/ObSmlQ1KKcpRK6VBJBx1ypBPl6FCUCEUy933f
932fY4Y5ZsOMue+bjTHMvP3w/vwDz+uJbtGuUdugQCDQX2IYwEAGMZghDGUY
wxnBSEYxmjGMZRzjmcBEJjGZKUxlGtOZwUxmMZs5zGUe81nAQhaxmCUsZRnL
WcFKVrGaNaxlHeuJZQMbiWMT8WxmC1tJYBvb2cFOEtlFEsnsZg97SWEfqezn
AGkc5BCHOcJRjnGcE5zkFKc5w1nOcZ4LXOQSl7nCVdLJ4BrXyeQGN8niFre5
QzZ3ybk/YHAgEEQwIeQiN3nISz7yE0oBClKIwoRRhKIUozglKEkpwomgNGUo
SznKU4FIoojmASryIA9RiYd5hMo8ymM8zhNU4Umq8hTVeJpnqM6zPEcNavI8
L1CL2tShLi/yEvV4mVd4lfq8xus04A3e5C3epiHv8C7v0Yj3acwHfMhHfEwT
mvIJn/IZn9OML2hOC1rSii9pzVd8zTd8y3d8Txva0o4f+JH2dKAjnfiJn/mF
X+nMb/xOF7ryB3/Sjb/oTg/+pie96M0//Esf+vIf/fif/sQwgIEMYjBDGMow
hjOCkYxiNGMYyzjGM4GJTGIyU5jKNKYzg5nMYjZzmMs85rOAhSxiMUtYyjKW
s4KVrGI1a1jLOtYTywY2Escm4tnMFraSwDa2s4OdJLKLJJLZzR72ksI+UtnP
AdI4yCEOc4SjHOM4JzjJKU5zhrOc4zwXuMglLnOFq6STwTWuk8kNbpLFLW5z
h2zukkMgxP8JJoRc5CYPeclHfkIpQEEKUZgwilCUYhSnBCUpRTgRlKYMZSlH
eSoQSRT3ADBr3V8=
                   "]]}, "Charting`Private`Tag#2"]}}], <|
             "HighlightElements" -> <|
               "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
              "LayoutOptions" -> <|
               "PanelPlotLayout" -> <||>, 
                "PlotRange" -> {{0.9631687538651874, 7.599901959208498}, {
                 1.513328080963996, 2.3103525978855317`}}, 
                "Frame" -> {{False, False}, {False, False}}, 
                "AxesOrigin" -> {0.9631687538651874, 1.513328080963996}, 
                "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True},
                 "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
                "DefaultStyle" -> {
                  Directive[
                   PointSize[0.0055000000000000005`], 
                   AbsoluteThickness[1], 
                   RGBColor[0.24, 0.6, 0.8]], 
                  Directive[
                   PointSize[0.0055000000000000005`], 
                   AbsoluteThickness[1], 
                   RGBColor[0.24, 0.6, 0.8]]}, 
                "HighlightLabelingFunctions" -> <|
                 "CoordinatesToolOptions" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), 
                  "ScalingFunctions" -> {{Identity, Identity}, {
                    Identity, Identity}}|>, 
                "Primitives" -> {{{}, {}, {}, {}, {}, {}, {
                    EdgeForm[], 
                    Directive[
                    Opacity[0.2], 
                    RGBColor[0.24, 0.6, 0.8]], 
                    GraphicsGroup[{{
                    Polygon[CompressedData["
1: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
PfjWha+M9eWE/wFo023U
                    "]]}}]}, {}, {}, {}}, {{}, {}, {}, 
                   Annotation[{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.0055000000000000005`], 
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.6, 0.8]], 
                    Line[CompressedData["
1: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
ndPQWe/RPSRE1fkZVIfiPfcNPklbkHBPvdfgF9ob7i9+H2pNwv4UoWKni3iP
TQfSXx0kgRtaH62HWKStdVjQjoTqZ0pFroijbwiWb3UgwSLWi/vhAvY7NSfm
70zCO/kp4UXo/8LChTO57iQsCcqo+or7d2WD7cXOkySMGzQ8McX9tYx3dRmf
DwnuV1oV1uL74/+OJiv6k3BbZcchHtTnXTy21iiIBLmcy9xDqL/UOS3u2HkS
eHh/d6oHY/98Zj8OvERC2vGLl/4g/jAwVXolAvmslTSTxfkT+FQcfTuGBJbK
7EQcyhkGuTvy4kmwK4x1OBOO99xp1Z+Sa+g/XfuIHOKIVOvY8hQSnPfMS/6L
+GCBmVJ5GgmzVRXbTC4TsN1AsqE4nYTld6KyrREb6549lZNNQi3/eZ7MCLzf
wsfWpuWQcDOnkfkvCr8HybPiMfkk7EzPvGkSg/trubO4fzHyb6DwOjeOAKug
4o1Hy0go0eGt23IF73d4c/L2xyQYHVjX25FIgNd/LA3FKqzfFYrtcZWAMzzd
wvNrSSgt5MveGk/AQyEzlS8vSLCaWqdfif60bsfdKn5FwuLoLRpmiFVHcpwu
NpMwuEPVanUCAbcFE2P3viMhizKaKkF5tLo6tbidBKktCj0lsfi9o7hH6vtH
Evha/whYRxPg7P0g4O5nzO/JUxFlxK35fw859pDQl3lvphz5ia16Ui3/Hfm8
KCg5gf32WCns7ud+nD9Pc+05rL+BxSsqfpiElTzKP1Zi/40871tuMELC6+GZ
xx0oJ48uf/7nDwm/Lzjnr0V8uPIFX9ok8hVyTaQf9fkNpvu3zZAwZSoh/R77
bV/UR98hLgkjnHIpIeS/J8zjSeQ8Cq5bX77XhPHE1ZWWKi2g4IVPmzGB8bzL
TnavE6RgSpYX0tFfbMbYwAFRCgxmO0sG8D1jv0iVUXEKGKyp1d6IKSe5zeek
KQgTV/+6FPuvwemIkjiTgriA4kE3xH1H+4avkxR0hJpr3sF+nbDbECO3hIK/
C9pzshA3veqRzZaj4Eu/gnQgzmvL5V3higoUfD8Sqk9g/FF7uoeyVlEwqrBu
RAXjM300tEVOmQJFQfnInTg/M+ceXb2uRkGlHlv7PcYz+ThkYNFaCrSyiL2V
aO8w5qF/bj0Fx84eMmnHfg62u5M+qkPBGCF+Twz7XUVeSeYQTUFPytNES9yn
fZbCKfX6FMg/HY7Yhfuq2GyTjooBBRlh2Y33cT8VNdyfvGJIgeNpemUo6t+c
Vf8wZkxBle33V39x/zR2Z3zdY0JBPrG+pxbnz8ugQSbXjIIELYVP3ojpBdYB
/Pso0FvTnM3CeDaumseysabg5OElHX8xHgXh4yO5BygwL42pEkF9wYuLF84d
puChzYTladTfKlliu+MoBV67fTi8KJ/+m82f6ID+OFX2fzCeT4c9xrucKDgj
3r9BFPGR2FNacm4U+K0/UiaJ+XjNyjbae1JQuJW1aD3GG+yZ8yTDC/NlNlpI
oT6hGSDc601Bd53NnwPo31Wh4QnlR8F+S72CP8h39WB9q3kgBdXOS902Ibbg
plteDsb6dWnv08d+sfxy1qjyPAUlYjETDxHfU/B88CuUgpfH3kUq4jzsKLx4
mbxMwc3jCzXDcd63P6zt2RZFgS3LabExYuXv8uUesRQwjTvHV2F/ElHXJa7G
U2DSdJfXFv1V54uMPbpKwcjp2UXx2A8h8jYHPyVTYLbJ6c4LxLzFVpbTNyjQ
fKuY5If7pU+1rU/2FgXLzJ6Z52L/H0+KX6CejnwEzcsxxHialU1qDbMo2L6M
qyaBcjq2gnPoHgUXYu+o+GN+ez4GsU7kUjBu3d80jFilVK8iJB/7s/VoVBL2
m3nIVb7YIsy/fdxNCOP7uV/yX8pDCnL+DCzXRX8l2zalZpZTsK3dOOI86r/S
SZrIfUyBTcuM/WfUr9S/Mb/oKfKlwl+bhPhyVEVzyTMK9nEUPQQx/8WxBywe
PqfghlPDKBdxpOS3G8X1FIiyqMkD6H/YOOdu/isKeIQrZGMQf57kD7jXRMFC
/+qUNsyvwlWXffstBY/5t67IQxxUmBh69T0FiztllU0R74vf9Ty8nYJ1j9Q/
nkL7jxXJ7X4f8f2sApuD+J7gs7vVTl0UOE9LWbsiHt1y5+K+bgo+bPrJfY/1
4p/JUtTvpSBiYjN7GPlWef02d9V3CjZt89jlg/LUTg0Z8X4KnovF1I2hf4OM
j/bjgxRsLdm2uTcSv5eFX6e2/6JgqIQvcAPaj7kueFE6gvl1HRCYQuz88MLn
hD8UzE1W3dRB/aWe2v2eExRQMVbPY1D+r1N0YMc/CqxCS+76IBabGuyVm8X+
4OM1GUU+zdLyP0xxcf/YJDZf/X8+sVpNjbwc2Ou5Jj0T/f0J2VObys8B3z/r
7//f35Z1zZXuCznwsbvwvRTGbxPmXaUrxAHLmJe7rPEeGZwVfi0gygGXjiwN
O7SfZ23U924RB1akZv4IRPuojB9CKZIckA45t78Q70PZ9oSttjIceOzCflCJ
9jXxc3ErmByYfyKXsxv9N+59OfWTzYE6pactp1B/XlfCmbscDiwVU9ltjHzd
ZHKljy/lAHN+XYo74qIbyW+XL+fAi9KG3Dzs99cFk3lfVnDgYmL41ArMb6dt
ev41RQ48yDrwm4M4L1Luw+7VHOCJ7r/aiPYho39X8atwwO9j/3IZjHenbnJ2
mRoH1ou13lmN+ayWOb/XSZMDOgEqwb0ot1BeocZax4HDLiPaA+jPbucw1Gtz
gO1yNlAL4/c8qHfRayMHKpt77zdhfoyAC/MW0xj/7pN+cpjPel5GxQs9DuiX
pp9n4P1NjDF94LaFAxO5r7s4eE/3Lg3vkdzGAZ+uq73X0V53kdi+UkMO1Ate
0s5B+yGFNWJWxoibkq4XY7/W5yqJTO3iwFm3py80/9+vrjvNru7B+H2nA7KR
D/+6N70aeznQSIZ7R+C8fi36r6rJggO37ltM3MX5C+j8MuRgxYFjIeMn32F/
bLra4si14UDPb7GpGsQ5xLh2wkEOyHW5rbqP+p3T7ocUj+B7kq9XXEL/oH/8
U4UdBxZeupm4DOVHXecKjY9xwDDw3eUdyM//AMp0oT0=
                    "]]}, "Charting`Private`Tag#1"], 
                   Annotation[{
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.0055000000000000005`], 
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.6, 0.8]], 
                    Line[CompressedData["
1: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
HVTtlmWDkrJLlQHqeaShlpW+mg2Sd2NEnVFfZvbbX9qosOGPesL5FNSPnaGu
icAGNlhdPOVmh3bZlEctT7TYUCrc9UYO88melnI13cyGJXvW0D+g/vW2fSUH
t7HBV++jYSjWO5JYuiRwFxuyBaLvr8HzWxz0tiwyYYP0H7s1/+43WXa967wF
G258+Kk8hvqnDcXMztuwYeL+mTJ1tEsoZd864sQGy3fS3D/R//FpZnebGxsK
9vpOTmI/Vk73O7W82ODlGxV0aZSA2sSeewnH2ZDD4P4kjvf3+0uxrUN+bDCV
EroYjvaFy6iPmqfZsPDGhvofiNNvpTqfOceGY0OpSS5Yr78VN1/lJTbIivCm
Pkd8d93e5pkINgzdKJo0w/wamftbVseyYVujVpsC5tfbfVt6fwIbekYerPp3
P+9xeb0KSGZDaGxd5SDyoeZa1XrjDhuaXlUWSyCfIqq2Lrn32XB857DtGO7T
1x5VIVWZbNjXVJ0/iftzd47KxvpcNlSlqEek4H4VO5p7830hG3avXjoxiPYr
nGXlDaVsuPB0epCO79F6k/qMV8/ZcM3qgow+4gtcu3xKXrAhrki3UAHPVwak
K9x7g3z+iXvV2Il83yz/dKWBDWX5zYn2uB9VXm2JPNTMhrmwV5emcT+smcm2
0m9jw9ENBeGPsb5rL/V3s9rZ0BgbZxnznQBVC8aJ7i42DATOyZDY36A995fs
Hjbk38tcaYv7XUCwMPrYIBscVq5kuqB9aCzrjtIYG3xSlb7Y4f5W6lNf3j3J
BrvD8b1cGK961ks4YZYNcj1rn7zCet6t23pRn0bC46P7YhWRr1i/4PCBhSRs
u3X5hxvGu2CXqxzBS0KdpIpaEeLMia2BCgIkmMsVSIvhec8zIaefi5AQF5lo
Zov5Oi1ObN7HIOGiW3V/6r/3I1youZ0k4bRGdAaFODqLoeMiSYJGn4SOXQd+
LwSvjOqVISHX+vK5aLS/yHrS4CxPAjGa6S2FfKifEuZvX0PCqnRDmjrOR8TJ
aY+xCgkr53U3Hsf3yL45927FehLcLZOXm2M9tyq/MBQ0SbgWOmy1H+v9ujM5
JwJIiCFyhydRLyctogKHNpNAEzq7sfPfe6Emf2H7NhL6Uvd4aKI+f0mVNacY
kgDnz0y/wPvq1h/kM7qHBC513cMDeP/P+AUf0zYl4SDv3/ha9N9mmffhggUJ
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
                    "]]}, "Charting`Private`Tag#2"]}}, "GCFlag" -> True|>, 
              "Meta" -> <|
               "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                "Function" -> ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
            "HighlightElements" -> <|
              "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
             "LayoutOptions" -> <|
              "PanelPlotLayout" -> <||>, 
               "PlotRange" -> {{0.9631687538651874, 7.599901959208498}, {
                1.513328080963996, 2.3103525978855317`}}, 
               "Frame" -> {{False, False}, {False, False}}, 
               "AxesOrigin" -> {0.9631687538651874, 1.513328080963996}, 
               "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
               "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
               "DefaultStyle" -> {
                 Directive[
                  PointSize[0.0055000000000000005`], 
                  AbsoluteThickness[1], 
                  RGBColor[0.24, 0.6, 0.8]], 
                 Directive[
                  PointSize[0.0055000000000000005`], 
                  AbsoluteThickness[1], 
                  RGBColor[0.24, 0.6, 0.8]]}, 
               "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                   (Identity[#]& )[
                    Part[#, 1]], 
                   (Identity[#]& )[
                    Part[#, 2]]}& ), 
                 "ScalingFunctions" -> {{Identity, Identity}, {
                   Identity, Identity}}|>, 
               "Primitives" -> {{{}, {}, {}, {}, {}, {}, {
                   EdgeForm[], 
                   Directive[
                    Opacity[0.2], 
                    RGBColor[0.24, 0.6, 0.8]], 
                   GraphicsGroup[{{
                    Polygon[CompressedData["
1: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
PfjWha+M9eWE/wFo023U
                    "]]}}]}, {}, {}, {}}, {{}, {}, {}, 
                  Annotation[{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.0055000000000000005`], 
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.6, 0.8]], 
                    Line[CompressedData["
1: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
ndPQWe/RPSRE1fkZVIfiPfcNPklbkHBPvdfgF9ob7i9+H2pNwv4UoWKni3iP
TQfSXx0kgRtaH62HWKStdVjQjoTqZ0pFroijbwiWb3UgwSLWi/vhAvY7NSfm
70zCO/kp4UXo/8LChTO57iQsCcqo+or7d2WD7cXOkySMGzQ8McX9tYx3dRmf
DwnuV1oV1uL74/+OJiv6k3BbZcchHtTnXTy21iiIBLmcy9xDqL/UOS3u2HkS
eHh/d6oHY/98Zj8OvERC2vGLl/4g/jAwVXolAvmslTSTxfkT+FQcfTuGBJbK
7EQcyhkGuTvy4kmwK4x1OBOO99xp1Z+Sa+g/XfuIHOKIVOvY8hQSnPfMS/6L
+GCBmVJ5GgmzVRXbTC4TsN1AsqE4nYTld6KyrREb6549lZNNQi3/eZ7MCLzf
wsfWpuWQcDOnkfkvCr8HybPiMfkk7EzPvGkSg/trubO4fzHyb6DwOjeOAKug
4o1Hy0go0eGt23IF73d4c/L2xyQYHVjX25FIgNd/LA3FKqzfFYrtcZWAMzzd
wvNrSSgt5MveGk/AQyEzlS8vSLCaWqdfif60bsfdKn5FwuLoLRpmiFVHcpwu
NpMwuEPVanUCAbcFE2P3viMhizKaKkF5tLo6tbidBKktCj0lsfi9o7hH6vtH
Evha/whYRxPg7P0g4O5nzO/JUxFlxK35fw859pDQl3lvphz5ia16Ui3/Hfm8
KCg5gf32WCns7ud+nD9Pc+05rL+BxSsqfpiElTzKP1Zi/40871tuMELC6+GZ
xx0oJ48uf/7nDwm/Lzjnr0V8uPIFX9ok8hVyTaQf9fkNpvu3zZAwZSoh/R77
bV/UR98hLgkjnHIpIeS/J8zjSeQ8Cq5bX77XhPHE1ZWWKi2g4IVPmzGB8bzL
TnavE6RgSpYX0tFfbMbYwAFRCgxmO0sG8D1jv0iVUXEKGKyp1d6IKSe5zeek
KQgTV/+6FPuvwemIkjiTgriA4kE3xH1H+4avkxR0hJpr3sF+nbDbECO3hIK/
C9pzshA3veqRzZaj4Eu/gnQgzmvL5V3higoUfD8Sqk9g/FF7uoeyVlEwqrBu
RAXjM300tEVOmQJFQfnInTg/M+ceXb2uRkGlHlv7PcYz+ThkYNFaCrSyiL2V
aO8w5qF/bj0Fx84eMmnHfg62u5M+qkPBGCF+Twz7XUVeSeYQTUFPytNES9yn
fZbCKfX6FMg/HY7Yhfuq2GyTjooBBRlh2Y33cT8VNdyfvGJIgeNpemUo6t+c
Vf8wZkxBle33V39x/zR2Z3zdY0JBPrG+pxbnz8ugQSbXjIIELYVP3ojpBdYB
/Pso0FvTnM3CeDaumseysabg5OElHX8xHgXh4yO5BygwL42pEkF9wYuLF84d
puChzYTladTfKlliu+MoBV67fTi8KJ/+m82f6ID+OFX2fzCeT4c9xrucKDgj
3r9BFPGR2FNacm4U+K0/UiaJ+XjNyjbae1JQuJW1aD3GG+yZ8yTDC/NlNlpI
oT6hGSDc601Bd53NnwPo31Wh4QnlR8F+S72CP8h39WB9q3kgBdXOS902Ibbg
plteDsb6dWnv08d+sfxy1qjyPAUlYjETDxHfU/B88CuUgpfH3kUq4jzsKLx4
mbxMwc3jCzXDcd63P6zt2RZFgS3LabExYuXv8uUesRQwjTvHV2F/ElHXJa7G
U2DSdJfXFv1V54uMPbpKwcjp2UXx2A8h8jYHPyVTYLbJ6c4LxLzFVpbTNyjQ
fKuY5If7pU+1rU/2FgXLzJ6Z52L/H0+KX6CejnwEzcsxxHialU1qDbMo2L6M
qyaBcjq2gnPoHgUXYu+o+GN+ez4GsU7kUjBu3d80jFilVK8iJB/7s/VoVBL2
m3nIVb7YIsy/fdxNCOP7uV/yX8pDCnL+DCzXRX8l2zalZpZTsK3dOOI86r/S
SZrIfUyBTcuM/WfUr9S/Mb/oKfKlwl+bhPhyVEVzyTMK9nEUPQQx/8WxBywe
PqfghlPDKBdxpOS3G8X1FIiyqMkD6H/YOOdu/isKeIQrZGMQf57kD7jXRMFC
/+qUNsyvwlWXffstBY/5t67IQxxUmBh69T0FiztllU0R74vf9Ty8nYJ1j9Q/
nkL7jxXJ7X4f8f2sApuD+J7gs7vVTl0UOE9LWbsiHt1y5+K+bgo+bPrJfY/1
4p/JUtTvpSBiYjN7GPlWef02d9V3CjZt89jlg/LUTg0Z8X4KnovF1I2hf4OM
j/bjgxRsLdm2uTcSv5eFX6e2/6JgqIQvcAPaj7kueFE6gvl1HRCYQuz88MLn
hD8UzE1W3dRB/aWe2v2eExRQMVbPY1D+r1N0YMc/CqxCS+76IBabGuyVm8X+
4OM1GUU+zdLyP0xxcf/YJDZf/X8+sVpNjbwc2Ou5Jj0T/f0J2VObys8B3z/r
7//f35Z1zZXuCznwsbvwvRTGbxPmXaUrxAHLmJe7rPEeGZwVfi0gygGXjiwN
O7SfZ23U924RB1akZv4IRPuojB9CKZIckA45t78Q70PZ9oSttjIceOzCflCJ
9jXxc3ErmByYfyKXsxv9N+59OfWTzYE6pactp1B/XlfCmbscDiwVU9ltjHzd
ZHKljy/lAHN+XYo74qIbyW+XL+fAi9KG3Dzs99cFk3lfVnDgYmL41ArMb6dt
ev41RQ48yDrwm4M4L1Luw+7VHOCJ7r/aiPYho39X8atwwO9j/3IZjHenbnJ2
mRoH1ou13lmN+ayWOb/XSZMDOgEqwb0ot1BeocZax4HDLiPaA+jPbucw1Gtz
gO1yNlAL4/c8qHfRayMHKpt77zdhfoyAC/MW0xj/7pN+cpjPel5GxQs9DuiX
pp9n4P1NjDF94LaFAxO5r7s4eE/3Lg3vkdzGAZ+uq73X0V53kdi+UkMO1Ate
0s5B+yGFNWJWxoibkq4XY7/W5yqJTO3iwFm3py80/9+vrjvNru7B+H2nA7KR
D/+6N70aeznQSIZ7R+C8fi36r6rJggO37ltM3MX5C+j8MuRgxYFjIeMn32F/
bLra4si14UDPb7GpGsQ5xLh2wkEOyHW5rbqP+p3T7ocUj+B7kq9XXEL/oH/8
U4UdBxZeupm4DOVHXecKjY9xwDDw3eUdyM//AMp0oT0=
                    "]]}, "Charting`Private`Tag#1"], 
                  Annotation[{
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.0055000000000000005`], 
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.6, 0.8]], 
                    Line[CompressedData["
1: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
HVTtlmWDkrJLlQHqeaShlpW+mg2Sd2NEnVFfZvbbX9qosOGPesL5FNSPnaGu
icAGNlhdPOVmh3bZlEctT7TYUCrc9UYO88melnI13cyGJXvW0D+g/vW2fSUH
t7HBV++jYSjWO5JYuiRwFxuyBaLvr8HzWxz0tiwyYYP0H7s1/+43WXa967wF
G258+Kk8hvqnDcXMztuwYeL+mTJ1tEsoZd864sQGy3fS3D/R//FpZnebGxsK
9vpOTmI/Vk73O7W82ODlGxV0aZSA2sSeewnH2ZDD4P4kjvf3+0uxrUN+bDCV
EroYjvaFy6iPmqfZsPDGhvofiNNvpTqfOceGY0OpSS5Yr78VN1/lJTbIivCm
Pkd8d93e5pkINgzdKJo0w/wamftbVseyYVujVpsC5tfbfVt6fwIbekYerPp3
P+9xeb0KSGZDaGxd5SDyoeZa1XrjDhuaXlUWSyCfIqq2Lrn32XB857DtGO7T
1x5VIVWZbNjXVJ0/iftzd47KxvpcNlSlqEek4H4VO5p7830hG3avXjoxiPYr
nGXlDaVsuPB0epCO79F6k/qMV8/ZcM3qgow+4gtcu3xKXrAhrki3UAHPVwak
K9x7g3z+iXvV2Il83yz/dKWBDWX5zYn2uB9VXm2JPNTMhrmwV5emcT+smcm2
0m9jw9ENBeGPsb5rL/V3s9rZ0BgbZxnznQBVC8aJ7i42DATOyZDY36A995fs
Hjbk38tcaYv7XUCwMPrYIBscVq5kuqB9aCzrjtIYG3xSlb7Y4f5W6lNf3j3J
BrvD8b1cGK961ks4YZYNcj1rn7zCet6t23pRn0bC46P7YhWRr1i/4PCBhSRs
u3X5hxvGu2CXqxzBS0KdpIpaEeLMia2BCgIkmMsVSIvhec8zIaefi5AQF5lo
Zov5Oi1ObN7HIOGiW3V/6r/3I1youZ0k4bRGdAaFODqLoeMiSYJGn4SOXQd+
LwSvjOqVISHX+vK5aLS/yHrS4CxPAjGa6S2FfKifEuZvX0PCqnRDmjrOR8TJ
aY+xCgkr53U3Hsf3yL45927FehLcLZOXm2M9tyq/MBQ0SbgWOmy1H+v9ujM5
JwJIiCFyhydRLyctogKHNpNAEzq7sfPfe6Emf2H7NhL6Uvd4aKI+f0mVNacY
kgDnz0y/wPvq1h/kM7qHBC513cMDeP/P+AUf0zYl4SDv3/ha9N9mmffhggUJ
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
                    "]]}, "Charting`Private`Tag#2"]}}, "GCFlag" -> True|>, 
             "Meta" -> <|
              "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
               "Function" -> ListPlot, "GroupHighlight" -> False|>|>], 
           ImageSizeCache -> {{
            4.503599627370496*^15, -4.503599627370496*^15}, {
            4.503599627370496*^15, -4.503599627370496*^15}}], Selectable -> 
          False]}, 
        Annotation[
         GraphicsComplex[CompressedData["
1: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
Bn3ZXH6b0fUjzgve5wyh8TWYLppEsePzi42RozSYnXh9Rw3VX+amynQbpwEt
1PBdKCr/U8ffs+cPDQwvZz/yRLHAZG+b1AxaH1ycusNoPg8lpNVOstD+YxxV
fvO/8YQpfynjpMNht7X3H6D2RgMOFMfPp4PXqMqT/9rbvqm80GUhHX42Z/wQ
Rf03DvR4vXUxHQxCP+4zQueR1lnez4v46eBU83CDFbp+npF2+3dBOqyMf9Dl
h64PTupaHCtCB7GA8yYZ6HzI3RW5w1KcDi+dKM8K0fVvb8xGrCTRgftECn0/
ar/s8MfJbgodSuReVZxC9ec1RJ55RKfDMgH5/XvRfN0hscTsltGBxF0S64Li
zLiYbytW0OF9TmlKKlrvn9MnUptW0uFS1NXJlWh8Opb3027J0uHZQ9NBOopT
g6Rq96+hA0cI82YZuj5g+Pfq+fJ08P7JXCGO+quzNSY5V4EOKgKViWvQeNaI
XzjsoEQHNV/5c22oXH/dSgXyJjqYOw2p9qD2rHT64YMqHShOZ/2UUf/dzDQu
uW+hQ2F525MvaHySvhfnLWGg/u8/6S2FxqPCKZn/XoMOmjn3L0ii8zcq9OCz
49vpMJ7yuYGOztPDy662iuykg2fDzbbb6PqtggJHcnbT4QPPFdWn6Po+mbUC
hntR/CX6dhZarx9S5Pgm99Hh7PFX75X+W6/OOoduHkD995ryTUbz4VPytW3D
YTqUUa96XEfva0vmr9df9Olw94n++CP0/vnWNfXZGtLhWMDYye9ofajfrLBn
GdOhdVBg8i2KnxJjqpFmdJBqOL76CapfN+VyVNYC3U/k88orqH3QtKvPt6LD
wit3opajcmvn2Yy9x+iw2+/7tT1oftj+wbc2bEWMN+c//1i49l2JXh0HsP0j
TMddMtqXA9j+8VWz1fCbPeuff8TKpq8JWTr7zz+ynM9k7zzCAWz/ULgWZ7vZ
lAPY/pHX9W50vJcD2P4RcMl4CeUXB7D9Q7DGdmdOBQew/WMt/94UgsL5zz9K
+xbkbMrkALZ/HL14skDvI8c//zC9OAIefzj++cfhiEPk9zKc//yDuWvFqXRx
zn/+cTya3//Td45//sHxkWkxUMvxzz9smPJvbb9y/PMPUdn0M88iOf75x4ms
a5ddrDmA7R9FXr5TapIcwPaPhbyfc3/t4QC2fwyKVkTsWMIBbP8otLF8ZNqB
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
CfvHe/Wp1zebsH98Ed5CDmrF/pF9NrkprBH7R4F6v+rbJuwfR7uYTmeasH9U
+sxPjm/G/mE/zlrg14L949bufNrdFuwfZ06bbYpqwf6RG+Dcm9iB/cPcb+Ov
//4fyPaPccsGmZ527B+MsTthzGbsH22kzUvvNWH/aNlv//J8E/YP02ebbhW3
Yf/Y7qH7abQF+8fj9T52bm3YPySq+AYqmrF/WPTHecS1Yv9QF/ko3t2M/SNK
w2TBjRbsH7GMAus3Ldg/vj3Ju67Qgv1DhEuOwd2C/eNoMStWvwH7x/FjTYz/
9he2f2xJ61zxtQX7x9KdS0MimrF/VLyySWe1YP9QdClcKNWO/WNagSeSvwX7
R/g8me98zdg/GAc8pZZ1YP9QJng8frdh/yhuFCR5tWD/eJyS/OJCO/aPbGWv
Q6sbsX/kGISY7m/E/hHXZl/jXI/9Y91y2dGv9dg/5nmJdt2rx/4xZe7ltKcR
+8eRMfsX7o3YP9YH1RV7NmH/8FUTnhVvwv5hfUs7YXkD9g+G7sC0VjP2D8v4
D4ovWrF/yG16ebi/FfsHuZxLO7sD+0fvYLtmTDv2j83tTY6DLdg/iPDHeo2t
2D/68q+7/Pc9zfaPgoW/vsrXY/8oDnHJDP6J/aPyVZyFQxX2jw5r+c/WNdg/
MpbyeHjV/o9/2GnRdtVi/1DdtGSrdA32jxZSqEZTLfYPfddr5w5XY//IVtyS
bfET+8dc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc
/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc
/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc/sdc
/sdc/sdc/sdc/sdc/sdc/sf/z/yP/wOopNn6
          "], {{{}, {}, {}, {}, {}, {}, {
             EdgeForm[], 
             Directive[
              Opacity[0.2], 
              RGBColor[0.24, 0.6, 0.8]], 
             GraphicsGroup[{
               Polygon[CompressedData["
1:eJwl1kPUGFYQBtDYttHYttMkjW3btq1GbWzbtm3btu2k9z9d3DNvVrOa903i
hu0qtg0SKFCgwCQK+n8N6D0DBSM4IQhJKEIThrCEIzwRiEgkIhOFqEQjOjGI
SSxiE4e4xCM+CUgYMJ/E/EESkpKM5KQgJalITRrSko70ZCAjmchMFrKSjezk
ICe5yE0e8pKP/BSgIIUozJ8UoSjF+IvilKAkpShNGcpSjvJUoCKVqEwVqlKN
6tSgJrWoTR3qUo/6NKAhjWhME5rSjOa0oCWtaE0b2tKO9nSgI53oTBe60o3u
9KAnvehNH/rSj/4MYCCDGMwQhjKM4fzNCEYyitGM4R/+ZSzjGM8EJjKJyUxh
KtOYzgxmMovZzGEu85jPAhayiMUsYSnLWM4KVrKK1axhLetYzwY2sonNbGEr
29jODnayi93sYS/72M8BDnKIwxzhKMc4zglOcorTnOEs5zjPBS5yictc4SrX
uM4NbnKL29zhLve4zwMe8ojHPOEpz3jOC17yite84S3veM8HPvKJz3zhK9/4
zg9+8ovfBCx/YIIQlGAEJwQhCUVowhCWcIQnAhGJRGSiEJVoRCcGMYlFbOIQ
l3jEJwEJSURi/iAJSUlGclKQklSkJg1pSUd6MpCRTGQmC1nJRnZykJNc5CYP
eclHfgpQkEIU5k+KUJRi/EVxSlCSUpSmDGUpR3kqUJFKVKYKValGdWpQk1rU
pg51qUd9GtCQRjSmCU1pRnNa0JJWtKYNbWlHezrQkU50pgtd6UZ3etCTXvSm
D33pR38GMJBBDGYIQxnGcP5mBCMZxWjG8A//Bv4/QxKSgPjEIy5xiE0sYhKD
6EQjKlGITCQiEoHwhCMsYQhNKEISguAEIyhBArIrILT4LcB+8ZMffOcbX/nC
Zz7xkQ+85x1vecNrXvGSFzznGU95wmMe8ZAH3Oced7nDbW5xkxtc5xpXucJl
LnGRC5znHGc5w2lOcZITHOcYRznCYQ5xkAPsZx972cNudrGTHWxnG1vZwmY2
sZENrGcda1nDalaxkhUsZxlLWcJiFrGQBcxnHnOZw2xmMZMZTGcaU5nCZCYx
kQmMZxxj+Zd/GMNoRjGSEfzNcIYxlCEMZhADGUB/+tGXPvSmFz3pQXe60ZUu
dKYTHelAe9oRcBS1oTWtaEkLmtOMpjShMY1oSAPqU4+61KE2tahJDapTjapU
oTKVqEgFylOOspShNKUoSQmK8xfFKEoR/qQwhShIAfKTj7zkITe5yEkOspON
rGQhM5nISAbSk460pCE1qUhJCpKTjKQk4Q8Sk4iEJCA+8YhLHGITi5jEIDrR
iEoUIhOJiEQgPOEISxhCE4qQhCA4wQhKEAITcLz+9g/94ic/+M43vvKFz3zi
Ix94zzve8obXvOIlL3jOM57yhMc84iEPuM897nKH29ziJje4zjWucoXLXOIi
FzjPOc5yhtOc4iQnOM4xjnKEwxziIAfYzz72sofd7GInO9jONrayhc1sYiMb
WM861rKG1axiJStYzjKWsoTFLGIhC5jPPOYyh9nMYiYzmM40pjKFyUxiIhMY
zzjG8h83wYXb
                "]]}]}, {}, {}, {}}, {{}, {}, {}, 
            Annotation[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[0.0055000000000000005`], 
               AbsoluteThickness[1], 
               RGBColor[0.24, 0.6, 0.8]], 
              Line[CompressedData["
1:eJwl1WVbEAYUBWBQ7G7FxG4UGzBQsRM7EEXFFhsLCzAx1qGbLuzcjE03Y2Eu
zM3cdDPWMxa6dC/PPrzn/oJzbkh8Ysz4wICAgFUi42YiM0FkISvZyE4OcpKL
3OQhL/nITwEKUojCFKEoxShOCYIpSSlKU4aylCOE8lSgIpWoTBWqUo3q1KAm
tahNKHWoSxj1qE8DGtKIxjQhnAgiaUozmtOCKFrSitZE04a2tKM9HehIJzrT
ha50ozsx9KAnvehNH/rSj/4MYCCxDCKOwQwhnqEMYzgJjGAkoxjNGMYyjvEk
MoGJTGIyU5jKNJKYzgxmMovZJDOHucxjPgtIIZU0FrKIxSxhKctIZzkrWMkq
nuBJnuJpnuFZnuN5XuBFVrOGl3iZtazjFV7lNV5nPRvYyCY2s4WtbGM7O9jJ
Lt7gTXazh73s4y3eZj8HeId3OcghDnOE93ifD/iQoxzjOCc4ySk+4mM+4VNO
c4aznOM8F/iMz7nIJS5zhatc4wu+5Do3+IqvucktbnOHb/iW7/ieH/iRn/iZ
u9zjPg/4hV/5jd95yCP+4E/+4m/+4V8ek1H+QDKRmSCykJVsZCcHOclFbvKQ
l3zkpwAFKURhilCUYhSnBMGUpBSlKUNZyhFCeSpQkUpUpgpVqUZ1alCTWtQm
lDrUJYx61KcBDWlEY5oQTgSRNKUZzWlBFC1pRWuiaUNb2tGeDnSkE53pQle6
0Z0YetCTXvSmD33pR38GMJBYBhHHYIYQz1CGMZwERjCSUYxmDGMZR8Z4JzKB
iUxiMlOYyjSSmM4MZjKL2SQzh7nMYz4LSCGVNBayiMUsYSnLSGc5K1gZ+P//
+A+Q3qse
               "]]}, "Charting`Private`Tag#1"], 
            Annotation[{
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[0.0055000000000000005`], 
               AbsoluteThickness[1], 
               RGBColor[0.24, 0.6, 0.8]], 
              Line[CompressedData["
1:eJwV0/l/DwQAxvHvNuccc2/ObSmlQ1KKcpRK6VBJBx1ypBPl6FCUCEUy933f
932fY4Y5ZsOMue+bjTHMvP3w/vwDz+uJbtGuUdugQCDQX2IYwEAGMZghDGUY
wxnBSEYxmjGMZRzjmcBEJjGZKUxlGtOZwUxmMZs5zGUe81nAQhaxmCUsZRnL
WcFKVrGaNaxlHeuJZQMbiWMT8WxmC1tJYBvb2cFOEtlFEsnsZg97SWEfqezn
AGkc5BCHOcJRjnGcE5zkFKc5w1nOcZ4LXOQSl7nCVdLJ4BrXyeQGN8niFre5
QzZ3ybk/YHAgEEQwIeQiN3nISz7yE0oBClKIwoRRhKIUozglKEkpwomgNGUo
SznKU4FIoojmASryIA9RiYd5hMo8ymM8zhNU4Umq8hTVeJpnqM6zPEcNavI8
L1CL2tShLi/yEvV4mVd4lfq8xus04A3e5C3epiHv8C7v0Yj3acwHfMhHfEwT
mvIJn/IZn9OML2hOC1rSii9pzVd8zTd8y3d8Txva0o4f+JH2dKAjnfiJn/mF
X+nMb/xOF7ryB3/Sjb/oTg/+pie96M0//Esf+vIf/fif/sQwgIEMYjBDGMow
hjOCkYxiNGMYyzjGM4GJTGIyU5jKNKYzg5nMYjZzmMs85rOAhSxiMUtYyjKW
s4KVrGI1a1jLOtYTywY2Escm4tnMFraSwDa2s4OdJLKLJJLZzR72ksI+UtnP
AdI4yCEOc4SjHOM4JzjJKU5zhrOc4zwXuMglLnOFq6STwTWuk8kNbpLFLW5z
h2zukkMgxP8JJoRc5CYPeclHfkIpQEEKUZgwilCUYhSnBCUpRTgRlKYMZSlH
eSoQSRT3ADBr3V8=
               "]]}, "Charting`Private`Tag#2"]}}], <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{0.9631687538651874, 7.599901959208498}, {
             1.513328080963996, 2.3103525978855317`}}, 
            "Frame" -> {{False, False}, {False, False}}, 
            "AxesOrigin" -> {0.9631687538651874, 1.513328080963996}, 
            "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
            "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
            "DefaultStyle" -> {
              Directive[
               PointSize[0.0055000000000000005`], 
               AbsoluteThickness[1], 
               RGBColor[0.24, 0.6, 0.8]], 
              Directive[
               PointSize[0.0055000000000000005`], 
               AbsoluteThickness[1], 
               RGBColor[0.24, 0.6, 0.8]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, 
            "Primitives" -> {{{}, {}, {}, {}, {}, {}, {
                EdgeForm[], 
                Directive[
                 Opacity[0.2], 
                 RGBColor[0.24, 0.6, 0.8]], 
                GraphicsGroup[{{
                   Polygon[CompressedData["
1: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
PfjWha+M9eWE/wFo023U
                    "]]}}]}, {}, {}, {}}, {{}, {}, {}, 
               Annotation[{
                 Hue[0.67, 0.6, 0.6], 
                 Directive[
                  PointSize[0.0055000000000000005`], 
                  AbsoluteThickness[1], 
                  RGBColor[0.24, 0.6, 0.8]], 
                 Line[CompressedData["
1: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
ndPQWe/RPSRE1fkZVIfiPfcNPklbkHBPvdfgF9ob7i9+H2pNwv4UoWKni3iP
TQfSXx0kgRtaH62HWKStdVjQjoTqZ0pFroijbwiWb3UgwSLWi/vhAvY7NSfm
70zCO/kp4UXo/8LChTO57iQsCcqo+or7d2WD7cXOkySMGzQ8McX9tYx3dRmf
DwnuV1oV1uL74/+OJiv6k3BbZcchHtTnXTy21iiIBLmcy9xDqL/UOS3u2HkS
eHh/d6oHY/98Zj8OvERC2vGLl/4g/jAwVXolAvmslTSTxfkT+FQcfTuGBJbK
7EQcyhkGuTvy4kmwK4x1OBOO99xp1Z+Sa+g/XfuIHOKIVOvY8hQSnPfMS/6L
+GCBmVJ5GgmzVRXbTC4TsN1AsqE4nYTld6KyrREb6549lZNNQi3/eZ7MCLzf
wsfWpuWQcDOnkfkvCr8HybPiMfkk7EzPvGkSg/trubO4fzHyb6DwOjeOAKug
4o1Hy0go0eGt23IF73d4c/L2xyQYHVjX25FIgNd/LA3FKqzfFYrtcZWAMzzd
wvNrSSgt5MveGk/AQyEzlS8vSLCaWqdfif60bsfdKn5FwuLoLRpmiFVHcpwu
NpMwuEPVanUCAbcFE2P3viMhizKaKkF5tLo6tbidBKktCj0lsfi9o7hH6vtH
Evha/whYRxPg7P0g4O5nzO/JUxFlxK35fw859pDQl3lvphz5ia16Ui3/Hfm8
KCg5gf32WCns7ud+nD9Pc+05rL+BxSsqfpiElTzKP1Zi/40871tuMELC6+GZ
xx0oJ48uf/7nDwm/Lzjnr0V8uPIFX9ok8hVyTaQf9fkNpvu3zZAwZSoh/R77
bV/UR98hLgkjnHIpIeS/J8zjSeQ8Cq5bX77XhPHE1ZWWKi2g4IVPmzGB8bzL
TnavE6RgSpYX0tFfbMbYwAFRCgxmO0sG8D1jv0iVUXEKGKyp1d6IKSe5zeek
KQgTV/+6FPuvwemIkjiTgriA4kE3xH1H+4avkxR0hJpr3sF+nbDbECO3hIK/
C9pzshA3veqRzZaj4Eu/gnQgzmvL5V3higoUfD8Sqk9g/FF7uoeyVlEwqrBu
RAXjM300tEVOmQJFQfnInTg/M+ceXb2uRkGlHlv7PcYz+ThkYNFaCrSyiL2V
aO8w5qF/bj0Fx84eMmnHfg62u5M+qkPBGCF+Twz7XUVeSeYQTUFPytNES9yn
fZbCKfX6FMg/HY7Yhfuq2GyTjooBBRlh2Y33cT8VNdyfvGJIgeNpemUo6t+c
Vf8wZkxBle33V39x/zR2Z3zdY0JBPrG+pxbnz8ugQSbXjIIELYVP3ojpBdYB
/Pso0FvTnM3CeDaumseysabg5OElHX8xHgXh4yO5BygwL42pEkF9wYuLF84d
puChzYTladTfKlliu+MoBV67fTi8KJ/+m82f6ID+OFX2fzCeT4c9xrucKDgj
3r9BFPGR2FNacm4U+K0/UiaJ+XjNyjbae1JQuJW1aD3GG+yZ8yTDC/NlNlpI
oT6hGSDc601Bd53NnwPo31Wh4QnlR8F+S72CP8h39WB9q3kgBdXOS902Ibbg
plteDsb6dWnv08d+sfxy1qjyPAUlYjETDxHfU/B88CuUgpfH3kUq4jzsKLx4
mbxMwc3jCzXDcd63P6zt2RZFgS3LabExYuXv8uUesRQwjTvHV2F/ElHXJa7G
U2DSdJfXFv1V54uMPbpKwcjp2UXx2A8h8jYHPyVTYLbJ6c4LxLzFVpbTNyjQ
fKuY5If7pU+1rU/2FgXLzJ6Z52L/H0+KX6CejnwEzcsxxHialU1qDbMo2L6M
qyaBcjq2gnPoHgUXYu+o+GN+ez4GsU7kUjBu3d80jFilVK8iJB/7s/VoVBL2
m3nIVb7YIsy/fdxNCOP7uV/yX8pDCnL+DCzXRX8l2zalZpZTsK3dOOI86r/S
SZrIfUyBTcuM/WfUr9S/Mb/oKfKlwl+bhPhyVEVzyTMK9nEUPQQx/8WxBywe
PqfghlPDKBdxpOS3G8X1FIiyqMkD6H/YOOdu/isKeIQrZGMQf57kD7jXRMFC
/+qUNsyvwlWXffstBY/5t67IQxxUmBh69T0FiztllU0R74vf9Ty8nYJ1j9Q/
nkL7jxXJ7X4f8f2sApuD+J7gs7vVTl0UOE9LWbsiHt1y5+K+bgo+bPrJfY/1
4p/JUtTvpSBiYjN7GPlWef02d9V3CjZt89jlg/LUTg0Z8X4KnovF1I2hf4OM
j/bjgxRsLdm2uTcSv5eFX6e2/6JgqIQvcAPaj7kueFE6gvl1HRCYQuz88MLn
hD8UzE1W3dRB/aWe2v2eExRQMVbPY1D+r1N0YMc/CqxCS+76IBabGuyVm8X+
4OM1GUU+zdLyP0xxcf/YJDZf/X8+sVpNjbwc2Ou5Jj0T/f0J2VObys8B3z/r
7//f35Z1zZXuCznwsbvwvRTGbxPmXaUrxAHLmJe7rPEeGZwVfi0gygGXjiwN
O7SfZ23U924RB1akZv4IRPuojB9CKZIckA45t78Q70PZ9oSttjIceOzCflCJ
9jXxc3ErmByYfyKXsxv9N+59OfWTzYE6pactp1B/XlfCmbscDiwVU9ltjHzd
ZHKljy/lAHN+XYo74qIbyW+XL+fAi9KG3Dzs99cFk3lfVnDgYmL41ArMb6dt
ev41RQ48yDrwm4M4L1Luw+7VHOCJ7r/aiPYho39X8atwwO9j/3IZjHenbnJ2
mRoH1ou13lmN+ayWOb/XSZMDOgEqwb0ot1BeocZax4HDLiPaA+jPbucw1Gtz
gO1yNlAL4/c8qHfRayMHKpt77zdhfoyAC/MW0xj/7pN+cpjPel5GxQs9DuiX
pp9n4P1NjDF94LaFAxO5r7s4eE/3Lg3vkdzGAZ+uq73X0V53kdi+UkMO1Ate
0s5B+yGFNWJWxoibkq4XY7/W5yqJTO3iwFm3py80/9+vrjvNru7B+H2nA7KR
D/+6N70aeznQSIZ7R+C8fi36r6rJggO37ltM3MX5C+j8MuRgxYFjIeMn32F/
bLra4si14UDPb7GpGsQ5xLh2wkEOyHW5rbqP+p3T7ocUj+B7kq9XXEL/oH/8
U4UdBxZeupm4DOVHXecKjY9xwDDw3eUdyM//AMp0oT0=
                  "]]}, "Charting`Private`Tag#1"], 
               Annotation[{
                 Hue[0.9060679774997897, 0.6, 0.6], 
                 Directive[
                  PointSize[0.0055000000000000005`], 
                  AbsoluteThickness[1], 
                  RGBColor[0.24, 0.6, 0.8]], 
                 Line[CompressedData["
1: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
HVTtlmWDkrJLlQHqeaShlpW+mg2Sd2NEnVFfZvbbX9qosOGPesL5FNSPnaGu
icAGNlhdPOVmh3bZlEctT7TYUCrc9UYO88melnI13cyGJXvW0D+g/vW2fSUH
t7HBV++jYSjWO5JYuiRwFxuyBaLvr8HzWxz0tiwyYYP0H7s1/+43WXa967wF
G258+Kk8hvqnDcXMztuwYeL+mTJ1tEsoZd864sQGy3fS3D/R//FpZnebGxsK
9vpOTmI/Vk73O7W82ODlGxV0aZSA2sSeewnH2ZDD4P4kjvf3+0uxrUN+bDCV
EroYjvaFy6iPmqfZsPDGhvofiNNvpTqfOceGY0OpSS5Yr78VN1/lJTbIivCm
Pkd8d93e5pkINgzdKJo0w/wamftbVseyYVujVpsC5tfbfVt6fwIbekYerPp3
P+9xeb0KSGZDaGxd5SDyoeZa1XrjDhuaXlUWSyCfIqq2Lrn32XB857DtGO7T
1x5VIVWZbNjXVJ0/iftzd47KxvpcNlSlqEek4H4VO5p7830hG3avXjoxiPYr
nGXlDaVsuPB0epCO79F6k/qMV8/ZcM3qgow+4gtcu3xKXrAhrki3UAHPVwak
K9x7g3z+iXvV2Il83yz/dKWBDWX5zYn2uB9VXm2JPNTMhrmwV5emcT+smcm2
0m9jw9ENBeGPsb5rL/V3s9rZ0BgbZxnznQBVC8aJ7i42DATOyZDY36A995fs
Hjbk38tcaYv7XUCwMPrYIBscVq5kuqB9aCzrjtIYG3xSlb7Y4f5W6lNf3j3J
BrvD8b1cGK961ks4YZYNcj1rn7zCet6t23pRn0bC46P7YhWRr1i/4PCBhSRs
u3X5hxvGu2CXqxzBS0KdpIpaEeLMia2BCgIkmMsVSIvhec8zIaefi5AQF5lo
Zov5Oi1ObN7HIOGiW3V/6r/3I1youZ0k4bRGdAaFODqLoeMiSYJGn4SOXQd+
LwSvjOqVISHX+vK5aLS/yHrS4CxPAjGa6S2FfKifEuZvX0PCqnRDmjrOR8TJ
aY+xCgkr53U3Hsf3yL45927FehLcLZOXm2M9tyq/MBQ0SbgWOmy1H+v9ujM5
JwJIiCFyhydRLyctogKHNpNAEzq7sfPfe6Emf2H7NhL6Uvd4aKI+f0mVNacY
kgDnz0y/wPvq1h/kM7qHBC513cMDeP/P+AUf0zYl4SDv3/ha9N9mmffhggUJ
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
                  "]]}, "Charting`Private`Tag#2"]}}, "GCFlag" -> True|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListPlot, "GroupHighlight" -> False|>|>, 
         "DynamicHighlight"]], {{}, {}}}, 
      InterpretationBox[{
        TagBox[{{}, {}, 
          TagBox[{
            RGBColor[0.24, 0.6, 0.8], 
            PointSize[0.0055000000000000005`], 
            AbsoluteThickness[2], 
            LineBox[CompressedData["
1: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
H5/qskw=
             "]]}, Annotation[#, "Charting`Private`Tag#1"]& ], 
          TagBox[{
            RGBColor[0.95, 0.627, 0.1425], 
            PointSize[0.0055000000000000005`], 
            AbsoluteThickness[2], 
            
            LineBox[{{1.0986122886681098`, 1.854466391070933}, {
             1.6362127879825386`, 1.5}}], 
            LineBox[CompressedData["
1:eJwdV3k8Ve/XPTRLynTd4ZxbqIQyJ4XOJkOEBkNRIUOZCt80KURJKiSNKJSp
IrMMiTI2UCpDFIpMURkqqnvvu3+vf3zWZ+1n77XXs/dzkHXx3eYuTBDEBSGC
+N/vyNkzjpu+mgfE//9M0fLmV1sdMkXgjFSxzJTxH7q5pGWyfWo+nK1uX156
4C+daVBdW8daABDGXllnzaPFR6QYPxhi8KtnThE7jUcfKt+ipzMlBt6J6/TW
D/Po+3pyHiuqF4LMDs2fZ37waUuTuto+/UWwczw3/xTwaQ6zdzD20iIoiyYl
vcP59Nqm8uS6nkWgM7Ni5rZ+Pt2vKqd5QFEcVCYLLTUCBLSilbyU8X5xGBi3
e97pJaDD+lyi+rLEQco33N6KJaCd/Xf/fT4oDo/CQ1ImFQW0X+vE0z2yEiD6
3WS5pLqA9gqYKhbaLgHjJf1UbiufHpG0d/8VKQErM/VlK6/z6ZotVQknyySg
Mco6sUiWT+86penQPigBYoMpdP9dPv3QL91eRVoS7r94/fanCZ8euvqfQTYt
CXYBu+5K1/LovHF2UqCHJBTFlhzuDOTRK39EP3gYIwnzG0K16uN49PSeg7zQ
IkkYuqqjVGTFo5v27BibeC8JaVs6TMKcebTDeKf2Mp4k1I8+q/D4j0cbPrHm
Ki+WAsfEJXduYr68qeghJkhB9/DIJCeeRx9vObaAcJaCqWzlSeI6j5bIbvH8
ESwF71zuXh87zaMjAmuOTiVKgUdr8Nfk+zxa603UkWVlUpA66jdL7DWPfp1V
EXmqVQpenRdZMF3Eo9tmR7RR41Ig11WlMfyMR7tYKWbyRaXhku5e8vQ/Hu3p
9vOoqoI0zJvwcdUc5NFpVw6Kl4I0ZIzve3S/ikcv6ZW+csdeGjaVOxFJP3n0
BZnXl375SwMnvvv8jT882iixR6I0UhoOt32zUVTi09rseXfGkqUhbV/xags1
Pt2ywmdP+kNpOKF53C3HmE87aevP/tiI+Q8Z2xQs5dOxlOdIfK80xPrP2iCj
wqcbN+xgfZmSBsMNDjeXreTT+7z7N1QtYICKzc4qL00+fetQZoeaHAM0H1Fm
O6z59Dz+5Xm62gyYb2c4kLaFT4cOyVZ+NmPAkT+HRH4gfzepP1d5NwOmlSaD
fbchf/O1E8uPAaoDumLrcV63bPvFyQljgH53mXeqDp9+XCYx98dlBtzxeSfy
zYhPl3/JJ7vTGfDm2d53Hnv59KwASjmkhAGRJWFkZiyf9lb52/3mGQOytA+u
ojP59MSfutoPHQw4us4653gyzleViGnSVwaYfMxLIa7y6ReKB3LJfwzYfPPP
l8mbfNouPUFju6gMSMWJp/Ujtr4h6N1CysBx5aXuQji/n5Tdn85fKQN8Idbc
lc182u3LwcJIXRlYPafyVs57Ph3zdtH5l+YycE17fPhCE59+Up0m3GovA4Jk
r7+MZ3zaqmlLTYaHDPRUZ8eEv+XTF9bx9244IgOWIbcbZtbx6asxB/zuhcuA
bl14hFQVnxY7qmTXFScDHWHhKz884tM/frkH96TIQPwd65k3n+I+m76D/BwZ
+CXbGJzzkE+TyfsHbCpkIFuohGX1hk8f+qOQ8+y5DGhI3U/XLOHTAR13GsTb
ZeBscO3mF418etm8ph0qX2RAQWjz1bLvuJ9SR44tGZeBnOVnZ8z8hvOy89Pa
Ib4MsLzrC568wnp2JkmR85mw2TU7pLeDTy+ssk4TZjLBMGb7l745AjpQL2W9
7VImNM+zbzvGFNA901zbMDUmTHCn32cqCOi2lqDn5/SYsGJub4GMnoCuC4g9
6ruRCf6Do4ejNAX0wMMsdXUbJmhojHktUBHQryemql474fl308a9xgJ6nmHD
sJU3E7Kd9cUs9AU0w6DXJ+swEyYDOAYlrgJa6OIb/lAoE4ZNKxpv+wro6xZL
t82NYoKn8fV7E54CWqk1W2LudSbMOvzxdOdOAf1A/Hn/0G0mVFxud9l8QkC3
77vs+yCbCRs4eQuDLgvoLXlLzOxKmPDwRXm/830BXW+QK/L5KRPMWMuWmBcI
6Jfr+0y2NTLhbKp6vkcLvpc+o+cz2pgg+Z9LtvQLAS24Wur6+RMTllpeunKs
TUA/fsS1mTHChFzCZXLosYDu4szsFvnFhKk17upzcwV0vkFk2LSACVaZcfvv
FGI/65RLX81jwXFb/fy2DHx/pwemoyRZsD+mQKm7VEBvJp1LtCgWnModbqp8
JKB/Svx2q1nOgnYhryeddQJ69NWYj74aC8JtnNYLVQto1sLL65LXsqBCq79u
pAH93Ki3etSQBUYvNm7vqsL33DH4yVILFkhkmsS/axLQTbL6Bqa2LFDzhHdl
XQL6VNZTSVtHFpTNWNUf8FVAB+W1XbHax4Li76nsvr8CuqTuvayWHwtKB1ZW
7P8moP+Wvl44+xgL3pYk+LYRBHj9CyuqCWXB10/qzioCAV2lFrnX7xwL9iTp
aCgLE+A44BwwL44FqT55x7YzCCi4FKxyMYEFbzadfhMqScDLCsfPM1NZUH5y
+FYa4tDoq537sliQP7ry5SMxAkYSel1LC1nwwo3+dkaKgAuyutXTj1jQFfwk
MlucgPar7bRiLQt+rDvl8luEgIr8TdyNjSzwGDhsYCpNwMSn8BS7Fhbs0o9r
GMf4l9oDIrYfWXBhYu6eZoqAmnbz+A1fWKDd42xoupSA3GmJaLlRFvSd1Ksw
lSNA1U5LfnySBSOGsWHn5QnINDG4kv+PBXk/nTQKlxDQ4R7AdZvJhoAOscXp
GF/dXPZ7tigbkn/llP/mELBr/uMdCZJsUE5f2L6Ti/0dGz0iy2GDj2rhSD9J
ABEXce6GHBvo4NusRIx/UnC7ZoYSG4wzOo+Oswm4lbza3lmdDXI3er964/lD
FYsDc3TYcCxX55sm1ns4pbZjjGZDPpmhlLqCgDRfdfnlpmy4GxjDsllOgHLT
4DwrKzaIGt09fWcxAQb7l63ztGXDksjm+lomAUc1qnuO7MJ8vf6/d2A/dpr5
ioGubIh7/Ez1HOYf5vJoPy826PgPtNRjvknfV5YO/mwwW9qv1KdEQLfn8RM6
R9lw8foftSx1rP85ZFIkhA3qRspRYmsIyOuM+tgczgZnhcikA6sJSPwa5Rh1
gQ3TrP/MsnUIyA9Mu6kfx4YLlWXz09YSMPZWt+rzDTacmnuIZUoToCsqGD6R
zIajdcWc10DA9ieDBqIZbKizPK/fb0yAfr7h4MVsNhxsCVxpjni1xn1ifiEb
hC2UF1AGBKw6ysoOLGOD1oB4u906nJ8Xn8R6qtjQmFcXZ4r8cEypiW49G/4Z
vLz/BXGDWnnAhUY23OepTH3RI+DsN8+St2/Z4D35kS+FeqqiitTEO9iw+p92
cvt6AqaHeH+Nethgmvt0wTbUN+TD0PHtZ0Piy9tusxGzvM2EL46woZUdf17U
lADe3p1HMsbZEOz4aHTrRgIsdaMLiqbYkM6vzHtqQsC1ValvyvhsUPBStorA
eq+GPn8vnskBXsr7D5dQf/4+xvJ7Ihyw8L9uL6pPQGVZXMzlRRyIsRT61qBL
QFCjrslhBgc2PjDOrUU/W+cGu24mOWDGvKXhhDxj0IFYIscBUTH/smDsb2fg
3tWDCoh7YoodsZ+x5ufszFUceDfHMIiJ9ba7mDc4aXIgaNUN3xxtAvZYGtou
XMuB7PfOmiHIKyRntRev50BaQrdrD+ZTOCnnaWfEAfHAOaeVkN9g1kV+M+OA
mnrorxT0dyyxYl7wZg5A6sm3N1C/sesG49m2HFhQKcpbg+fJxzf6zjhwQCWA
EV6F8yP0Pe6fwIkDc+bdV41BfrFaboq/OwdSznBdU9HfvJOswU4vDhxzXRi2
1JCA3e53e9f7cUBKfk+KA/r5PHEoI/4QB9pCaxKM0e9PDdIbvwdyQNbwsV0U
3sesBVSb3kn0R4LRUIt8ZsqdfafCOXDbMl6vEfkTu2eKVp/jgFYMLzQV+XSt
ba1/YzhA5aR22RnhfD6wb191hQNzI7zeV+D8bdhyW94+ngNvJjMiQjYQkCHs
9ywoiQPx5jEaj1GftmdNR0IqB/ofXNJ0Q/2Sq509Cu5yYP+A1vgcvK8X+2vC
ah5woPTBp8pi9HtLvua6VwUc8NIYctyM+yP9X8GttyUcsLu2dFoD/bnAXVDV
XIF+PX7V9UOLgDW2r7KfPUV/hUQexWN8hPDmI+X1HOC2Cvta4L5VB2UqZ7zk
AOeQx3J9nC/yVtX7C80ciJW8L2GDWPOZ8UWfVg6oS5vny6PfKn9zd5t0Yr2Y
Pl1znJ/rDSZb2D0ceCtd8+IH3t9qB+bhwT4OHLrG5Gmj399cZn7MHeKAlfeA
iKI5AQsXlVw6+I0D7vp//Y6in98nclLVJtDv/LVHm9A/ta86SwZ/c+DeftvZ
t7B+7T8/ifh/HFBMTzrQhv691tp41kSIBL9DIlUDmP9KYGj06CwSRtISP9uZ
YX97CtRjREj4E7uoZRLxg58bg5UXkvBl7cVRAdbzPRV28qkkCeT7k4dPIO51
OGxkwyTBuvpc8HK8z/Zo8dYekgTF62K5eogv5TANPGRJCPzJTCxCfcdDV8QO
LyPhiDRb3Bbz1+cUN+9TIkEu51rWCM6zznEJsR4VEsxCrVTkUL+ku/tWa00S
VJqPz/qMvEtrQfqTNSRInLyYoL2JgJTqj0xlPRLWMyT/PLAkoMsiKT8GSOjo
Djp8Ywu+xw6xwd+NSPz7O7jxGeJQbaUIczMS0kaa9y/aTsCA3OPWZEsSAiS2
ps61w+/vSMiR8a0k7HjWtD3dloBTgaEHaTsS2KtCO6e3EmC2q/BdhAMJF+w/
pV2ywe/xtuHUF44kbFt8xvQI4gWtLaMiriQc+iNZ1IQ45qZIqfE+EibvXQQv
xOkUf+EJbxIOm5/5WYf5w+fO/ZftSwI96+KxEmsCVjx3OdN5kATTyR+aG7Ge
nPDKkplHSdBr17qus42An3/c4hVPkOCrYjK1GOOFF0+sNj+JeijH4TsYL+ud
HLf3NAmLB5wWJWC/37o4j4LPkuARIWYXgvz74emHly6QIO3O0861ImDeh8KY
2xdJ+Gp5SMsUeaZJ9qYHl0kQmFk1ggN+z72UJouuk1C4SvOjwB73I8khtjSR
hP57a3KHkXfMs1YuTUbeJ1fOfCcBG00knxemkpCfPrHjCGIL/ZBDWZkkuK/a
ltC3C7/fontXJ2eRkLn5/EFzJwLCyBDxi7kk/v+xpCfXGd+vpd7iJwpJmF0X
PkPVjQD7k4V6biUkTDtdaHvigt/vc6/iNz7CfGOXTvrsIyDgO1tTsQrv95BI
mpAHAceEekRn15Bwa0Wc6188XzzfWrW7ngSNoPh/FxBr345LKXxBgsunc7p6
iNXGsrzOvML7fpztRe0l4LbI1VibtyREKF9pq0Q+RkODWtxGQtv5LRbVWP+l
4lap/g4S6nnGQWdRr/eRnKC7XSQ0lVUkeyNuyf3l5PmZBK813yfeYv+xVRVP
lvXj/Jway1iD+JFy5N2uIdyPSXOOE/ppYveCujyK+i95+NxDPFbbt9RkjATt
u8Zt2xCTbktrJydJaHYJjK7bQYDz4/qZyVOIK3afSkT/Z5n8HTL9R0LfbPW1
0chvj+4IHBGQcIAbzG9Hvz9H+lVEzaBgwe6EG5WI4+oePlSeQ8GVW2N+3/H8
28x43zoRCoxfu+unII5NmxjeLUZBVmQnfz5ii+NRquPiFARVPnAsQz2Ul/yG
U9IUzF1re+8g7stzrz3K4iwKLIZldBoR97n1jSaQFNRoVnhKI/7tuu6i/BIK
qu6N85cjbnrxWSZTnoJGlcgeDs7vm/NW5xQVKBBdfGPzTdQfvbVnJEOJAhlh
a88J9Gtb2YiRvAoFnuGs5SuR/3eq7FqCOgXVqvruz1Hf1KOw4UWrKXj+ramk
FvXtm/AzPKVDQUWbW9Uv3LdQ1zup47oU+M0LvLUH90d1mTLDiaag0vv+qkqc
974dookNhhSk3/EvysN9KLRer6tqQsEDo/X563B/Cp7fn7pkRoGOwQ03eTx/
i6fxfsKCgiU5o5tv4vnGnrRPW7dQ8EdOLs0D+wswec7ItqbghPekxgbE9ByH
oFnbKZAXIiWFcN/1lGawdzpQILT6xMgw9q8g6jGWvZsCzaQgawWMFzmzeC7f
mYLXc1LzUjHeWLLIZZMbBdDraWCJ/N9fmbOu7kM/Q5kLjfD8B2e/nx+9KChq
cFdyQn17Yg9pyx+gIGDjAu3/NqMenkyjuz8FsVuFb+ah3lD/rIq0AAp63lTc
ycF4QitItPcIBfahkmXi+B7uV3heQR2nICIsZE0j+vvka0OLbTAFqQmXTq1C
bCdI3XE+lIK61h+PFHYTsKM7xPzxaQrkflOvUhHfU/DP+RZBgXVb+GoW7s+m
/DPnyfMU9M7tavB1xfehuOazaTQFCp3u2iaIVfqXlfrFUjDwtuXLWnwPiOgE
iWuXKRAzu337DOZ7krtgouwazkt5tlWLI74Xy3Y6foin4MDXVfaKGC9caL/j
700KhkvOlIztwftUa+2TScH4ysxqHcQeNy7P0UilQJV+rDiBel6pbKkxy6Cg
X81OsRH3lY4t5zrdw3xUZ4sxztvWjpPs/7Ip2JS4cVktYtWHBuVhuRS8vPk5
/QTqsQ27NjO2APdB7YvoL8SDuyT/JBZTEPW3540R1isyXZ+UXkqBilqdZRby
L3Rv/M5+RAFD+eU9Fup9bHhzdkElzrfJ1Ytt2M/56PJXRU8piNlcv8gH9SyO
3W1XXEtB+bnBCh/MFyX55WZhA56vIeQHEI9aZN3NfUFBuJbsHW18j7qmZgXd
a6LgckB72HV8v8r363NuN1OwcNRpYzDik/lXI669o2CXG9m4CvH2y1a159oo
KNYXHnfB8x3l8W3HOyh45h1/zgXzizy9+8TrI85bqa1bBOJxoztntvdQ8HX5
ZKkQnp/1L0PRsJeCNSlBm8TQT9WXzdlK/ZhvQO5CsjsBSZ2aDPEhnI/gexEr
8H5N0jrcf37F/phhzYrIM0RfJrV9w/slFy2PQH5i/5z6h2MUJFaKZlthPu/i
8K4rkxSMRd2amYBY1n/tkP9v3B/m3aJejP/TKTa86Q8FzjKsrneIF05/7ZXn
UTCeuHqvC/pnnZz7flqA+1wo5iiF/YnEajc1CnMh6rymuCbWnwzbWpM0iwtr
ijTz/vd9MVrz6rHvXC6cbRDxr0R+Z+SRKv35XIizl9gtjd8TkxDRl/PEuJBP
H967EvkZDuZ9bxdx4Yb8eLMtno9OG5ifKMkF41Kz6uueBJRsvGLswuCC7kml
6Eo8X32ZH7ecxYWvzoEqduhfo82z6UEOF+5Gjnmew/gZH68cu8vlwhIm/8BR
7OcWSyDtIcvF//P0fsQjLrgZ37x0KRe+D3UXDOF9vMybetC9nAsx9hlrfLA/
S5fU3OuKXPg72H3iMOIHUfLvN6/kQng6e8kK1Bc2/ktplioXRt6dLQtBbKkf
n1mizoXxzBmySdjPSsZpGy8tLkRr/evag9hOZbk6ew0XztxZZ7QX67tajkLD
Wi7stXWsrEX9/o4GZwL0uGDjmVXqi/qZQeEzFtNcIA/7PXmHWEeYWV5vwIWs
kE1B3T4EXL24LeeAERfEWrYP/fQmwEb23GdJUy4sY0ylhmO8/qKF2x+accG+
xjU63YuAEYVVC+0t0J8ts14Wo38N2coLpq24sLGMTDND/R37La2vbcX4wmn3
euz3RN3rXk0bLrSor3bLwX36VPC9qskO7zfYu+EjzkNQZ/fIPnus33/67SKM
X3/tjadgJxcUjerlJBBnET/XXnFEPe0fNPgY3/nX10lxDxcK3SxmjSAPhh4f
yl250FWzYNd15N328/Mt9nJBubQzpwn9+T/89IdR
             "]]}, Annotation[#, "Charting`Private`Tag#2"]& ], 
          TagBox[{
            RGBColor[0.455, 0.7, 0.21], 
            PointSize[0.0055000000000000005`], 
            AbsoluteThickness[2], 
            LineBox[CompressedData["
1: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
iPf6HdLuX8qBwz/OJtIx/mhdFfvRcg5Y+OyM4VVCvQ9seWuvxQFJj7PnuDgv
jtsNLcXXcsCxVd25Fe/30uS0lpfrOZCrwZzxXIL4wmI3KyMO3PT3Ve9bTMBG
03bypykHxhwizTP/Hz+xWOj8Tg4MrugsXIf+m5w2bhKw5EBzyJlFfnh/yZKb
PZdtObDH5OLgNS7uy1/Rs/P2HBBzVqtMwXhyGpl3vZw5cPpsuZIGnn9+gdXf
dpgDhVsuqHKx3v3Oj7vXe3JgS93FI2cwX1XiwMNbJzmwdL/umkGc529vZU1+
+SH/ufo2Eu38YlSz3gUOBG142KaC+NHd+y4XgzgQ0VfqFYj6nN3PJ1oWwgEN
k5zUbMSpq3Y3zYRzYK93orsB1q+bYdOyPJYDN05pu3Uj3mh2T8HmFgdMEuKu
Esj3IY/nu3NJHMiM05tYj/tVx628NSGFAxmTAu9MKQKktR1csx9z4LvVk29q
uL/fu5cHlmdwQHqxcNc23O9mWVrrarM54N0t3/MX3wPZ49l3GvI4cOyq5Qsm
2q9zxUrrijnQWh7ZIY77frVlbfq71xz403BvMQPxFZ6dPoWVqOe5iS0FeL7s
3CPVhx84oP041cIU3yvyTunn63UcsGHN7aaxCdB6tyniaBMHGj5VFl5CPitm
Mvcbt3Hgzef8Eia+HzfeGpuxOzlw7hR/cAHatW2Zp/p7EHMysvixXz8P8H3N
HODA0QOh0pI4L+ISeVEnfnLgK3Mgh0D7r/FnKRrjHKh03er6FfNp/FizqH+S
A10T7oYeGL9i1lPq1iwHGpOSCiWQ38dVJleNCRLIiRklA3yvYv0Cwob5Sej5
Fh/shvpdccxeGS5MQtr46e+3EWdMmJxXFSfB61lRUynG97gYeOG1NAm/PwwO
z2C8bttTRhZMEgbmRZdw0d4SJtnUSZIQKt9Cc0Z71DPmBld5Eg4uaFCJRz5n
ApZFDiqRcLruQngK2iufvaxzUSEhZI75YyXqueaM1MLOFSToPtUn9MWxn87O
u8y1SPiiVpa3E/U/0JSd+mo1CZ61b2+LYb67ZV+Zqnok5Mydke3Hetq3JWWF
AwnGrCVD7qiPr23k+V9GJLhIxOUYIg7QUbmyxZSEnW+utt3F+epbXNKUvJ2E
Q3RtIWG8L4eH/H3GdpGwRvvXPkGct4t+AScMrEj4I27P+x/qYbov59MVW6xn
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
0EIuvKzSPbAJ8/HabulpkOCCnH9bvw6eD3vQJ5IozQVxdlbROpynPJPYTQfo
XMgd+hs/gfWWxcxFL2FxoePXRqETeL7a4t10P4cLlTtPKXhifN6vsacfczH+
8qdac8j/Dmte1lUe419kCivifsm+fatOUZELJ59b1Gvi/f7wfCqjYwkXlOxF
X15DvP1ASuYNZcy3Jsp2K+KMUIXPO9W44GNq2jOC8QLH/qjwq3Oh92+VogjG
265/61HeSi6cGk/bLID6qNEvWRxexQWVS5uSb6DdasWSlezVXFjvSMSlYjyn
7cPwdi0Xfh8SL8pFfy+7DZe99bjwgZ+mxEK9mOeCeOUMuKAh8d9CPcRreJiF
lRu4kClgt+sn1hcXsfvZMSMufHpns7oM9bCQD+mS3syF0Kf+TwRQD30Jcetc
Uy54tNTQehAPLV0ubrONCyLr5A0+Yb636api0zswf1HkOBv3Vav7dvP4XVy4
b+n13gP329k3H7u1LLhQ/WTMe/M/GnzL/lVaY8WFnVHsGY15Gpxr6xhyseGC
cLEfQ59GwPr4erf5vVxIkA0fn0Z7Gm1ibawdF1brPV9VP0eDthkPe2VHLqS9
FXc6g/5g6Pql0IkLF7TIonaMf9B9LmvbIS40TGpFtqP9f+DZAF8=
             "]]}, Annotation[#, "Charting`Private`Tag#3"]& ]}, {
         "WolframDynamicHighlight", <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
        StyleBox[
         DynamicBox[
          (Charting`HighlightActionBox["DynamicHighlight", {}, 
           Slot["HighlightElements"], 
           Slot["LayoutOptions"], 
           Slot["Meta"], 
           Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
              Annotation[{
                Hue[0.67, 0.6, 0.6], 
                Directive[
                 PointSize[0.0055000000000000005`], 
                 RGBColor[0.24, 0.6, 0.8], 
                 AbsoluteThickness[2]], 
                Line[CompressedData["
1:eJwVVnc8Vn8bPrSssnnGOY9QJGWUSknPjYhCKJIiZYUKv5QiCS+KrIgSQpQK
WZVZZGaEyihlC9FQFIXnvfvrfK7Pva97fI/0MTczB26CIKK4COLfl39Rtvfn
mEn2CzWddJ8t3HD6oQY7P42AN++u97pNL7BNr6oqLg5aDNdoi/jfLOawg6Nd
t/lILQPrqKX8H1zn2N8L2uZ9xXnBSq36fxf8/7Jld8d1WGXywZk/XP3CXzns
tqL2qa4ZfliZ13piToGATK2qmlr6cti2xckyqIsA4Qkxie8SK8De6puL8QgB
Z0pNtqvPrIDvZicVNHoJeLhd5viaKkEo6CWlM7dxgZFebc2QphDY1qUymjsJ
YNIGR6OvCcHCg36x6kkCtr4qTantEwKBCKn1p2W44JOyzMZTCsJwTV20WdqS
CxSMZcV0TwpDmP9edb49XBAwdCx8KEsY7jxusX8mxAW2HtZ/G0aFgcc3/pKf
JBe4d/x8cVRaBCxYoXdBhAtcPGeecB0QgejTB57MdhMwIXrQ4dcVEegO9GHV
5hJQbVJx61KJCLx8+Wye5kLA4cCNVl2jIrA2v/7t9jsEPHW/e1BJXBRSs47b
jHoSMBb3n1Y2WxQM5YoL4tUJyPvBuO19XBTsDhRwkcsIWPc9IudppCjEC0n/
7BcmYPbo6Xn/x6KgbFbD/b6Fw3511HLy5ztR0DVvKRV8zWFb/ejevHpeFAKP
Dq1Wf8tha1fuYylKiYF8cvJcOurnzUSM0UAMQpe99Nn6kcP2aT+/nLAVA4EN
W8y92jlskex25+8XxSBLbsm4cAGHHeJdfW4mUQxmDqwJqm7isNVeh3utLhGD
heSTnPweDrs1q/xKYIcY+N68mEeUc9idS0M6qR9iEFZI6Bm+4LCPGStkLgiI
Q1d/alLSCIftbD99TlleHGp6AgWcXnLYGddPCxeDOKzT3O7uksphrxwUv37n
oDh8NakRPtPKYV+VbL32y0Mc3h59m5jdyGHvTOwTKb4iDvnHUvXnpjnszQze
O5Mp4nDeqaKx4zeH3b7mxNG7T8UhI8psle1SAo5s1lz6sVkcxL9fLDPF+NGU
80TCoDjYSK/qVpnisJt1LOnDM+KgJhaUQv/CYTu5ftKpWC4BkqfVJl9/57CT
z2S+V5GRgMQef2l77AfvQiyvxmYJsNA2EFRcTID/mPTzAQMJUKLe5VpzEXD/
9qdcRWsJmDnhFH/vL4ftn9R6hO4uAbnfWuxGhzlsE7NfzEcBEhDXv3U48D2H
/axEhOd7rARk5x26s7WXwy4dzid770qAid0g78tZDnuJJ6XoVyQB3vljsQFC
BLgq/e19/VICbHYr068yCPj5p7bmw3sJmHNqTeOWwPmq4Nt1e1wCrM1byDsr
CGhUOJVLzklA2sKheWG0t7h7a8MBAUkYObotyhrl+25yBk1ISbi8EObUyUtA
v6LDC/51ksD4ezVWWo4A++HThVc0UD9zy4TLGgIi3wiFNe2WhD5LzXQdaQIq
qzK4Ow5KgoXf3tAFJgHGr0yq7x2XhG20dAeZlQRc3bbgqOMlCZ/zttWtoxEQ
F3nK/UGQJCTWDvWuESNgxbm1Fj0xkhBVN6Uyjvl9/+VwsS9VEk7f32h3TgT3
eddbyH8kCXqmAbd1BAggU06O7C+XhP+W8yxfhv7O/JF/9LJBEpIaP6bEYf6e
7+/UC3dJAvuKu7UC8rGa95Wl0jDmWz0PiatxP8W8zq/8IQkVkndPnJAhoP1Q
/9axBUkw7JLbOfIvnoXe7Sv8NDBWVzqxhE6AYMW+DG4aDcJPFZ0oVCLAe3vq
DvNVNPiT3jL+ZRMBfbMs8wAVGkwmlbg/2U5AZ7tvQ+h2GlgWt42M6RFQ6xl9
zk2fBtbN2v7NWgSMPM1SVd1Pg6xIde7fmgS0/pypaD1Cg/G+uofiBjhf2vWf
jV1pcHDKM99HhwAJrcETWWdpwB0zXJxuTgBX1OuFMX8a8KVsHR62IuCG4Soz
nnAadIm6OMlbErC2I1uE5wYNdJJtW3NNCcgRbvg0lkaDsuw0xyZbArqcYt1y
smng2prfUOlKgEneSgOLIhqQe8WCW88QUKeVyzfwggZFGrtP8p4noGnHkJ5Z
Mw1oyXl7P4USEHDiS9i9ThoUnmkY3BREACeu2G6gnwYMvQ4lJ5Q/K2PtXzRB
A+JG/F72BQJ6mIt7+X7RoO6hQrUn3rt8rSsBsxwaDB8usk88i/VsUyxu4aWD
wIyQdfspAmxnR2bDRemgtPWb7o5zBOwlbYvUKDpU3bVxdkY8LfLbvlqODv0B
33OX+xLwpWXyhKYKHRqEy/K2+xBAF4zdlrKVDt09+lL2KOfV377pizYd9tnX
DJWhvbvNxcpVhnRoLbO/dfEiAa+kNbV2mdNBp+lXtgHWE5j1QtTchg4dUjcq
94cR4JvXed3YiQ6NaqKkUAwBRbXvpNXc6cC5FmvwT/63uFVw6Xk6pDkt8VwZ
S4DLXMDjan86HOPlW5kfTUCFyhVH91A6/Gk+f4qN9jYjtp68MXTIme8eHbpL
QMG1i0pRt+hg6iHuK4HvQ1O5zcDidDoYJ9JPOeM77B8R1+2Uhf716+YEkvC9
uTVoV1xIh7qyshoflF+V1qiaLaPDiU1OryKTsb9xXWyFGjrcmV1t6xRPQHn+
HpZ+Mx3izj3wi0rFe9EflGrRTodLFz45mKC/ps0jfOYfUV9v2PXlfdyPrt0J
OsN0KF27pzfuEQG5syIRMl/ocPRebYN/NgHKFmqyP6boYPeSKCNz8D3X07qe
P0eH/xIDlNweEPDewZNlv5gB040rh68/JKCqreT3UgEG/LrjvssgHd9D/meW
t0QZkPI5ZRU/1u9//ouXNJMBe5wsIrqwfiImJPSmDAOquP4O+WJ9lQVp1YvW
MoAWAsJSmH9yyqaDtqoM+LibL1Yd/Z0pl/J+pM6A+rfgc+Ue3r8ZFctJNgPs
W5StgzHfDDdVWbldDBA4ppfihvkovhrlNTZmwKGpwgUZtNc6uXqbszkDFm2y
tzZDPs5tqOrzOoz+zosfGkS5xcZ8BW87Bsh5tYZOY76fWfNsdxcG/P3t5mqG
9U65tRhZeaD8lD3nBvLR6+xzQf0cA37skb15pxDjD/hN8fkx4G2KoNfiEnzf
u8M/tgUxwECoRyL5KQGJ4+E24VcZkJdmLCaI8nzvjCTNGAZMHL8j9Rzx5BuN
ioGbDFjfotwX+JwADQHO5wspDFi8fkeudwUBBypHtQTuMeC8xBlHrhoCNPO1
R6OyGbDwy0L1UxUBmzY8JPgLGXDa4nHDP/v15+jZ3iUMsNh1zHJlEc5PY/+K
vgoGhMpq3XV7hvVFFutp1GG+H7SCBFC/XqXU82ozA4pDA9eGFxNw+atz0Zs3
yL/PmzOOpTjf4Y9VhN8zwC0u51A85js7Nv93Zx8D+iRdTlxA+dgJCXW3TwzY
ZSr8IQDldFcD7qgJBuSuL9H9ivnPOx7yuveDAdkVvX6ulQQYaUQUPJ5hgG9q
sGwYxo9fn/66ZIEB+sVdLnPIV8vYwLcni5lgNHDoT2E+8uUkIfeAjwl26xYR
scj385KYyFghJljst3HrQ7lvs4beWQnUb5sZD8b/sw6ei3Z7SSasGov06s7D
+zpqRayUYYI9822qNeof8nbcNCrPhFKH4Pvb0N9kWwMjcz0TYp/X80TgPhw4
trv+yEYm7HoV+usTztNRI21zwa1MWGal35SFcvmUrK4nO5ig9MnnUSb6l78k
42yxkwntc8/fXcb50DHoIb8aMEHYgHe1whP0n1jOe3EvE6475+76jPq6djq6
S82Z8GNV9Yp36I98dnMo2IoJOj1NW+QwHte3mDnOESbwPXX9exPlUiq5qR4O
TAj399jpUoDzdYk+2u3CBEZnnUUq5m/tcH9whzsTlL3/W+qK/W5IHLuXcIYJ
ft84Y5LYj/56cf1v3kzQStGnt6N8yXKqc/slJozc7zE9h/3OTL3jFBjEhJsJ
6zvlUX7BerFAVSgT8sctxbIQ31Uz6/gbyYSy6JVyezCeRs7BrvXXmdC6sDfV
5DHWa5ImezCBCcv1pS5XIL/3uN1f+t5mQsb34Rj8Y4TNztXvb6UzYfcbw4UO
5Ed0k+3xgvtMULj9zTkB97nxZHVAdQ4THEenW/0z8L3K37itpYAJ30KDpFfj
for/V5D8pogJA4KanRkov8paXtFWzoT/VaocIfCebDFvyX75ggm3XCy+WSIO
4d7rVVqH/VWYOxyI+lW+mYr3mpiwJjJEUycL+U6ueHe1jQln4t5ueIB440vd
qBMdTOCe5tmyH++j0t9ca71uJkSo7fVVzcT3t17PhNGH9rX2D8zxHmyyop0d
HWLC+YODB1hY79djiz/mjjHho+M2wSTkQ1Co6Nrpr0yQVvwhUo7ybz8fpav8
ZMLlcO3v7dhPlXH1laO/mVCbdzQ9GP3VzLmLJMwxgZMmJe6J/LSq6V/W4yJB
b9Oi06LI33Vv/4gvS0gY1WFstsX+hxwtUI3kI+GNtq71S8Q50/oXFQVJeOgp
d8wW9d0CAy69ECWB582mDWW4D4NWZ3fup5GQ3L/HTAblXRHCHX0kCd2HT3e1
ovzaI5rWcWkS3BbO2MnhPfXxXxP9eTUJ504btV5A/bpHT9qc1pLQYdG1RxDz
VfcRWdGnRIK2RG28MvZP1MHBdN9GEpb4SfXeQP6OdRTcrdxCQuW9LDIN60+t
+khT3E7C+dC6kEacnx7D2/mRQELUnGleIO77Oavoi992kmDkyKcVjNh/89qQ
3QYkeB/MXvWuHP+nZJ51pBiRcFKsyuJKGb6/E35eP0xJ0OfYWHXi/Qn09j/N
tiDhMsvd7QPaGxwufBtihfm/zfLVwPm3Mfuc3mhDQil9y+p/93l5R/sXPjsS
An622C9CHJnEV6zrRALrd9mjHbgPd6kFwQuuJJRlGD0wRHkQD89cthsJkkZ8
TvPof03DseDu0yRk7BwNNcZ+y3CvK1p8joTbofsuy+C+T/+xT1C4QELJkvrk
14i5pX5u2n2JhCEH63A+1Jd2TYlx/B8JHFuXhqfYv689zLKLl0mQvvD7hjny
8+7z7NNrV5HPx6Jdzsg/74fCyLQo5NM7ZUMj6tP0svfkxJKQG3Kn5hbyUe2y
durxDRJ0B4QnlBFfvW0VXZxIgue2poLPiG3y9ikWp5DQenjQewfyqa8n2lCY
TkKOZnnZKsSGmn5nsjJJcAxoGjfE9+GwgOOmlCzMzzD3XgTe7wDSTzgqF3Fk
V8lbvN+6q1yFLxSSwCZflAjie3TwUuF2+yISHK5xmA/xPUoObUnQLyPBfKtM
r3w9/q9/Y2xUqCDh161Ii0rE57n6BJZW4/zlKlp6oP0T/n3KvXUkbJu6wd9a
jfciLSa1sBH7k69ebIBYZTLLJbiFBBtFtQRGLQFpfHHR+9+QcHZpc3AoyiM3
bKCkOkkQuuHUHvwC/3cUTMU+vcd565kq4sH8Xb0e+d7vIWFOaxetGd+b9txf
R5wHsJ5UUvYizk90RXnl6k8k3HVTlY/BfpcpXrnfM0bCtZz+xnN4//QsGqnY
LySIO21O9kc8WTO0Sm+SBK6dkuytiEn7VTVTUySss2tIuIjzYfusbnHKDAkt
F2xEV+A8LdH7O7ZrjoQuj+3bf+A8HIh47z3BIeGOxvoKMYw/cMW9PHwRBc3P
ni8UYPyY2qdPFZdR8CH6afQI+n+TmeBWy0fBAzd3VV/E0Rk/P1uvoOBzB/9c
EsYz9AlX/iFMQfX+Se1liCkXWZ1AcQr0Th/9mIbz0uByVFGYToF8+8HfA4iH
7Ie+3CIp+CM8nMSN+LfdtijZlRQkJXwLmsV9fdU4IJkpS4Egd+jeXLxXr8OM
QxXkKXBTati/Eec3wrRv4t5aCtY8OCStgfmYlUzslFWiwOXBrRvbcX7nAkvi
b6miv+nHbQ+w3pmygM9Cmyj4fU9EPBDtnX66aweqU2Cbc1Q6EO+Pv92d9B8a
FDBV8rlD/v1/rlaUOMKmQDjFP7QE7/OQpUBivTYFE34/ZArxvhTu26GhrEfB
jOvxmUG8RwUND2euGVBgx8cbmIf6yfMb3v00pCArjDdYAnFzX0a/qQkFKpX9
V0Ywnqdeg0T2Pgom14e5eCBmL7PyXXKAgkz3DawZvL/b1y5iHLKioP3sFvla
zEde4PhktjUF8RpeK58gH3zBUjwLthSEvSxYz4tYV/TxsT32FFxLWyvshfjv
r8wlcU6ID33Kt8f4H2zdpz+6UHBEl9jp++9/IvrMZtlTFCR3GT/1xPfFc16y
2cGDgjQpxdkLWI+/R1Z5hicFz7wc1TajPqHmKzDoRYGqVNUJR/R/Ur6hnPKh
QCcxbKED+1U5Xt9ufpGCeUXGPl7EFpx0yzB/9B+Tai2JfFv2+u1+9j/MpzhD
5x//D+Q9Hn0NoaBvXHvJFM7fnvzgMDKMAsOR+o1HEOs/qR7YFUFBxuFDXfyI
lT6tLnaPpsAjJGh5O/aTiLglEh+L/BzZfXMa+12Zu/xnSTwFhR+vTPKiPGD1
IZsPCagf8LKR+e/+FR60/JtEQcmFyJgSnJchlY4hyVQKaIPjGztwXo/fjF22
IZ2Cm02XzfZhvBYlk2qDexRExJsV8aKcHV3KOvKAgpxOcV97vIem7y8x/sum
wN3EdKIOsfJTrdKAXApkckJ8nXCezQPiF0cXULAvbCa+DfHoYdE/iU8oKA+M
kRrGfB7v2nH7bjEFFx/+2cSP8kaNm7+zyyi4yjPdYoL1PNNOWlrwnILQMK8b
vIjDIkpbHr+gIM5IUsAc+ZOKtrZ4UkPBIlWH+R3oL1x0OKmwnoI3qhOhfoi/
GGbdz22kQLPyqnwM4p6ZJb4PXuG8+0nuLMf9Lj2pyUxro2CFdjlfMOJL+XEh
8W8p4L/9Zy0L8YFY45rQTgpKO0cfK6P9+9KETp/3uE9905oExud7cb/S5SMF
d1ezw2Ywvx877wQf6MP9+S3YZPjv3szdU9AepOD4lt0/3ZE/5aa27LWfKJjS
ONs9hfzf7t4oITxGwdcfxlZ26F8v473D9Djy1fafNaBcQqDpdudXCq4POe6O
RvnPk8vqnk5SYCZofVkP/bk+Ceq5PkWBEfmcyw+xtMfWMY/fuN9JvAr9qP+n
e8XnPX8oeKLr7vkcseDs+KDsPO7X0KWzq5DvfSm572Y5FMj2lywrx/z5oje/
auZmQb1QqH0p+psKMK2+vYQFzUnrqGtov3NLyzM3HhZYmAjo8GF+h654VWjy
s6CGU/VwB/Kl5yfQxLuCBWpLDg6po/0iq91Db4RYcLjN0VoP7SMyRvgTRVnw
YGz+uTPOV5H+dd1jEiw4/0Qkxgrtq2IXYuToLHBY03trCO2b97+cHWWyoGii
QG8e5Ys+Xj9/n8WC8bT9pqWYbzKdI35cmgXHH6317UVckJTQtmoVC/KNGDor
sL6mvJmcXjkWWH1498sHsdGx9NwbCix4J1Q8/u//LSdc9t3edSxY+K0aIID9
DPjxa+0SZRaMjdx300VspJmQWaSK9RhbFpph/usk/rffRQ3r+ZDCnke5hZKc
KmMLC45xs04uxfh2Rl+gfisL1vc8Kd+B+XvYaAV7bmdB1BYLt2qcB5pv0CIp
NgvkqiSP82A96ty00jotFihV7R/5hP8HcVFmj07tZIFHi2XUB+Rnv3TogOgu
zLevVF4P7TWFBA88NWCBvfHNXbpoPyG/XvCgIdanGxOki/2oz1ZcPmvMgmSN
A4b5WN/7k0b74k2xvv89vsHEe3ShtnVw434WmH6NOfEX72l/wbeKVxYs0OGp
OroM769vd++E00EWXG3zm5bDfd4R/9qZc4gFA+sU+ZciziKmt163wXz56jaO
4v3r/ut2ROEoC3IllAoLUA7axz+U2rFAeU7sqgbK7U8u5Bs6ssCvKyTFAuP/
H5/qskw=
                 "]]}, "Charting`Private`Tag#1"], 
              Annotation[{
                Hue[0.9060679774997897, 0.6, 0.6], 
                Directive[
                 PointSize[0.0055000000000000005`], 
                 RGBColor[0.95, 0.627, 0.1425], 
                 AbsoluteThickness[2]], 
                
                Line[{{1.0986122886681098`, 1.854466391070933}, {
                 1.6362127879825386`, 1.5}}], 
                Line[CompressedData["
1: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
                 "]]}, "Charting`Private`Tag#2"], 
              Annotation[{
                Hue[0.1421359549995791, 0.6, 0.6], 
                Directive[
                 PointSize[0.0055000000000000005`], 
                 RGBColor[0.455, 0.7, 0.21], 
                 AbsoluteThickness[2]], 
                Line[CompressedData["
1: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
iPf6HdLuX8qBwz/OJtIx/mhdFfvRcg5Y+OyM4VVCvQ9seWuvxQFJj7PnuDgv
jtsNLcXXcsCxVd25Fe/30uS0lpfrOZCrwZzxXIL4wmI3KyMO3PT3Ve9bTMBG
03bypykHxhwizTP/Hz+xWOj8Tg4MrugsXIf+m5w2bhKw5EBzyJlFfnh/yZKb
PZdtObDH5OLgNS7uy1/Rs/P2HBBzVqtMwXhyGpl3vZw5cPpsuZIGnn9+gdXf
dpgDhVsuqHKx3v3Oj7vXe3JgS93FI2cwX1XiwMNbJzmwdL/umkGc529vZU1+
+SH/ufo2Eu38YlSz3gUOBG142KaC+NHd+y4XgzgQ0VfqFYj6nN3PJ1oWwgEN
k5zUbMSpq3Y3zYRzYK93orsB1q+bYdOyPJYDN05pu3Uj3mh2T8HmFgdMEuKu
Esj3IY/nu3NJHMiM05tYj/tVx628NSGFAxmTAu9MKQKktR1csx9z4LvVk29q
uL/fu5cHlmdwQHqxcNc23O9mWVrrarM54N0t3/MX3wPZ49l3GvI4cOyq5Qsm
2q9zxUrrijnQWh7ZIY77frVlbfq71xz403BvMQPxFZ6dPoWVqOe5iS0FeL7s
3CPVhx84oP041cIU3yvyTunn63UcsGHN7aaxCdB6tyniaBMHGj5VFl5CPitm
Mvcbt3Hgzef8Eia+HzfeGpuxOzlw7hR/cAHatW2Zp/p7EHMysvixXz8P8H3N
HODA0QOh0pI4L+ISeVEnfnLgK3Mgh0D7r/FnKRrjHKh03er6FfNp/FizqH+S
A10T7oYeGL9i1lPq1iwHGpOSCiWQ38dVJleNCRLIiRklA3yvYv0Cwob5Sej5
Fh/shvpdccxeGS5MQtr46e+3EWdMmJxXFSfB61lRUynG97gYeOG1NAm/PwwO
z2C8bttTRhZMEgbmRZdw0d4SJtnUSZIQKt9Cc0Z71DPmBld5Eg4uaFCJRz5n
ApZFDiqRcLruQngK2iufvaxzUSEhZI75YyXqueaM1MLOFSToPtUn9MWxn87O
u8y1SPiiVpa3E/U/0JSd+mo1CZ61b2+LYb67ZV+Zqnok5Mydke3Hetq3JWWF
AwnGrCVD7qiPr23k+V9GJLhIxOUYIg7QUbmyxZSEnW+utt3F+epbXNKUvJ2E
Q3RtIWG8L4eH/H3GdpGwRvvXPkGct4t+AScMrEj4I27P+x/qYbov59MVW6xn
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
0EIuvKzSPbAJ8/HabulpkOCCnH9bvw6eD3vQJ5IozQVxdlbROpynPJPYTQfo
XMgd+hs/gfWWxcxFL2FxoePXRqETeL7a4t10P4cLlTtPKXhifN6vsacfczH+
8qdac8j/Dmte1lUe419kCivifsm+fatOUZELJ59b1Gvi/f7wfCqjYwkXlOxF
X15DvP1ASuYNZcy3Jsp2K+KMUIXPO9W44GNq2jOC8QLH/qjwq3Oh92+VogjG
265/61HeSi6cGk/bLID6qNEvWRxexQWVS5uSb6DdasWSlezVXFjvSMSlYjyn
7cPwdi0Xfh8SL8pFfy+7DZe99bjwgZ+mxEK9mOeCeOUMuKAh8d9CPcRreJiF
lRu4kClgt+sn1hcXsfvZMSMufHpns7oM9bCQD+mS3syF0Kf+TwRQD30Jcetc
Uy54tNTQehAPLV0ubrONCyLr5A0+Yb636api0zswf1HkOBv3Vav7dvP4XVy4
b+n13gP329k3H7u1LLhQ/WTMe/M/GnzL/lVaY8WFnVHsGY15Gpxr6xhyseGC
cLEfQ59GwPr4erf5vVxIkA0fn0Z7Gm1ibawdF1brPV9VP0eDthkPe2VHLqS9
FXc6g/5g6Pql0IkLF7TIonaMf9B9LmvbIS40TGpFtqP9f+DZAF8=
                 "]]}, "Charting`Private`Tag#3"]}}, <|
            "HighlightElements" -> <|
              "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
             "LayoutOptions" -> <|
              "PanelPlotLayout" -> <||>, 
               "PlotRange" -> {{0.8249034787538678, 7.599901959208498}, {1.5, 
                3.}}, "Frame" -> {{False, False}, {False, False}}, 
               "AxesOrigin" -> {0.8249034787538678, 1.5000000000000033`}, 
               "ImageSize" -> {800, 800/GoldenRatio}, "Axes" -> {True, True}, 
               "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
               "DefaultStyle" -> {
                 Directive[
                  PointSize[0.0055000000000000005`], 
                  RGBColor[0.455, 0.7, 0.21], 
                  AbsoluteThickness[2]], 
                 Directive[
                  PointSize[0.0055000000000000005`], 
                  RGBColor[0.95, 0.627, 0.1425], 
                  AbsoluteThickness[2]], 
                 Directive[
                  PointSize[0.0055000000000000005`], 
                  RGBColor[0.24, 0.6, 0.8], 
                  AbsoluteThickness[2]]}, 
               "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                   (Exp[#]& )[
                    Part[#, 1]], 
                   (Identity[#]& )[
                    Part[#, 2]]}& ), 
                 "ScalingFunctions" -> {{Log, Exp}, {Identity, Identity}}|>, 
               "Primitives" -> {}, "GCFlag" -> False|>, 
             "Meta" -> <|
              "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
               "Function" -> ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
           "HighlightElements" -> <|
             "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
            "LayoutOptions" -> <|
             "PanelPlotLayout" -> <||>, 
              "PlotRange" -> {{0.8249034787538678, 7.599901959208498}, {1.5, 
               3.}}, "Frame" -> {{False, False}, {False, False}}, 
              "AxesOrigin" -> {0.8249034787538678, 1.5000000000000033`}, 
              "ImageSize" -> {800, 800/GoldenRatio}, "Axes" -> {True, True}, 
              "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
              "DefaultStyle" -> {
                Directive[
                 PointSize[0.0055000000000000005`], 
                 RGBColor[0.455, 0.7, 0.21], 
                 AbsoluteThickness[2]], 
                Directive[
                 PointSize[0.0055000000000000005`], 
                 RGBColor[0.95, 0.627, 0.1425], 
                 AbsoluteThickness[2]], 
                Directive[
                 PointSize[0.0055000000000000005`], 
                 RGBColor[0.24, 0.6, 0.8], 
                 AbsoluteThickness[2]]}, 
              "HighlightLabelingFunctions" -> <|
               "CoordinatesToolOptions" -> ({
                  (Exp[#]& )[
                   Part[#, 1]], 
                  (Identity[#]& )[
                   Part[#, 2]]}& ), 
                "ScalingFunctions" -> {{Log, Exp}, {Identity, Identity}}|>, 
              "Primitives" -> {}, "GCFlag" -> False|>, 
            "Meta" -> <|
             "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
              "Function" -> ListPlot, "GroupHighlight" -> False|>|>], 
          ImageSizeCache -> {{
           4.503599627370496*^15, -4.503599627370496*^15}, {
           4.503599627370496*^15, -4.503599627370496*^15}}], Selectable -> 
         False]}, 
       Annotation[{{{}, {}, 
          Annotation[{
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.0055000000000000005`], 
             RGBColor[0.24, 0.6, 0.8], 
             AbsoluteThickness[2]], 
            Line[CompressedData["
1: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
H5/qskw=
             "]]}, "Charting`Private`Tag#1"], 
          Annotation[{
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.0055000000000000005`], 
             RGBColor[0.95, 0.627, 0.1425], 
             AbsoluteThickness[2]], 
            
            Line[{{1.0986122886681098`, 1.854466391070933}, {
             1.6362127879825386`, 1.5}}], 
            Line[CompressedData["
1:eJwdV3k8Ve/XPTRLynTd4ZxbqIQyJ4XOJkOEBkNRIUOZCt80KURJKiSNKJSp
IrMMiTI2UCpDFIpMURkqqnvvu3+vf3zWZ+1n77XXs/dzkHXx3eYuTBDEBSGC
+N/vyNkzjpu+mgfE//9M0fLmV1sdMkXgjFSxzJTxH7q5pGWyfWo+nK1uX156
4C+daVBdW8daABDGXllnzaPFR6QYPxhi8KtnThE7jUcfKt+ipzMlBt6J6/TW
D/Po+3pyHiuqF4LMDs2fZ37waUuTuto+/UWwczw3/xTwaQ6zdzD20iIoiyYl
vcP59Nqm8uS6nkWgM7Ni5rZ+Pt2vKqd5QFEcVCYLLTUCBLSilbyU8X5xGBi3
e97pJaDD+lyi+rLEQco33N6KJaCd/Xf/fT4oDo/CQ1ImFQW0X+vE0z2yEiD6
3WS5pLqA9gqYKhbaLgHjJf1UbiufHpG0d/8VKQErM/VlK6/z6ZotVQknyySg
Mco6sUiWT+86penQPigBYoMpdP9dPv3QL91eRVoS7r94/fanCZ8euvqfQTYt
CXYBu+5K1/LovHF2UqCHJBTFlhzuDOTRK39EP3gYIwnzG0K16uN49PSeg7zQ
IkkYuqqjVGTFo5v27BibeC8JaVs6TMKcebTDeKf2Mp4k1I8+q/D4j0cbPrHm
Ki+WAsfEJXduYr68qeghJkhB9/DIJCeeRx9vObaAcJaCqWzlSeI6j5bIbvH8
ESwF71zuXh87zaMjAmuOTiVKgUdr8Nfk+zxa603UkWVlUpA66jdL7DWPfp1V
EXmqVQpenRdZMF3Eo9tmR7RR41Ig11WlMfyMR7tYKWbyRaXhku5e8vQ/Hu3p
9vOoqoI0zJvwcdUc5NFpVw6Kl4I0ZIzve3S/ikcv6ZW+csdeGjaVOxFJP3n0
BZnXl375SwMnvvv8jT882iixR6I0UhoOt32zUVTi09rseXfGkqUhbV/xags1
Pt2ywmdP+kNpOKF53C3HmE87aevP/tiI+Q8Z2xQs5dOxlOdIfK80xPrP2iCj
wqcbN+xgfZmSBsMNDjeXreTT+7z7N1QtYICKzc4qL00+fetQZoeaHAM0H1Fm
O6z59Dz+5Xm62gyYb2c4kLaFT4cOyVZ+NmPAkT+HRH4gfzepP1d5NwOmlSaD
fbchf/O1E8uPAaoDumLrcV63bPvFyQljgH53mXeqDp9+XCYx98dlBtzxeSfy
zYhPl3/JJ7vTGfDm2d53Hnv59KwASjmkhAGRJWFkZiyf9lb52/3mGQOytA+u
ojP59MSfutoPHQw4us4653gyzleViGnSVwaYfMxLIa7y6ReKB3LJfwzYfPPP
l8mbfNouPUFju6gMSMWJp/Ujtr4h6N1CysBx5aXuQji/n5Tdn85fKQN8Idbc
lc182u3LwcJIXRlYPafyVs57Ph3zdtH5l+YycE17fPhCE59+Up0m3GovA4Jk
r7+MZ3zaqmlLTYaHDPRUZ8eEv+XTF9bx9244IgOWIbcbZtbx6asxB/zuhcuA
bl14hFQVnxY7qmTXFScDHWHhKz884tM/frkH96TIQPwd65k3n+I+m76D/BwZ
+CXbGJzzkE+TyfsHbCpkIFuohGX1hk8f+qOQ8+y5DGhI3U/XLOHTAR13GsTb
ZeBscO3mF418etm8ph0qX2RAQWjz1bLvuJ9SR44tGZeBnOVnZ8z8hvOy89Pa
Ib4MsLzrC568wnp2JkmR85mw2TU7pLeDTy+ssk4TZjLBMGb7l745AjpQL2W9
7VImNM+zbzvGFNA901zbMDUmTHCn32cqCOi2lqDn5/SYsGJub4GMnoCuC4g9
6ruRCf6Do4ejNAX0wMMsdXUbJmhojHktUBHQryemql474fl308a9xgJ6nmHD
sJU3E7Kd9cUs9AU0w6DXJ+swEyYDOAYlrgJa6OIb/lAoE4ZNKxpv+wro6xZL
t82NYoKn8fV7E54CWqk1W2LudSbMOvzxdOdOAf1A/Hn/0G0mVFxud9l8QkC3
77vs+yCbCRs4eQuDLgvoLXlLzOxKmPDwRXm/830BXW+QK/L5KRPMWMuWmBcI
6Jfr+0y2NTLhbKp6vkcLvpc+o+cz2pgg+Z9LtvQLAS24Wur6+RMTllpeunKs
TUA/fsS1mTHChFzCZXLosYDu4szsFvnFhKk17upzcwV0vkFk2LSACVaZcfvv
FGI/65RLX81jwXFb/fy2DHx/pwemoyRZsD+mQKm7VEBvJp1LtCgWnModbqp8
JKB/Svx2q1nOgnYhryeddQJ69NWYj74aC8JtnNYLVQto1sLL65LXsqBCq79u
pAH93Ki3etSQBUYvNm7vqsL33DH4yVILFkhkmsS/axLQTbL6Bqa2LFDzhHdl
XQL6VNZTSVtHFpTNWNUf8FVAB+W1XbHax4Li76nsvr8CuqTuvayWHwtKB1ZW
7P8moP+Wvl44+xgL3pYk+LYRBHj9CyuqCWXB10/qzioCAV2lFrnX7xwL9iTp
aCgLE+A44BwwL44FqT55x7YzCCi4FKxyMYEFbzadfhMqScDLCsfPM1NZUH5y
+FYa4tDoq537sliQP7ry5SMxAkYSel1LC1nwwo3+dkaKgAuyutXTj1jQFfwk
MlucgPar7bRiLQt+rDvl8luEgIr8TdyNjSzwGDhsYCpNwMSn8BS7Fhbs0o9r
GMf4l9oDIrYfWXBhYu6eZoqAmnbz+A1fWKDd42xoupSA3GmJaLlRFvSd1Ksw
lSNA1U5LfnySBSOGsWHn5QnINDG4kv+PBXk/nTQKlxDQ4R7AdZvJhoAOscXp
GF/dXPZ7tigbkn/llP/mELBr/uMdCZJsUE5f2L6Ti/0dGz0iy2GDj2rhSD9J
ABEXce6GHBvo4NusRIx/UnC7ZoYSG4wzOo+Oswm4lbza3lmdDXI3er964/lD
FYsDc3TYcCxX55sm1ns4pbZjjGZDPpmhlLqCgDRfdfnlpmy4GxjDsllOgHLT
4DwrKzaIGt09fWcxAQb7l63ztGXDksjm+lomAUc1qnuO7MJ8vf6/d2A/dpr5
ioGubIh7/Ez1HOYf5vJoPy826PgPtNRjvknfV5YO/mwwW9qv1KdEQLfn8RM6
R9lw8foftSx1rP85ZFIkhA3qRspRYmsIyOuM+tgczgZnhcikA6sJSPwa5Rh1
gQ3TrP/MsnUIyA9Mu6kfx4YLlWXz09YSMPZWt+rzDTacmnuIZUoToCsqGD6R
zIajdcWc10DA9ieDBqIZbKizPK/fb0yAfr7h4MVsNhxsCVxpjni1xn1ifiEb
hC2UF1AGBKw6ysoOLGOD1oB4u906nJ8Xn8R6qtjQmFcXZ4r8cEypiW49G/4Z
vLz/BXGDWnnAhUY23OepTH3RI+DsN8+St2/Z4D35kS+FeqqiitTEO9iw+p92
cvt6AqaHeH+Nethgmvt0wTbUN+TD0PHtZ0Piy9tusxGzvM2EL46woZUdf17U
lADe3p1HMsbZEOz4aHTrRgIsdaMLiqbYkM6vzHtqQsC1ValvyvhsUPBStorA
eq+GPn8vnskBXsr7D5dQf/4+xvJ7Ihyw8L9uL6pPQGVZXMzlRRyIsRT61qBL
QFCjrslhBgc2PjDOrUU/W+cGu24mOWDGvKXhhDxj0IFYIscBUTH/smDsb2fg
3tWDCoh7YoodsZ+x5ufszFUceDfHMIiJ9ba7mDc4aXIgaNUN3xxtAvZYGtou
XMuB7PfOmiHIKyRntRev50BaQrdrD+ZTOCnnaWfEAfHAOaeVkN9g1kV+M+OA
mnrorxT0dyyxYl7wZg5A6sm3N1C/sesG49m2HFhQKcpbg+fJxzf6zjhwQCWA
EV6F8yP0Pe6fwIkDc+bdV41BfrFaboq/OwdSznBdU9HfvJOswU4vDhxzXRi2
1JCA3e53e9f7cUBKfk+KA/r5PHEoI/4QB9pCaxKM0e9PDdIbvwdyQNbwsV0U
3sesBVSb3kn0R4LRUIt8ZsqdfafCOXDbMl6vEfkTu2eKVp/jgFYMLzQV+XSt
ba1/YzhA5aR22RnhfD6wb191hQNzI7zeV+D8bdhyW94+ngNvJjMiQjYQkCHs
9ywoiQPx5jEaj1GftmdNR0IqB/ofXNJ0Q/2Sq509Cu5yYP+A1vgcvK8X+2vC
ah5woPTBp8pi9HtLvua6VwUc8NIYctyM+yP9X8GttyUcsLu2dFoD/bnAXVDV
XIF+PX7V9UOLgDW2r7KfPUV/hUQexWN8hPDmI+X1HOC2Cvta4L5VB2UqZ7zk
AOeQx3J9nC/yVtX7C80ciJW8L2GDWPOZ8UWfVg6oS5vny6PfKn9zd5t0Yr2Y
Pl1znJ/rDSZb2D0ceCtd8+IH3t9qB+bhwT4OHLrG5Gmj399cZn7MHeKAlfeA
iKI5AQsXlVw6+I0D7vp//Y6in98nclLVJtDv/LVHm9A/ta86SwZ/c+DeftvZ
t7B+7T8/ifh/HFBMTzrQhv691tp41kSIBL9DIlUDmP9KYGj06CwSRtISP9uZ
YX97CtRjREj4E7uoZRLxg58bg5UXkvBl7cVRAdbzPRV28qkkCeT7k4dPIO51
OGxkwyTBuvpc8HK8z/Zo8dYekgTF62K5eogv5TANPGRJCPzJTCxCfcdDV8QO
LyPhiDRb3Bbz1+cUN+9TIkEu51rWCM6zznEJsR4VEsxCrVTkUL+ku/tWa00S
VJqPz/qMvEtrQfqTNSRInLyYoL2JgJTqj0xlPRLWMyT/PLAkoMsiKT8GSOjo
Djp8Ywu+xw6xwd+NSPz7O7jxGeJQbaUIczMS0kaa9y/aTsCA3OPWZEsSAiS2
ps61w+/vSMiR8a0k7HjWtD3dloBTgaEHaTsS2KtCO6e3EmC2q/BdhAMJF+w/
pV2ywe/xtuHUF44kbFt8xvQI4gWtLaMiriQc+iNZ1IQ45qZIqfE+EibvXQQv
xOkUf+EJbxIOm5/5WYf5w+fO/ZftSwI96+KxEmsCVjx3OdN5kATTyR+aG7Ge
nPDKkplHSdBr17qus42An3/c4hVPkOCrYjK1GOOFF0+sNj+JeijH4TsYL+ud
HLf3NAmLB5wWJWC/37o4j4LPkuARIWYXgvz74emHly6QIO3O0861ImDeh8KY
2xdJ+Gp5SMsUeaZJ9qYHl0kQmFk1ggN+z72UJouuk1C4SvOjwB73I8khtjSR
hP57a3KHkXfMs1YuTUbeJ1fOfCcBG00knxemkpCfPrHjCGIL/ZBDWZkkuK/a
ltC3C7/fontXJ2eRkLn5/EFzJwLCyBDxi7kk/v+xpCfXGd+vpd7iJwpJmF0X
PkPVjQD7k4V6biUkTDtdaHvigt/vc6/iNz7CfGOXTvrsIyDgO1tTsQrv95BI
mpAHAceEekRn15Bwa0Wc6188XzzfWrW7ngSNoPh/FxBr345LKXxBgsunc7p6
iNXGsrzOvML7fpztRe0l4LbI1VibtyREKF9pq0Q+RkODWtxGQtv5LRbVWP+l
4lap/g4S6nnGQWdRr/eRnKC7XSQ0lVUkeyNuyf3l5PmZBK813yfeYv+xVRVP
lvXj/Jway1iD+JFy5N2uIdyPSXOOE/ppYveCujyK+i95+NxDPFbbt9RkjATt
u8Zt2xCTbktrJydJaHYJjK7bQYDz4/qZyVOIK3afSkT/Z5n8HTL9R0LfbPW1
0chvj+4IHBGQcIAbzG9Hvz9H+lVEzaBgwe6EG5WI4+oePlSeQ8GVW2N+3/H8
28x43zoRCoxfu+unII5NmxjeLUZBVmQnfz5ii+NRquPiFARVPnAsQz2Ul/yG
U9IUzF1re+8g7stzrz3K4iwKLIZldBoR97n1jSaQFNRoVnhKI/7tuu6i/BIK
qu6N85cjbnrxWSZTnoJGlcgeDs7vm/NW5xQVKBBdfGPzTdQfvbVnJEOJAhlh
a88J9Gtb2YiRvAoFnuGs5SuR/3eq7FqCOgXVqvruz1Hf1KOw4UWrKXj+ramk
FvXtm/AzPKVDQUWbW9Uv3LdQ1zup47oU+M0LvLUH90d1mTLDiaag0vv+qkqc
974dookNhhSk3/EvysN9KLRer6tqQsEDo/X563B/Cp7fn7pkRoGOwQ03eTx/
i6fxfsKCgiU5o5tv4vnGnrRPW7dQ8EdOLs0D+wswec7ItqbghPekxgbE9ByH
oFnbKZAXIiWFcN/1lGawdzpQILT6xMgw9q8g6jGWvZsCzaQgawWMFzmzeC7f
mYLXc1LzUjHeWLLIZZMbBdDraWCJ/N9fmbOu7kM/Q5kLjfD8B2e/nx+9KChq
cFdyQn17Yg9pyx+gIGDjAu3/NqMenkyjuz8FsVuFb+ah3lD/rIq0AAp63lTc
ycF4QitItPcIBfahkmXi+B7uV3heQR2nICIsZE0j+vvka0OLbTAFqQmXTq1C
bCdI3XE+lIK61h+PFHYTsKM7xPzxaQrkflOvUhHfU/DP+RZBgXVb+GoW7s+m
/DPnyfMU9M7tavB1xfehuOazaTQFCp3u2iaIVfqXlfrFUjDwtuXLWnwPiOgE
iWuXKRAzu337DOZ7krtgouwazkt5tlWLI74Xy3Y6foin4MDXVfaKGC9caL/j
700KhkvOlIztwftUa+2TScH4ysxqHcQeNy7P0UilQJV+rDiBel6pbKkxy6Cg
X81OsRH3lY4t5zrdw3xUZ4sxztvWjpPs/7Ip2JS4cVktYtWHBuVhuRS8vPk5
/QTqsQ27NjO2APdB7YvoL8SDuyT/JBZTEPW3540R1isyXZ+UXkqBilqdZRby
L3Rv/M5+RAFD+eU9Fup9bHhzdkElzrfJ1Ytt2M/56PJXRU8piNlcv8gH9SyO
3W1XXEtB+bnBCh/MFyX55WZhA56vIeQHEI9aZN3NfUFBuJbsHW18j7qmZgXd
a6LgckB72HV8v8r363NuN1OwcNRpYzDik/lXI669o2CXG9m4CvH2y1a159oo
KNYXHnfB8x3l8W3HOyh45h1/zgXzizy9+8TrI85bqa1bBOJxoztntvdQ8HX5
ZKkQnp/1L0PRsJeCNSlBm8TQT9WXzdlK/ZhvQO5CsjsBSZ2aDPEhnI/gexEr
8H5N0jrcf37F/phhzYrIM0RfJrV9w/slFy2PQH5i/5z6h2MUJFaKZlthPu/i
8K4rkxSMRd2amYBY1n/tkP9v3B/m3aJejP/TKTa86Q8FzjKsrneIF05/7ZXn
UTCeuHqvC/pnnZz7flqA+1wo5iiF/YnEajc1CnMh6rymuCbWnwzbWpM0iwtr
ijTz/vd9MVrz6rHvXC6cbRDxr0R+Z+SRKv35XIizl9gtjd8TkxDRl/PEuJBP
H967EvkZDuZ9bxdx4Yb8eLMtno9OG5ifKMkF41Kz6uueBJRsvGLswuCC7kml
6Eo8X32ZH7ecxYWvzoEqduhfo82z6UEOF+5Gjnmew/gZH68cu8vlwhIm/8BR
7OcWSyDtIcvF//P0fsQjLrgZ37x0KRe+D3UXDOF9vMybetC9nAsx9hlrfLA/
S5fU3OuKXPg72H3iMOIHUfLvN6/kQng6e8kK1Bc2/ktplioXRt6dLQtBbKkf
n1mizoXxzBmySdjPSsZpGy8tLkRr/evag9hOZbk6ew0XztxZZ7QX67tajkLD
Wi7stXWsrEX9/o4GZwL0uGDjmVXqi/qZQeEzFtNcIA/7PXmHWEeYWV5vwIWs
kE1B3T4EXL24LeeAERfEWrYP/fQmwEb23GdJUy4sY0ylhmO8/qKF2x+accG+
xjU63YuAEYVVC+0t0J8ts14Wo38N2coLpq24sLGMTDND/R37La2vbcX4wmn3
euz3RN3rXk0bLrSor3bLwX36VPC9qskO7zfYu+EjzkNQZ/fIPnus33/67SKM
X3/tjadgJxcUjerlJBBnET/XXnFEPe0fNPgY3/nX10lxDxcK3SxmjSAPhh4f
yl250FWzYNd15N328/Mt9nJBubQzpwn9+T/89IdR
             "]]}, "Charting`Private`Tag#2"], 
          Annotation[{
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.0055000000000000005`], 
             RGBColor[0.455, 0.7, 0.21], 
             AbsoluteThickness[2]], 
            Line[CompressedData["
1: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
iPf6HdLuX8qBwz/OJtIx/mhdFfvRcg5Y+OyM4VVCvQ9seWuvxQFJj7PnuDgv
jtsNLcXXcsCxVd25Fe/30uS0lpfrOZCrwZzxXIL4wmI3KyMO3PT3Ve9bTMBG
03bypykHxhwizTP/Hz+xWOj8Tg4MrugsXIf+m5w2bhKw5EBzyJlFfnh/yZKb
PZdtObDH5OLgNS7uy1/Rs/P2HBBzVqtMwXhyGpl3vZw5cPpsuZIGnn9+gdXf
dpgDhVsuqHKx3v3Oj7vXe3JgS93FI2cwX1XiwMNbJzmwdL/umkGc529vZU1+
+SH/ufo2Eu38YlSz3gUOBG142KaC+NHd+y4XgzgQ0VfqFYj6nN3PJ1oWwgEN
k5zUbMSpq3Y3zYRzYK93orsB1q+bYdOyPJYDN05pu3Uj3mh2T8HmFgdMEuKu
Esj3IY/nu3NJHMiM05tYj/tVx628NSGFAxmTAu9MKQKktR1csx9z4LvVk29q
uL/fu5cHlmdwQHqxcNc23O9mWVrrarM54N0t3/MX3wPZ49l3GvI4cOyq5Qsm
2q9zxUrrijnQWh7ZIY77frVlbfq71xz403BvMQPxFZ6dPoWVqOe5iS0FeL7s
3CPVhx84oP041cIU3yvyTunn63UcsGHN7aaxCdB6tyniaBMHGj5VFl5CPitm
Mvcbt3Hgzef8Eia+HzfeGpuxOzlw7hR/cAHatW2Zp/p7EHMysvixXz8P8H3N
HODA0QOh0pI4L+ISeVEnfnLgK3Mgh0D7r/FnKRrjHKh03er6FfNp/FizqH+S
A10T7oYeGL9i1lPq1iwHGpOSCiWQ38dVJleNCRLIiRklA3yvYv0Cwob5Sej5
Fh/shvpdccxeGS5MQtr46e+3EWdMmJxXFSfB61lRUynG97gYeOG1NAm/PwwO
z2C8bttTRhZMEgbmRZdw0d4SJtnUSZIQKt9Cc0Z71DPmBld5Eg4uaFCJRz5n
ApZFDiqRcLruQngK2iufvaxzUSEhZI75YyXqueaM1MLOFSToPtUn9MWxn87O
u8y1SPiiVpa3E/U/0JSd+mo1CZ61b2+LYb67ZV+Zqnok5Mydke3Hetq3JWWF
AwnGrCVD7qiPr23k+V9GJLhIxOUYIg7QUbmyxZSEnW+utt3F+epbXNKUvJ2E
Q3RtIWG8L4eH/H3GdpGwRvvXPkGct4t+AScMrEj4I27P+x/qYbov59MVW6xn
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
0EIuvKzSPbAJ8/HabulpkOCCnH9bvw6eD3vQJ5IozQVxdlbROpynPJPYTQfo
XMgd+hs/gfWWxcxFL2FxoePXRqETeL7a4t10P4cLlTtPKXhifN6vsacfczH+
8qdac8j/Dmte1lUe419kCivifsm+fatOUZELJ59b1Gvi/f7wfCqjYwkXlOxF
X15DvP1ASuYNZcy3Jsp2K+KMUIXPO9W44GNq2jOC8QLH/qjwq3Oh92+VogjG
265/61HeSi6cGk/bLID6qNEvWRxexQWVS5uSb6DdasWSlezVXFjvSMSlYjyn
7cPwdi0Xfh8SL8pFfy+7DZe99bjwgZ+mxEK9mOeCeOUMuKAh8d9CPcRreJiF
lRu4kClgt+sn1hcXsfvZMSMufHpns7oM9bCQD+mS3syF0Kf+TwRQD30Jcetc
Uy54tNTQehAPLV0ubrONCyLr5A0+Yb636api0zswf1HkOBv3Vav7dvP4XVy4
b+n13gP329k3H7u1LLhQ/WTMe/M/GnzL/lVaY8WFnVHsGY15Gpxr6xhyseGC
cLEfQ59GwPr4erf5vVxIkA0fn0Z7Gm1ibawdF1brPV9VP0eDthkPe2VHLqS9
FXc6g/5g6Pql0IkLF7TIonaMf9B9LmvbIS40TGpFtqP9f+DZAF8=
             "]]}, "Charting`Private`Tag#3"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{0.8249034787538678, 7.599901959208498}, {1.5, 
            3.}}, "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0.8249034787538678, 1.5000000000000033`}, 
           "ImageSize" -> {800, 800/GoldenRatio}, "Axes" -> {True, True}, 
           "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              PointSize[0.0055000000000000005`], 
              RGBColor[0.455, 0.7, 0.21], 
              AbsoluteThickness[2]], 
             Directive[
              PointSize[0.0055000000000000005`], 
              RGBColor[0.95, 0.627, 0.1425], 
              AbsoluteThickness[2]], 
             Directive[
              PointSize[0.0055000000000000005`], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               (Exp[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Log, Exp}, {Identity, Identity}}|>, 
           "Primitives" -> {}, "GCFlag" -> False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>, 
        "DynamicHighlight"]], {{}, {}}}, {
      GrayLevel[0], 
      Dashing[{Small, Small}], 
      LineBox[{{0, 2.1}, {1000, 2.1}}]}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
    AxesLabel -> {
      FormBox[
       TagBox["\"Num data points\"", HoldForm], TraditionalForm], 
      FormBox[
       TagBox["\"Estimate of m\"", HoldForm], TraditionalForm]}, 
    AxesOrigin -> {0.8249034787538678, 1.5000000000000033`}, DisplayFunction -> 
    Identity, Frame -> {{False, False}, {False, False}}, 
    FrameLabel -> {{None, None}, {None, None}}, 
    FrameTicks -> {{Automatic, Automatic}, {
       Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
        15.954589770191003`, RotateLabel -> 0], 
       Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
    GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], ImageSize -> 800, 
    Method -> {
     "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
        Directive[
         RGBColor[0.24, 0.6, 0.8], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.95, 0.627, 0.1425], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.455, 0.7, 0.21], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.578, 0.51, 0.85], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.4, 0.64, 1.], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[1., 0.75, 0.], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.8, 0.4, 0.76], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.637, 0.65, 0.], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
      "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05],
       "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentSet", 
      "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Exp[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Exp[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}}, 
    PlotRange -> {{0.8249034787538678, 7.599901959208498}, {1.5, 3.}}, 
    PlotRangeClipping -> True, PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {0, 0}}, Ticks -> FrontEndValueCache[{
       Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
        15.954589770191003`, RotateLabel -> 0], 
       Automatic}, {{{1.6094379124341003`, 
         FormBox["5", TraditionalForm], {0.01, 0.}}, {2.302585092994046, 
         FormBox["10", TraditionalForm], {0.01, 0.}}, {3.912023005428146, 
         FormBox["50", TraditionalForm], {0.01, 0.}}, {4.605170185988092, 
         FormBox["100", TraditionalForm], {0.01, 0.}}, {6.214608098422191, 
         FormBox["500", TraditionalForm], {0.01, 0.}}, {6.907755278982137, 
         FormBox["1000", TraditionalForm], {0.01, 0.}}, {-0.6931471805599453, 
         
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.5108256237659907, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.35667494393873245`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.2231435513142097, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.10536051565782628`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {0., 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        0.6931471805599453, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.0986122886681098`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.3862943611198906`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.791759469228055, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.9459101490553132`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.0794415416798357`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.1972245773362196`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.995732273553991, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        3.4011973816621555`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        3.6888794541139363`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        4.0943445622221, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        4.248495242049359, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        4.382026634673881, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        4.499809670330265, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        5.298317366548036, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        5.703782474656201, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        5.991464547107982, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        6.396929655216146, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        6.551080335043404, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        6.684611727667927, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        6.802394763324311, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        7.600902459542082, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        8.006367567650246, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        8.294049640102028, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        8.517193191416238, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        8.699514748210191, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        8.85366542803745, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        8.987196820661973, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        9.104979856318357, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        9.210340371976184, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        9.615805480084347, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        9.903487552536127, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}}, 
       Automatic}]], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Estimate +/- standard error\"", "\"Confidence inteval lower bound\"",
        "\"Confidence interval upper bound\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.24, 0.6, 0.8], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.24, 0.6, 0.8], 
                    AbsoluteThickness[2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.95, 0.627, 0.1425], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.95, 0.627, 0.1425], 
                    AbsoluteThickness[2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.455, 0.7, 0.21], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.455, 0.7, 0.21], 
                    AbsoluteThickness[2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.24, 0.6, 0.8]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.95, 0.627, 0.1425]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.455, 0.7, 0.21]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.958047954615469*^9, 3.958047964641488*^9}, {
   3.958048017872677*^9, 3.9580481233649263`*^9}, {3.958048267236141*^9, 
   3.958048314101781*^9}, 3.958048356147943*^9, 3.958048527493998*^9},
 CellLabel->
  "Out[2836]=",ExpressionUUID->"a5863116-1c88-45f3-a89a-2aa1a31e7ba0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Transpose", "[", "\[IndentingNewLine]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", "\"\<Uncertainty\>\"", "]"}], "&"}], "/@", 
       RowBox[{"summaryResults", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "4", "]"}], "]"}], "-", 
         RowBox[{"#", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "&"}], "/@", "summaryResults"}]}],
      "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<Standard error\>\"", 
      ",", "\"\<Width of confidence interval\>\""}], "}"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.958048152808058*^9, 3.958048240976844*^9}},
 CellLabel->
  "In[2828]:=",ExpressionUUID->"ccc28db5-2abf-46b5-b649-c9f9cfabb732"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[
      TagBox[
       {RGBColor[0.24, 0.6, 0.8], PointSize[0.007333333333333334], 
        AbsoluteThickness[2], PointBox[CompressedData["
1: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
EP8DaS0P0A==
         "]]},
       Annotation[#, "Charting`Private`Tag#1"]& ],
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
     StyleBox[
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction["DynamicHighlight", {{
           Annotation[{
             Directive[
              PointSize[0.007333333333333334], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2]], 
             Point[CompressedData["
1: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
EP8DaS0P0A==
              "]]}, "Charting`Private`Tag#1"]}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{0.01830251056854729, 0.0795463623901235}, {
              0, 0.3157719685572239}}, 
            "Frame" -> {{False, False}, {False, False}}, 
            "AxesOrigin" -> {0.01830251056854729, 0}, 
            "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
            "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
            "DefaultStyle" -> {
              Directive[
               PointSize[0.007333333333333334], 
               RGBColor[0.24, 0.6, 0.8], 
               AbsoluteThickness[2]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{0.01830251056854729, 0.0795463623901235}, {
             0, 0.3157719685572239}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0.01830251056854729, 0}, 
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
           "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              PointSize[0.007333333333333334], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}],
      Selectable->False]},
    Annotation[{{
       Annotation[{
         Directive[
          PointSize[0.007333333333333334], 
          RGBColor[0.24, 0.6, 0.8], 
          AbsoluteThickness[2]], 
         Point[CompressedData["
1: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
EP8DaS0P0A==
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
      "LayoutOptions" -> <|
       "PanelPlotLayout" -> <||>, 
        "PlotRange" -> {{0.01830251056854729, 0.0795463623901235}, {
          0, 0.3157719685572239}}, 
        "Frame" -> {{False, False}, {False, False}}, 
        "AxesOrigin" -> {0.01830251056854729, 0}, 
        "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
        "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.24, 0.6, 0.8], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"Standard error\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"Width of confidence interval\"", HoldForm], TraditionalForm]},
  AxesOrigin->{0.01830251056854729, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{982.203125, Automatic},
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.24, 0.6, 0.8], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.95, 0.627, 0.1425], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.455, 0.7, 0.21], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.578, 0.51, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.4, 0.64, 1.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1., 0.75, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.8, 0.4, 0.76], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.637, 0.65, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.01830251056854729, 0.0795463623901235}, {
    0, 0.3157719685572239}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.958048179247349*^9, 3.958048241353435*^9}},
 CellLabel->
  "Out[2828]=",ExpressionUUID->"83e6eb77-73f3-48c6-8614-0dca10be7973"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogLogPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", "\"\<Uncertainty\>\"", 
          "]"}]}], "}"}], "&"}], "/@", "summaryResults"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "4", "]"}], "]"}], "-", 
          RowBox[{"#", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}], "&"}], "/@", 
      "summaryResults"}]}], "\[IndentingNewLine]", "}"}], 
   "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<Num data points\>\"", ",", "\"\<Uncertainty\>\""}], "}"}]}],
    ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<Standard error\>\"", 
      ",", "\"\<Confidence interval width\>\""}], "}"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.958048483270673*^9, 3.958048571711884*^9}},
 CellLabel->
  "In[2839]:=",ExpressionUUID->"4275beaa-9e7d-496a-b06b-0601aec7c78f"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, 
     InterpretationBox[{
       TagBox[{
         TagBox[{
           RGBColor[0.24, 0.6, 0.8], 
           PointSize[0.0055000000000000005`], 
           AbsoluteThickness[2], 
           PointBox[CompressedData["
1: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
C8FU02x8fjAH/wf6uyBc
            "]]}, Annotation[#, "Charting`Private`Tag#1"]& ], 
         TagBox[{
           RGBColor[0.95, 0.627, 0.1425], 
           PointSize[0.0055000000000000005`], 
           AbsoluteThickness[2], 
           PointBox[CompressedData["
1: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
            "]]}, Annotation[#, "Charting`Private`Tag#2"]& ]}, {
        "WolframDynamicHighlight", <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
       StyleBox[
        DynamicBox[
         (Charting`HighlightActionBox["DynamicHighlight", {}, 
          Slot["HighlightElements"], 
          Slot["LayoutOptions"], 
          Slot["Meta"], 
          Charting`HighlightActionFunction["DynamicHighlight", {{
             Annotation[{
               Directive[
                PointSize[0.0055000000000000005`], 
                RGBColor[0.24, 0.6, 0.8], 
                AbsoluteThickness[2]], 
               Point[CompressedData["
1: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
C8FU02x8fjAH/wf6uyBc
                "]]}, "Charting`Private`Tag#1"], 
             Annotation[{
               Directive[
                PointSize[0.0055000000000000005`], 
                RGBColor[0.95, 0.627, 0.1425], 
                AbsoluteThickness[2]], 
               Point[CompressedData["
1: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
                "]]}, "Charting`Private`Tag#2"]}}, <|
           "HighlightElements" -> <|
             "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
            "LayoutOptions" -> <|
             "PanelPlotLayout" -> <||>, 
              "PlotRange" -> {{0.8249034787538678, 
               7.599901959208498}, {-4.27187746499551, 0.37454340460221724`}},
               "Frame" -> {{False, False}, {False, False}}, 
              "AxesOrigin" -> {0.8249034787538678, -4.27187746499551}, 
              "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
              "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
              "DefaultStyle" -> {
                Directive[
                 PointSize[0.0055000000000000005`], 
                 RGBColor[0.95, 0.627, 0.1425], 
                 AbsoluteThickness[2]], 
                Directive[
                 PointSize[0.0055000000000000005`], 
                 RGBColor[0.24, 0.6, 0.8], 
                 AbsoluteThickness[2]]}, 
              "HighlightLabelingFunctions" -> <|
               "CoordinatesToolOptions" -> ({
                  (Exp[#]& )[
                   Part[#, 1]], 
                  (Exp[#]& )[
                   Part[#, 2]]}& ), 
                "ScalingFunctions" -> {{Log, Exp}, {Log, Exp}}|>, 
              "Primitives" -> {}, "GCFlag" -> False|>, 
            "Meta" -> <|
             "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
              "Function" -> ListLogLogPlot, "GroupHighlight" -> 
              False|>|>]]& )[<|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, 
             "PlotRange" -> {{0.8249034787538678, 
              7.599901959208498}, {-4.27187746499551, 0.37454340460221724`}}, 
             "Frame" -> {{False, False}, {False, False}}, 
             "AxesOrigin" -> {0.8249034787538678, -4.27187746499551}, 
             "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
             "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
             "DefaultStyle" -> {
               Directive[
                PointSize[0.0055000000000000005`], 
                RGBColor[0.95, 0.627, 0.1425], 
                AbsoluteThickness[2]], 
               Directive[
                PointSize[0.0055000000000000005`], 
                RGBColor[0.24, 0.6, 0.8], 
                AbsoluteThickness[2]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 (Exp[#]& )[
                  Part[#, 1]], 
                 (Exp[#]& )[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Log, Exp}, {Log, Exp}}|>, 
             "Primitives" -> {}, "GCFlag" -> False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> ListLogLogPlot, "GroupHighlight" -> False|>|>], 
         ImageSizeCache -> {{4.503599627370496*^15, -4.503599627370496*^15}, {
          4.503599627370496*^15, -4.503599627370496*^15}}], Selectable -> 
        False]}, 
      Annotation[{{
         Annotation[{
           Directive[
            PointSize[0.0055000000000000005`], 
            RGBColor[0.24, 0.6, 0.8], 
            AbsoluteThickness[2]], 
           Point[CompressedData["
1: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
C8FU02x8fjAH/wf6uyBc
            "]]}, "Charting`Private`Tag#1"], 
         Annotation[{
           Directive[
            PointSize[0.0055000000000000005`], 
            RGBColor[0.95, 0.627, 0.1425], 
            AbsoluteThickness[2]], 
           Point[CompressedData["
1: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
            "]]}, "Charting`Private`Tag#2"]}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{0.8249034787538678, 
           7.599901959208498}, {-4.27187746499551, 0.37454340460221724`}}, 
          "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {0.8249034787538678, -4.27187746499551}, 
          "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             PointSize[0.0055000000000000005`], 
             RGBColor[0.95, 0.627, 0.1425], 
             AbsoluteThickness[2]], 
            Directive[
             PointSize[0.0055000000000000005`], 
             RGBColor[0.24, 0.6, 0.8], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              (Exp[#]& )[
               Part[#, 1]], 
              (Exp[#]& )[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Log, Exp}, {Log, Exp}}|>, 
          "Primitives" -> {}, "GCFlag" -> False|>, 
        "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListLogLogPlot, "GroupHighlight" -> False|>|>, 
       "DynamicHighlight"]], {{}, {}}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
    AxesLabel -> {
      FormBox[
       TagBox["\"Num data points\"", HoldForm], TraditionalForm], 
      FormBox[
       TagBox["\"Uncertainty\"", HoldForm], TraditionalForm]}, 
    AxesOrigin -> {0.8249034787538678, -4.27187746499551}, DisplayFunction -> 
    Identity, Frame -> {{False, False}, {False, False}}, 
    FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
       Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
        15.954589770191003`, RotateLabel -> 0], 
       Charting`ScaledFrameTicks[{Log, Exp}]}, {
       Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
        15.954589770191003`, RotateLabel -> 0], 
       Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
    GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], ImageSize -> {751.5546875, Automatic}, 
    Method -> {
     "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
        Directive[
         RGBColor[0.24, 0.6, 0.8], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.95, 0.627, 0.1425], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.455, 0.7, 0.21], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.578, 0.51, 0.85], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.4, 0.64, 1.], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[1., 0.75, 0.], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.8, 0.4, 0.76], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.637, 0.65, 0.], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[2]], 
        Directive[
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
      "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05],
       "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint",
       "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Exp[#]& )[
           Part[#, 1]], 
          (Exp[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Exp[#]& )[
           Part[#, 1]], 
          (Exp[#]& )[
           Part[#, 2]]}& )}}, 
    PlotRange -> {{0.8249034787538678, 7.599901959208498}, {-4.27187746499551,
      0.37454340460221724`}}, PlotRangeClipping -> True, PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}}, Ticks -> FrontEndValueCache[{
       Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
        15.954589770191003`, RotateLabel -> 0], 
       Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
        15.954589770191003`, RotateLabel -> 0]}, {{{1.6094379124341003`, 
         FormBox["5", TraditionalForm], {0.01, 0.}}, {2.302585092994046, 
         FormBox["10", TraditionalForm], {0.01, 0.}}, {3.912023005428146, 
         FormBox["50", TraditionalForm], {0.01, 0.}}, {4.605170185988092, 
         FormBox["100", TraditionalForm], {0.01, 0.}}, {6.214608098422191, 
         FormBox["500", TraditionalForm], {0.01, 0.}}, {6.907755278982137, 
         FormBox["1000", TraditionalForm], {0.01, 0.}}, {-0.6931471805599453, 
         
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.5108256237659907, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.35667494393873245`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.2231435513142097, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.10536051565782628`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {0., 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        0.6931471805599453, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.0986122886681098`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.3862943611198906`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.791759469228055, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.9459101490553132`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.0794415416798357`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.1972245773362196`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.995732273553991, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        3.4011973816621555`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        3.6888794541139363`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        4.0943445622221, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        4.248495242049359, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        4.382026634673881, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        4.499809670330265, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        5.298317366548036, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        5.703782474656201, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        5.991464547107982, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        6.396929655216146, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        6.551080335043404, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        6.684611727667927, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        6.802394763324311, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        7.600902459542082, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        8.006367567650246, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        8.294049640102028, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        8.517193191416238, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        8.699514748210191, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        8.85366542803745, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        8.987196820661973, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        9.104979856318357, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        9.210340371976184, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        9.615805480084347, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        9.903487552536127, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}}, {{-2.995732273553991, 
         FormBox[
          TagBox[
           InterpretationBox[
            StyleBox["\"0.05\"", ShowStringCharacters -> False], 
            0.05`15.954589770191003, AutoDelete -> True], NumberForm[#, {
             DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 
         0.}}, {-2.3025850929940455`, 
         FormBox[
          TagBox[
           InterpretationBox[
            StyleBox["\"0.10\"", ShowStringCharacters -> False], 
            0.1`15.954589770191003, AutoDelete -> True], NumberForm[#, {
             DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 
         0.}}, {-0.6931471805599453, 
         FormBox[
          TagBox[
           InterpretationBox[
            StyleBox["\"0.50\"", ShowStringCharacters -> False], 
            0.5`15.954589770191003, AutoDelete -> True], NumberForm[#, {
             DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 0.}}, {
        0., 
         FormBox["1", TraditionalForm], {0.01, 0.}}, {-5.809142990314028, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-5.521460917862246, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-5.298317366548036, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-5.115995809754082, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-4.961845129926823, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-4.8283137373023015`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-4.710530701645918, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-4.605170185988091, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-3.912023005428146, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-3.506557897319982, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-3.2188758248682006`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.8134107167600364`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.659260036932778, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.5257286443082556`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.4079456086518722`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-1.6094379124341003`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-1.2039728043259361`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.916290731874155, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.5108256237659907, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.35667494393873245`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.2231435513142097, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.10536051565782628`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        0.6931471805599453, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.0986122886681098`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.3862943611198906`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.6094379124341003`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.791759469228055, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.9459101490553132`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.0794415416798357`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.1972245773362196`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.302585092994046, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.70805020110221, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.995732273553991, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}}}]], 
   
   FormBox[
    FormBox[
     TemplateBox[{"\"Standard error\"", "\"Confidence interval width\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.24, 0.6, 0.8], 
                    AbsoluteThickness[2]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.24, 0.6, 0.8], 
                    AbsoluteThickness[2]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.95, 0.627, 0.1425], 
                    AbsoluteThickness[2]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.95, 0.627, 0.1425], 
                    AbsoluteThickness[2]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.24, 0.6, 0.8]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.95, 0.627, 0.1425]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.958048502236012*^9, 3.9580485075483503`*^9}, {
  3.958048557830245*^9, 3.958048572022175*^9}},
 CellLabel->
  "Out[2839]=",ExpressionUUID->"9c30cee2-e941-45d9-9aab-0859b82d4fdc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Synthetic experiment", "Subtitle",
 CellChangeTimes->{{3.958134143932431*^9, 
  3.958134147051443*^9}},ExpressionUUID->"f15fe53a-c3a8-4f65-89ab-\
bd08578a8b71"],

Cell[BoxData[
 RowBox[{
  RowBox[{"expr\[Sigma]Screen", " ", "=", " ", 
   RowBox[{
    SqrtBox[
     RowBox[{
      SuperscriptBox["\[Sigma]Off", "2"], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"\[Kappa]", " ", "V", " ", "\[Sigma]z"}], ")"}], "2"]}]], "/.", 
    RowBox[{"\[Kappa]", "->", 
     RowBox[{"(", 
      RowBox[{"1", "/", "0.073"}], ")"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.958134401804529*^9, 3.9581344049641733`*^9}},
 CellLabel->
  "In[1628]:=",ExpressionUUID->"a0b56043-a494-45f8-b31a-34878e3d5316"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"synthetic\[Mu]\[Sigma]Off", " ", "=", " ", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"synthetic\[Sigma]\[Sigma]Off", " ", "=", " ", "1.1"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"synthetic\[Mu]\[Sigma]z", " ", "=", " ", "150"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"synthetic\[Sigma]\[Sigma]z", " ", "=", " ", "2.3"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]V", " ", "=", " ", "0.1"}], ";"}]}], "Input",
 CellChangeTimes->{{3.958134479597027*^9, 3.9581345164014387`*^9}, {
  3.958134998537128*^9, 3.958135016786099*^9}},
 CellLabel->
  "In[1629]:=",ExpressionUUID->"8d65229c-ded7-4696-8d5f-1c3955359733"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"syntheticOffData", " ", "=", 
  RowBox[{"Table", "[", "\[IndentingNewLine]", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["\[Sigma]Off", "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"\[Kappa]", " ", "V", " ", "\[Sigma]z"}], ")"}], "2"]}]]}],
       "}"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Kappa]", "->", 
        RowBox[{"(", 
         RowBox[{"1", "/", "0.073"}], ")"}]}], ",", 
       RowBox[{"\[Sigma]Off", " ", "->", 
        RowBox[{"RandomVariate", "[", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{
          "synthetic\[Mu]\[Sigma]Off", ",", "synthetic\[Sigma]\[Sigma]Off"}], 
          "]"}], "]"}]}], ",", 
       RowBox[{"V", "->", "0"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
    "10"}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.958134405916995*^9, 3.95813447552534*^9}, {
  3.958134520246127*^9, 3.958134554307963*^9}},
 CellLabel->
  "In[1634]:=",ExpressionUUID->"8ed71186-e9c0-426d-b3db-c84509eef5c2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "102.17164696751267`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "100.36997434212499`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "100.86687406030282`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "98.69162573214969`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "100.39452029750984`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "99.22264669202313`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "101.62994694567718`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "101.76847289266595`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "97.33537244373305`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "101.44593534067938`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.958134533297159*^9, 3.958134554698511*^9}, 
   3.9581349169594707`*^9, {3.958135013212987*^9, 3.9581350186596327`*^9}},
 CellLabel->
  "Out[1634]=",ExpressionUUID->"e779a243-4e28-44ef-b612-88f4eccb72f8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"syntheticPlusData", " ", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"V", ",", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[Sigma]Off", "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"\[Kappa]", " ", "V", " ", "\[Sigma]z"}], ")"}], 
           "2"]}]]}], "}"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Kappa]", "->", 
         RowBox[{"(", 
          RowBox[{"1", "/", "0.073"}], ")"}]}], ",", 
        RowBox[{"\[Sigma]Off", " ", "->", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{"NormalDistribution", "[", 
           RowBox[{
           "synthetic\[Mu]\[Sigma]Off", ",", "synthetic\[Sigma]\[Sigma]Off"}],
            "]"}], "]"}]}], ",", 
        RowBox[{"\[Sigma]z", "->", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{"NormalDistribution", "[", 
           RowBox[{
           "synthetic\[Mu]\[Sigma]z", ",", "synthetic\[Sigma]\[Sigma]z"}], 
           "]"}], "]"}]}], ",", 
        RowBox[{"V", "->", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{"NormalDistribution", "[", 
           RowBox[{"1", ",", "\[Sigma]V"}], "]"}], "]"}]}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", "10"}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"syntheticMinusData", " ", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"V", ",", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[Sigma]Off", "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"\[Kappa]", " ", "V", " ", "\[Sigma]z"}], ")"}], 
           "2"]}]]}], "}"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Kappa]", "->", 
         RowBox[{"(", 
          RowBox[{"1", "/", "0.073"}], ")"}]}], ",", 
        RowBox[{"\[Sigma]Off", " ", "->", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{"NormalDistribution", "[", 
           RowBox[{
           "synthetic\[Mu]\[Sigma]Off", ",", "synthetic\[Sigma]\[Sigma]Off"}],
            "]"}], "]"}]}], ",", 
        RowBox[{"\[Sigma]z", "->", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{"NormalDistribution", "[", 
           RowBox[{
           "synthetic\[Mu]\[Sigma]z", ",", "synthetic\[Sigma]\[Sigma]z"}], 
           "]"}], "]"}]}], ",", 
        RowBox[{"V", "->", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{"NormalDistribution", "[", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "\[Sigma]V"}], "]"}], "]"}]}]}], "}"}]}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"Length", "[", "syntheticPlusData", "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"syntheticOnData", " ", "=", " ", 
   RowBox[{"syntheticPlusData", "~", "Join", "~", "syntheticMinusData"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.95813456652186*^9, 3.958134637130889*^9}, {
  3.958135009507193*^9, 3.958135011241029*^9}, {3.958135084541273*^9, 
  3.9581350961354218`*^9}},
 CellLabel->
  "In[1638]:=",ExpressionUUID->"35c42647-18de-46ff-9ada-3b09a944610f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.0298890719944227`", ",", "2063.837482881248`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.8167167186884389`", ",", "1672.3651595952688`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.9575639440937381`", ",", "1937.1481868399064`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.0909071840677218`", ",", "2273.0145431343967`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.0034269433650134`", ",", "2046.2356504054787`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.892423849752478`", ",", "1871.1539937736513`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.9324737605253451`", ",", "1917.5615013508434`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.0474366185854054`", ",", "2122.2726722985767`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.9783791289116293`", ",", "1974.6507550761992`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.9434075899174038`", ",", "1913.330130735777`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.9581346129819107`*^9, 3.958134637536141*^9}, 
   3.9581349169768457`*^9, {3.9581350132231216`*^9, 3.9581350186787357`*^9}, 
   3.958135096458218*^9},
 CellLabel->
  "Out[1638]=",ExpressionUUID->"c614b886-2c60-4c92-9bbf-1027c18cd058"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.8915415532134496`"}], ",", "1805.8333849338592`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.9119162858321769`"}], ",", "1842.1412159045549`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.9270421310815931`"}], ",", "1921.1254062634785`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.9861210131559821`"}], ",", "2020.752645853608`"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.8225003695805548`"}], ",", "1706.4236235231213`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.997703835805997`"}], ",", "2056.812139522223`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.8982632881059093`"}], ",", "1795.2340607772135`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.056919986765202`"}], ",", "2196.0129440903643`"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.9151603283465218`"}], ",", "1850.74019814866`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.0842824567958886`"}], ",", "2227.9607280991036`"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.9581346129819107`*^9, 3.958134637536141*^9}, 
   3.9581349169768457`*^9, {3.9581350132231216`*^9, 3.9581350186787357`*^9}, 
   3.958135096460621*^9},
 CellLabel->
  "Out[1639]=",ExpressionUUID->"a7083e04-981d-4b49-a4ed-5722817c7785"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"syntheticOffData", "~", "Join", "~", "syntheticOnData"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.958134894495228*^9, 3.958134908402914*^9}, {
  3.958137501600416*^9, 3.9581375038329906`*^9}},
 CellLabel->
  "In[1744]:=",ExpressionUUID->"06bdbd6c-3748-4b3d-8e46-004f453616af"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[
      TagBox[
       {RGBColor[0.24, 0.6, 0.8], PointSize[0.012833333333333334`], 
        AbsoluteThickness[2], PointBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQPav/ud/3RFOsD4vp/urFgrjuCLbQi7W2WO4L/W
nDzDeU0EnJ93i/+SvSRCPtj45XX7cwj5psp/PIEZCHmL8rcr9AoRfM6S33vL
QhHq/cWSTLpiIh2uTFn9Lafqg/315L5Ta+QXOHyfP1uyW+mVPcO81DelirMc
Zh/+phy75J19Uo3Xvuku8xxC12aIR5d8tLeea1TEfmihw78bUpmcfB/sPZjD
/T7+mO8gni9dtqfvjX21WfeGuTZzHbS3WJldvvbWXvGU6S+7b3MdSgLCn/kc
+mB/WXLL7O4pCxwkyiz2P/R7b//2eWf8rFvzHLRP6cumGryzd1l2ijfo6VwH
q9JDak3tb/bP07+TFGo+x+HvDS6BbL23+7+8ezZrwok5Dl1+CU4hq97uz3pY
n9XAMs9B6MWa5b597/ffs5qxlWnyfAeRmk7vN4Gv9temxZ7auHKWg6quzQyD
t+/3V8YfuDBfcIED84zNyybte7N/0d0Fa9/zzHFQDJ71TuXlh/1TZ85ewKax
0GEjp3TAP4+3+y2eNHz7+mqOwy7Onf0WkR/3/1/d++R1+kIHAKaeyvA=
         "]]},
       Annotation[#, "Charting`Private`Tag#1"]& ],
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
     StyleBox[
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction["DynamicHighlight", {{
           Annotation[{
             Directive[
              PointSize[0.012833333333333334`], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2]], 
             Point[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQPav/ud/3RFOsD4vp/urFgrjuCLbQi7W2WO4L/W
nDzDeU0EnJ93i/+SvSRCPtj45XX7cwj5psp/PIEZCHmL8rcr9AoRfM6S33vL
QhHq/cWSTLpiIh2uTFn9Lafqg/315L5Ta+QXOHyfP1uyW+mVPcO81DelirMc
Zh/+phy75J19Uo3Xvuku8xxC12aIR5d8tLeea1TEfmihw78bUpmcfB/sPZjD
/T7+mO8gni9dtqfvjX21WfeGuTZzHbS3WJldvvbWXvGU6S+7b3MdSgLCn/kc
+mB/WXLL7O4pCxwkyiz2P/R7b//2eWf8rFvzHLRP6cumGryzd1l2ijfo6VwH
q9JDak3tb/bP07+TFGo+x+HvDS6BbL23+7+8ezZrwok5Dl1+CU4hq97uz3pY
n9XAMs9B6MWa5b597/ffs5qxlWnyfAeRmk7vN4Gv9temxZ7auHKWg6quzQyD
t+/3V8YfuDBfcIED84zNyybte7N/0d0Fa9/zzHFQDJ71TuXlh/1TZ85ewKax
0GEjp3TAP4+3+y2eNHz7+mqOwy7Onf0WkR/3/1/d++R1+kIHAKaeyvA=
              "]]}, "Charting`Private`Tag#1"]}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{-1.0842824567958886`, 1.0909071840677218`}, {
              0, 2273.0145431343967`}}, 
            "Frame" -> {{False, False}, {False, False}}, 
            "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
            "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
            GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               PointSize[0.012833333333333334`], 
               RGBColor[0.24, 0.6, 0.8], 
               AbsoluteThickness[2]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{-1.0842824567958886`, 1.0909071840677218`}, {
             0, 2273.0145431343967`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              PointSize[0.012833333333333334`], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}],
      Selectable->False]},
    Annotation[{{
       Annotation[{
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.24, 0.6, 0.8], 
          AbsoluteThickness[2]], 
         Point[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQPav/ud/3RFOsD4vp/urFgrjuCLbQi7W2WO4L/W
nDzDeU0EnJ93i/+SvSRCPtj45XX7cwj5psp/PIEZCHmL8rcr9AoRfM6S33vL
QhHq/cWSTLpiIh2uTFn9Lafqg/315L5Ta+QXOHyfP1uyW+mVPcO81DelirMc
Zh/+phy75J19Uo3Xvuku8xxC12aIR5d8tLeea1TEfmihw78bUpmcfB/sPZjD
/T7+mO8gni9dtqfvjX21WfeGuTZzHbS3WJldvvbWXvGU6S+7b3MdSgLCn/kc
+mB/WXLL7O4pCxwkyiz2P/R7b//2eWf8rFvzHLRP6cumGryzd1l2ijfo6VwH
q9JDak3tb/bP07+TFGo+x+HvDS6BbL23+7+8ezZrwok5Dl1+CU4hq97uz3pY
n9XAMs9B6MWa5b597/ffs5qxlWnyfAeRmk7vN4Gv9temxZ7auHKWg6quzQyD
t+/3V8YfuDBfcIED84zNyybte7N/0d0Fa9/zzHFQDJ71TuXlh/1TZ85ewKax
0GEjp3TAP4+3+y2eNHz7+mqOwy7Onf0WkR/3/1/d++R1+kIHAKaeyvA=
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
      "LayoutOptions" -> <|
       "PanelPlotLayout" -> <||>, 
        "PlotRange" -> {{-1.0842824567958886`, 1.0909071840677218`}, {
          0, 2273.0145431343967`}}, 
        "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
        "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
        "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[0.012833333333333334`], 
           RGBColor[0.24, 0.6, 0.8], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.24, 0.6, 0.8], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.95, 0.627, 0.1425], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.455, 0.7, 0.21], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.578, 0.51, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.4, 0.64, 1.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1., 0.75, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.8, 0.4, 0.76], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.637, 0.65, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-1.0842824567958886`, 1.0909071840677218`}, {
    0, 2273.0145431343967`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.9581349086734753`*^9, 3.958134917028453*^9}, {
   3.958135013280787*^9, 3.9581350187194223`*^9}, 3.958137504140223*^9},
 CellLabel->
  "Out[1744]=",ExpressionUUID->"c1f979a5-88a4-4ec7-8a7f-1cd23d8c2f8f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Reconstruct - Monte Carlo", "Subsection",
 CellChangeTimes->{{3.958135073445299*^9, 3.9581350751059303`*^9}, {
  3.958135264186873*^9, 
  3.958135273724639*^9}},ExpressionUUID->"36678abb-c851-43a6-8057-\
c63bd970a42a"],

Cell["\<\
Look at each \[OpenCurlyDoubleQuote]on\[CloseCurlyDoubleQuote] measurement. \
Use a random \[OpenCurlyDoubleQuote]off\[CloseCurlyDoubleQuote] measurement \
to infer the \[Sigma]z\
\>", "Text",
 CellChangeTimes->{{3.95813512103738*^9, 3.95813513273697*^9}, {
  3.9581353116612988`*^9, 
  3.958135314914562*^9}},ExpressionUUID->"9894410f-2866-4c63-81fb-\
4b0e95b04d84"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"results", " ", "=", " ", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Abs", "[", 
        FractionBox[
         SqrtBox[
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["\[Sigma]Off", "2"]}], "+", 
           SuperscriptBox["\[Sigma]Screen", "2"]}]], 
         RowBox[{"V", " ", "\[Kappa]"}]], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Sigma]Off", "->", 
          RowBox[{
           RowBox[{"RandomChoice", "[", "syntheticOffData", "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{"\[Sigma]Screen", "->", 
          RowBox[{"row", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{"V", "->", 
          RowBox[{"row", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{"\[Kappa]", "->", 
          RowBox[{"(", 
           RowBox[{"1", "/", "0.073"}], ")"}]}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"row", ",", "syntheticOnData"}], " ", "}"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Mean", "[", "results", "]"}], "\[IndentingNewLine]", 
 RowBox[{"StandardDeviation", "[", "results", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StandardDeviation", "[", "results", "]"}], "/", 
  RowBox[{"Sqrt", "[", 
   RowBox[{"Length", "[", "results", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.958135102331732*^9, 3.958135164604994*^9}, 
   3.958135352523882*^9},ExpressionUUID->"bfef0138-1caf-4dff-863f-\
a2ac7c2174a3"],

Cell[BoxData["149.0147269107878`"], "Output",
 CellChangeTimes->{{3.958135152697761*^9, 3.9581351812375526`*^9}},
 CellLabel->
  "Out[1674]=",ExpressionUUID->"f7fd3551-8443-4b91-811c-b571db838515"],

Cell[BoxData["2.026999221961475`"], "Output",
 CellChangeTimes->{{3.958135152697761*^9, 3.958135181239663*^9}},
 CellLabel->
  "Out[1675]=",ExpressionUUID->"01676465-a2a2-4b20-b78f-5b6cc3ab42ce"],

Cell[BoxData["0.45325080506450427`"], "Output",
 CellChangeTimes->{{3.958135152697761*^9, 3.9581351812410927`*^9}},
 CellLabel->
  "Out[1676]=",ExpressionUUID->"6f76938f-e75f-4c42-8eb3-0c8a32c77fb0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Reconstruct; assuming V isn\[CloseCurlyQuote]t known", "Subsubsection",
 CellChangeTimes->{{3.958135389706891*^9, 
  3.958135393410575*^9}},ExpressionUUID->"64e3ac2d-8419-44d9-861b-\
7fd7095b90fa"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"results", " ", "=", " ", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Abs", "[", 
        FractionBox[
         SqrtBox[
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["\[Sigma]Off", "2"]}], "+", 
           SuperscriptBox["\[Sigma]Screen", "2"]}]], 
         RowBox[{"V", " ", "\[Kappa]"}]], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Sigma]Off", "->", 
          RowBox[{
           RowBox[{"RandomChoice", "[", "syntheticOffData", "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{"\[Sigma]Screen", "->", 
          RowBox[{"row", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{"V", "->", "1"}], ",", 
         RowBox[{"\[Kappa]", "->", 
          RowBox[{"(", 
           RowBox[{"1", "/", "0.073"}], ")"}]}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"row", ",", "syntheticOnData"}], " ", "}"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Mean", "[", "results", "]"}], "\[IndentingNewLine]", 
 RowBox[{"StandardDeviation", "[", "results", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StandardDeviation", "[", "results", "]"}], "/", 
  RowBox[{"Sqrt", "[", 
   RowBox[{"Length", "[", "results", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{3.958135406299242*^9},
 CellLabel->
  "In[1740]:=",ExpressionUUID->"1e1214ad-0866-4cf9-830f-bdf9addff77a"],

Cell[BoxData["142.9458449631163`"], "Output",
 CellChangeTimes->{
  3.958135408589541*^9, {3.95813554249472*^9, 3.958135543817547*^9}},
 CellLabel->
  "Out[1741]=",ExpressionUUID->"c80df2ab-9ca0-42ef-a9e7-2aaa763817c9"],

Cell[BoxData["12.10426278321008`"], "Output",
 CellChangeTimes->{
  3.958135408589541*^9, {3.95813554249472*^9, 3.958135543819496*^9}},
 CellLabel->
  "Out[1742]=",ExpressionUUID->"d6646d5a-5394-41d8-88b5-258e0001b304"],

Cell[BoxData["2.706595440077854`"], "Output",
 CellChangeTimes->{
  3.958135408589541*^9, {3.95813554249472*^9, 3.958135543820918*^9}},
 CellLabel->
  "Out[1743]=",ExpressionUUID->"9d8cde20-25b9-4b9f-8911-0ecb8a7bb603"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1712, 1387},
WindowMargins->{{Automatic, 639}, {Automatic, 0}},
FrontEndVersion->"14.2 for Mac OS X ARM (64-bit) (December 26, 2024)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"6bcf1a4c-e365-42ff-a56c-c0fbf0b27fe8"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[576, 22, 878, 18, 151, "Input",ExpressionUUID->"5c28327a-b7e9-44d4-83e5-88843c3046cf"],
Cell[1457, 42, 846, 18, 34, "Output",ExpressionUUID->"f3f34146-1980-4a41-b103-2380cb27ad08"]
}, Open  ]],
Cell[2318, 63, 1713, 37, 744, "Input",ExpressionUUID->"4a3a60fb-72da-4c8f-ae61-1f421145749c"],
Cell[CellGroupData[{
Cell[4056, 104, 1289, 29, 155, "Input",ExpressionUUID->"f4076314-d383-4b9c-8f9e-8f726f3672ef"],
Cell[5348, 135, 4590, 97, 62, "Output",ExpressionUUID->"d7796f81-1ced-41b0-b34c-7523a620a298"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9975, 237, 451, 12, 29, "Input",ExpressionUUID->"b2cbb7d1-a9d0-4732-b69e-0f590f6f799e"],
Cell[10429, 251, 859, 24, 47, "Output",ExpressionUUID->"5eebf6a8-b743-4613-b973-269bea0b257c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11325, 280, 1094, 25, 91, "Input",ExpressionUUID->"0d6f2a76-6ffb-4b46-996f-e20b589083a5"],
Cell[12422, 307, 31192, 624, 535, "Output",ExpressionUUID->"b2dd72e9-0d07-4fc1-85ed-8173c2b8dc1c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43651, 936, 229, 4, 29, "Input",ExpressionUUID->"8fc52bc0-c136-4730-a8e0-82972abd83ca"],
Cell[43883, 942, 41691, 765, 111, "Output",ExpressionUUID->"1d265cc1-9150-49ae-b34a-dbfe326e2a54"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85611, 1712, 171, 3, 52, "Subtitle",ExpressionUUID->"a258dcff-923c-45a8-81ad-c2ed8303318b"],
Cell[CellGroupData[{
Cell[85807, 1719, 524, 14, 57, "Input",ExpressionUUID->"596bc78d-50c0-49ed-8a2e-e49fa1fc0c7f"],
Cell[86334, 1735, 418, 10, 26, "Message",ExpressionUUID->"ed587467-bdc4-4f66-a67c-d4e4d7282e8e"],
Cell[86755, 1747, 797, 24, 64, "Output",ExpressionUUID->"8dfb715f-88e4-4b09-9f1a-6e98abc98868"]
}, Open  ]],
Cell[87567, 1774, 266, 8, 49, "Input",ExpressionUUID->"773dfa11-4491-4e34-a75b-436ebbb1dd57"],
Cell[CellGroupData[{
Cell[87858, 1786, 948, 22, 189, "Input",ExpressionUUID->"c55e4d5a-96c1-48ce-b786-f0528c9c4588"],
Cell[88809, 1810, 782, 21, 66, "Output",ExpressionUUID->"61cabc10-ab6c-48f5-acec-8680a5d8b6c3"]
}, Open  ]],
Cell[89606, 1834, 269, 6, 33, "Text",ExpressionUUID->"1044c2d0-26c5-4a13-9e6b-c3e90c105532"],
Cell[89878, 1842, 1275, 40, 59, "Input",ExpressionUUID->"634fb283-744b-4e27-8b70-f0b40b213e7e"],
Cell[CellGroupData[{
Cell[91178, 1886, 757, 21, 43, "Input",ExpressionUUID->"fce7861a-ccf5-4b41-a8aa-9fed7dcdf998"],
Cell[91938, 1909, 1086, 33, 76, "Output",ExpressionUUID->"7c9982a7-5a4b-4107-9025-bf32b97116ba"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[93073, 1948, 229, 3, 52, "Subtitle",ExpressionUUID->"587cccd9-a182-436d-a034-1225e13798e4"],
Cell[CellGroupData[{
Cell[93327, 1955, 231, 4, 53, "Subsection",ExpressionUUID->"31934396-4d56-42f5-9411-b32a39d7bfd6"],
Cell[CellGroupData[{
Cell[93583, 1963, 823, 19, 90, "Input",ExpressionUUID->"a37ab1b5-bf63-45b8-8004-1d703046ddd8"],
Cell[94409, 1984, 496, 10, 47, "Output",ExpressionUUID->"300dfdaa-2a48-488b-8bb8-f76067a316a8"],
Cell[94908, 1996, 198, 3, 47, "Output",ExpressionUUID->"b030c428-e755-446a-9fdd-430bb1f56fff"],
Cell[95109, 2001, 200, 3, 47, "Output",ExpressionUUID->"cf79103a-170e-4bf5-8b44-1976666bd4ad"],
Cell[95312, 2006, 199, 3, 47, "Output",ExpressionUUID->"bbc1eae5-9f1a-439c-80ff-ab4ec3a3b25c"]
}, Open  ]],
Cell[95526, 2012, 201, 3, 33, "Text",ExpressionUUID->"333234a5-2c80-42f5-a2c9-09e60e4a49a9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95764, 2020, 242, 4, 53, "Subsection",ExpressionUUID->"02d626a9-f7f9-464d-b162-7f9917d684d7"],
Cell[CellGroupData[{
Cell[96031, 2028, 427, 13, 53, "Input",ExpressionUUID->"4e1e63b8-61d3-4a23-ac43-d537567cfb46"],
Cell[96461, 2043, 768, 15, 47, "Output",ExpressionUUID->"badb241c-41f2-4cf2-9e19-0a1504c876e8"]
}, Open  ]],
Cell[97244, 2061, 192, 3, 33, "Text",ExpressionUUID->"b0f898f4-704b-442a-9f1a-c7280b04ed45"]
}, Open  ]],
Cell[CellGroupData[{
Cell[97473, 2069, 237, 4, 53, "Subsection",ExpressionUUID->"ba764d93-01ae-44b3-a650-6b47f9d21a43"],
Cell[97713, 2075, 859, 26, 49, "Input",ExpressionUUID->"7e5825c3-6868-4d05-8312-dbb62c2da81d"],
Cell[98575, 2103, 475, 12, 35, "Input",ExpressionUUID->"c762a2c5-9916-4634-9e7a-f1cec900cc28"],
Cell[CellGroupData[{
Cell[99075, 2119, 873, 24, 49, "Input",ExpressionUUID->"43dffa15-5031-4fe1-9ff7-6f908b1e7383"],
Cell[99951, 2145, 312, 8, 47, "Output",ExpressionUUID->"efd45d5b-4f92-445f-9161-94e3fd1cc7eb"]
}, Open  ]],
Cell[100278, 2156, 291, 7, 33, "Text",ExpressionUUID->"3e1fc637-3496-4c6b-ad5b-2201b573584e"],
Cell[100572, 2165, 141, 3, 33, "Text",ExpressionUUID->"b3e3a680-c1b3-45ab-a8bb-f070625d2051"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[100762, 2174, 177, 3, 52, "Subtitle",ExpressionUUID->"17d5007b-ffad-4d9b-8ca7-c3459ce383b7"],
Cell[100942, 2179, 652, 17, 83, "Text",ExpressionUUID->"35c85509-0042-4354-8a62-9ac371b11cfa"],
Cell[CellGroupData[{
Cell[101619, 2200, 804, 23, 49, "Input",ExpressionUUID->"a42f69ef-b7b7-4733-9773-054d765c3460"],
Cell[102426, 2225, 494, 10, 47, "Output",ExpressionUUID->"1b4684ac-0987-4157-8c2a-fd219633e1d3"],
Cell[102923, 2237, 794, 15, 47, "Output",ExpressionUUID->"0e7afdab-4deb-46cf-86e5-821aba6db38c"]
}, Open  ]],
Cell[103732, 2255, 615, 12, 77, "Text",ExpressionUUID->"4a84711a-1fb1-4c40-837f-0d2a61a5c711"],
Cell[CellGroupData[{
Cell[104372, 2271, 159, 3, 53, "Subsection",ExpressionUUID->"a07cef80-2875-456f-9100-60ea63fd2520"],
Cell[CellGroupData[{
Cell[104556, 2278, 1375, 33, 190, "Input",ExpressionUUID->"33cc19c9-e180-4902-b052-17275eecb50e"],
Cell[105934, 2313, 195, 3, 47, "Output",ExpressionUUID->"cafc6277-416f-4a9b-8b09-93e38cd73dc2"],
Cell[106132, 2318, 196, 3, 47, "Output",ExpressionUUID->"191df986-744b-49b3-9f53-b42c189acdde"],
Cell[106331, 2323, 196, 3, 47, "Output",ExpressionUUID->"2996d4cb-2d66-4638-90d0-55fa3bc91509"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[106576, 2332, 208, 4, 53, "Subsection",ExpressionUUID->"4264834a-24e1-491c-9e79-1adc59837d00"],
Cell[CellGroupData[{
Cell[106809, 2340, 1375, 33, 190, "Input",ExpressionUUID->"c913763a-5ce6-41b4-ae40-7d5eb15f4309"],
Cell[108187, 2375, 195, 3, 47, "Output",ExpressionUUID->"abb285c4-846a-46b4-af77-cd44bc1cd3b9"],
Cell[108385, 2380, 196, 3, 47, "Output",ExpressionUUID->"b29dfdb1-c1e6-4899-ab06-f6b9e6c2e51f"],
Cell[108584, 2385, 195, 3, 47, "Output",ExpressionUUID->"95716e8d-42fc-43c9-911b-0a3481c5b1e3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[108828, 2394, 211, 4, 53, "Subsection",ExpressionUUID->"e60594ad-42bd-4caa-8337-77434960bd3f"],
Cell[CellGroupData[{
Cell[109064, 2402, 1376, 33, 190, "Input",ExpressionUUID->"fdfc827b-0d23-48a2-aab7-03036c069f2e"],
Cell[110443, 2437, 196, 3, 47, "Output",ExpressionUUID->"ee852f6e-03b4-4e8b-b3f5-49044ee64fd2"],
Cell[110642, 2442, 196, 3, 47, "Output",ExpressionUUID->"e3a19c28-ef2f-4b95-a86f-0778d2bbd393"],
Cell[110841, 2447, 197, 3, 47, "Output",ExpressionUUID->"1fad0e46-92f3-4225-9ff7-b97ea5cd1035"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[111099, 2457, 174, 3, 52, "Subtitle",ExpressionUUID->"15011076-857f-452c-89f7-584fb47397e1"],
Cell[CellGroupData[{
Cell[111298, 2464, 1210, 32, 151, "Input",ExpressionUUID->"5ecf1295-cab0-4c96-bc9e-162b98379eba"],
Cell[112511, 2498, 101815, 1734, 238, "Output",ExpressionUUID->"2bcf99b7-df34-4e43-84a6-41b2a64f2d24"]
}, Open  ]],
Cell[CellGroupData[{
Cell[214363, 4237, 1407, 37, 172, "Input",ExpressionUUID->"b8186d44-8db5-4d71-9ba8-ff9b54c65dab"],
Cell[215773, 4276, 41669, 765, 97, "Output",ExpressionUUID->"82f08747-6b51-45e4-8be9-31d5ea1990eb"],
Cell[257445, 5043, 814, 21, 59, "Output",ExpressionUUID->"de9a2090-6e8c-4d44-bffa-6fb17718cad8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[258296, 5069, 1410, 37, 172, "Input",ExpressionUUID->"30d555f5-59d7-486e-a864-e75c2d3d34f9"],
Cell[259709, 5108, 41650, 766, 97, "Output",ExpressionUUID->"8ff4ddcd-e9aa-4ec1-aaeb-a6cd19fcee53"],
Cell[301362, 5876, 719, 20, 59, "Output",ExpressionUUID->"231335d2-ffa3-4dd3-a616-2fb79e739435"]
}, Open  ]],
Cell[CellGroupData[{
Cell[302118, 5901, 1412, 37, 172, "Input",ExpressionUUID->"3dc88987-f81d-4e52-b53b-4620452c94f7"],
Cell[303533, 5940, 41726, 766, 97, "Output",ExpressionUUID->"e8e8631f-6256-4937-bbc6-8c12d6f39461"],
Cell[345262, 6708, 698, 19, 59, "Output",ExpressionUUID->"b55315b7-ee47-4e32-9fa0-1285739dcd69"]
}, Open  ]],
Cell[CellGroupData[{
Cell[345997, 6732, 1284, 35, 172, "Input",ExpressionUUID->"b3d54b17-6696-47d5-b1d2-b4439ec732c5"],
Cell[347284, 6769, 504, 12, 26, "Message",ExpressionUUID->"26df0aa7-e3af-4acc-95bc-e8aa8feac4fb"],
Cell[347791, 6783, 41452, 762, 97, "Output",ExpressionUUID->"26534fe9-fc4b-4601-a041-2028f6d4489a"],
Cell[389246, 7547, 506, 12, 26, "Message",ExpressionUUID->"c55f3e57-19f8-4450-8bf8-50a5e59877bd"],
Cell[389755, 7561, 648, 18, 59, "Output",ExpressionUUID->"f141cdfe-f25b-448c-b006-69545ac6692b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[390440, 7584, 152, 3, 29, "Input",ExpressionUUID->"3e44cee3-6d47-4fb1-99ce-758e6754fd9a"],
Cell[390595, 7589, 527, 12, 26, "Message",ExpressionUUID->"cfb00f04-0428-44d6-a177-c9b783d05582"],
Cell[391125, 7603, 297, 7, 33, "Output",ExpressionUUID->"95dc4fdd-3ba6-4a81-b942-3c7a25e77a9f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[391459, 7615, 2307, 54, 335, "Input",ExpressionUUID->"b480e728-2564-4b36-9f8a-2bdbc2d407b6"],
Cell[393769, 7671, 556, 13, 26, "Message",ExpressionUUID->"7b4be2cb-7fd7-404e-ba82-303cd27bbeaa"],
Cell[394328, 7686, 556, 13, 26, "Message",ExpressionUUID->"4099648f-3c6d-46e7-a21f-f64d596a5eee"],
Cell[394887, 7701, 556, 13, 26, "Message",ExpressionUUID->"221fb3d9-db68-4083-b505-25a36f47ceaa"],
Cell[395446, 7716, 525, 12, 26, "Message",ExpressionUUID->"6b08a3ce-abf8-4e18-8796-7df17f0e0382"]
}, Open  ]],
Cell[CellGroupData[{
Cell[396008, 7733, 2498, 60, 437, "Input",ExpressionUUID->"ae1b39e4-c492-4131-be36-32b64352cd57"],
Cell[398509, 7795, 244578, 4251, 482, "Output",ExpressionUUID->"a5863116-1c88-45f3-a89a-2aa1a31e7ba0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[643124, 12051, 1108, 29, 192, "Input",ExpressionUUID->"ccc28db5-2abf-46b5-b649-c9f9cfabb732"],
Cell[644235, 12082, 32240, 599, 572, "Output",ExpressionUUID->"83e6eb77-73f3-48c6-8614-0dca10be7973"]
}, Open  ]],
Cell[CellGroupData[{
Cell[676512, 12686, 1445, 40, 192, "Input",ExpressionUUID->"4275beaa-9e7d-496a-b06b-0601aec7c78f"],
Cell[677960, 12728, 76695, 1442, 447, "Output",ExpressionUUID->"9c30cee2-e941-45d9-9aab-0859b82d4fdc"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[754704, 14176, 166, 3, 52, "Subtitle",ExpressionUUID->"f15fe53a-c3a8-4f65-89ab-bd08578a8b71"],
Cell[754873, 14181, 549, 15, 32, "Input",ExpressionUUID->"a0b56043-a494-45f8-b31a-34878e3d5316"],
Cell[755425, 14198, 788, 18, 151, "Input",ExpressionUUID->"8d65229c-ded7-4696-8d5f-1c3955359733"],
Cell[CellGroupData[{
Cell[756238, 14220, 1132, 30, 112, "Input",ExpressionUUID->"8ed71186-e9c0-426d-b3db-c84509eef5c2"],
Cell[757373, 14252, 1046, 26, 47, "Output",ExpressionUUID->"e779a243-4e28-44ef-b612-88f4eccb72f8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[758456, 14283, 3287, 85, 319, "Input",ExpressionUUID->"35c42647-18de-46ff-9ada-3b09a944610f"],
Cell[761746, 14370, 1259, 28, 47, "Output",ExpressionUUID->"c614b886-2c60-4c92-9bbf-1027c18cd058"],
Cell[763008, 14400, 1509, 47, 67, "Output",ExpressionUUID->"a7083e04-981d-4b49-a4ed-5722817c7785"]
}, Open  ]],
Cell[CellGroupData[{
Cell[764554, 14452, 330, 7, 29, "Input",ExpressionUUID->"06bdbd6c-3748-4b3d-8e46-004f453616af"],
Cell[764887, 14461, 10023, 229, 263, "Output",ExpressionUUID->"c1f979a5-88a4-4ec7-8a7f-1cd23d8c2f8f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[774947, 14695, 224, 4, 53, "Subsection",ExpressionUUID->"36678abb-c851-43a6-8057-c63bd970a42a"],
Cell[775174, 14701, 377, 8, 33, "Text",ExpressionUUID->"9894410f-2866-4c63-81fb-4b0e95b04d84"],
Cell[CellGroupData[{
Cell[775576, 14713, 1664, 42, 210, "Input",ExpressionUUID->"bfef0138-1caf-4dff-863f-a2ac7c2174a3"],
Cell[777243, 14757, 197, 3, 47, "Output",ExpressionUUID->"f7fd3551-8443-4b91-811c-b571db838515"],
Cell[777443, 14762, 195, 3, 47, "Output",ExpressionUUID->"01676465-a2a2-4b20-b78f-5b6cc3ab42ce"],
Cell[777641, 14767, 199, 3, 47, "Output",ExpressionUUID->"6f76938f-e75f-4c42-8eb3-0c8a32c77fb0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[777877, 14775, 203, 3, 43, "Subsubsection",ExpressionUUID->"64e3ac2d-8419-44d9-861b-7fd7095b90fa"],
Cell[CellGroupData[{
Cell[778105, 14782, 1571, 40, 210, "Input",ExpressionUUID->"1e1214ad-0866-4cf9-830f-bdf9addff77a"],
Cell[779679, 14824, 219, 4, 47, "Output",ExpressionUUID->"c80df2ab-9ca0-42ef-a9e7-2aaa763817c9"],
Cell[779901, 14830, 219, 4, 47, "Output",ExpressionUUID->"d6646d5a-5394-41d8-88b5-258e0001b304"],
Cell[780123, 14836, 219, 4, 47, "Output",ExpressionUUID->"9d8cde20-25b9-4b9f-8911-0ecb8a7bb603"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

